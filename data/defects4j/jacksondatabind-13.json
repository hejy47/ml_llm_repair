{"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId": {"buggy_content": "@Override\npublic ReadableObjectId findObjectId(Object id, ObjectIdGenerator<?> gen, ObjectIdResolver resolverType) {\n        final ObjectIdGenerator.IdKey key = gen.key(id);\n    if (_objectIds == null) {\n        _objectIds = new LinkedHashMap<ObjectIdGenerator.IdKey, ReadableObjectId>();\n    } else {\n        ReadableObjectId entry = _objectIds.get(key);\n        if (entry != null) {\n            return entry;\n        }\n    }\n    // Not seen yet, must create entry and configure resolver.\n    ObjectIdResolver resolver = null;\n    if (_objectIdResolvers == null) {\n        _objectIdResolvers = new ArrayList<ObjectIdResolver>(8);\n    } else {\n        for (ObjectIdResolver res : _objectIdResolvers) {\n            if (res.canUseFor(resolverType)) {\n                resolver = res;\n                break;\n            }\n        }\n    }\n    if (resolver == null) {\n        resolver = resolverType.newForDeserialization(this);\n        // 19-Dec-2014, tatu: For final 2.5.0, remove temporary (2.4.x) work-around\n        //   needed to clear state between calls.\n        // !!! 18-Jun-2014, pgelinas: Temporary fix for [#490] until real\n        //    fix (for jackson-annotations, SimpleObjectIdResolver) can be added.\n                _objectIdResolvers.add(resolver);\n    }\n    ReadableObjectId entry = new ReadableObjectId(key);\n    entry.setResolver(resolver);\n    _objectIds.put(key, entry);\n    return entry;\n}", "method_range": "81-131", "fault_locations": "86,87"}, "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeSetAndReturn": {"buggy_content": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException {\n    // note: no null checks (unlike usually); deserializer should fail if one found\n    Object id = _valueDeserializer.deserialize(jp, ctxt);\n        ReadableObjectId roid = ctxt.findObjectId(id, _objectIdReader.generator, _objectIdReader.resolver);\n    roid.bindItem(instance);\n    // also: may need to set a property value as well\n    SettableBeanProperty idProp = _objectIdReader.idProperty;\n    if (idProp != null) {\n        return idProp.setAndReturn(instance, id);\n    }\n    return instance;\n}", "method_range": "80-101", "fault_locations": "91,92"}}