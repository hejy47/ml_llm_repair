{"com.google.javascript.jscomp.NodeUtil.getImpureBooleanValue": {"buggy_content": "static TernaryValue getImpureBooleanValue(Node n) {\n    switch(n.getType()) {\n        case Token.ASSIGN:\n        case Token.COMMA:\n            // For ASSIGN and COMMA the value is the value of the RHS.\n            return getImpureBooleanValue(n.getLastChild());\n        case Token.NOT:\n            TernaryValue value = getImpureBooleanValue(n.getLastChild());\n            return value.not();\n        case Token.AND:\n            {\n                TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());\n                TernaryValue rhs = getImpureBooleanValue(n.getLastChild());\n                return lhs.and(rhs);\n            }\n        case Token.OR:\n            {\n                TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());\n                TernaryValue rhs = getImpureBooleanValue(n.getLastChild());\n                return lhs.or(rhs);\n            }\n        case Token.HOOK:\n            {\n                TernaryValue trueValue = getImpureBooleanValue(n.getFirstChild().getNext());\n                TernaryValue falseValue = getImpureBooleanValue(n.getLastChild());\n                if (trueValue.equals(falseValue)) {\n                    return trueValue;\n                } else {\n                    return TernaryValue.UNKNOWN;\n                }\n            }\n        case Token.ARRAYLIT:\n        case Token.OBJECTLIT:\n            // ignoring side-effects\n            return TernaryValue.TRUE;\n        default:\n            return getPureBooleanValue(n);\n    }\n}", "method_range": "74-112", "fault_locations": "107,108"}, "com.google.javascript.jscomp.NodeUtil.getPureBooleanValue": {"buggy_content": "static TernaryValue getPureBooleanValue(Node n) {\n    switch(n.getType()) {\n        case Token.STRING:\n            return TernaryValue.forBoolean(n.getString().length() > 0);\n        case Token.NUMBER:\n            return TernaryValue.forBoolean(n.getDouble() != 0);\n        case Token.NOT:\n            return getPureBooleanValue(n.getLastChild()).not();\n        case Token.NULL:\n        case Token.FALSE:\n            return TernaryValue.FALSE;\n        case Token.VOID:\n            return TernaryValue.FALSE;\n        case Token.NAME:\n            String name = n.getString();\n            if (\"undefined\".equals(name) || \"NaN\".equals(name)) {\n                // We assume here that programs don't change the value of the keyword\n                // undefined to something other than the value undefined.\n                return TernaryValue.FALSE;\n            } else if (\"Infinity\".equals(name)) {\n                return TernaryValue.TRUE;\n            }\n            break;\n        case Token.TRUE:\n        case Token.REGEXP:\n            return TernaryValue.TRUE;\n        case Token.ARRAYLIT:\n        case Token.OBJECTLIT:\n            if (!mayHaveSideEffects(n)) {\n                return TernaryValue.TRUE;\n            }\n            break;\n    }\n    return TernaryValue.UNKNOWN;\n}", "method_range": "120-163", "fault_locations": "135,136,137"}}