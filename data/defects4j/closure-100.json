{"com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse": {"buggy_content": "public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() == Token.FUNCTION) {\n        // Don't traverse functions that are constructors or have the @this\n        // annotation.\n        JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n        if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.hasThisType())) {\n            return false;\n        }\n        // Don't traverse functions unless they would normally\n        // be able to have a @this annotation associated with them. e.g.,\n        // var a = function() { }; // or\n        // function a() {} // or\n        // a.x = function() {};\n    }\n    if (parent != null && parent.getType() == Token.ASSIGN) {\n        Node lhs = parent.getFirstChild();\n        Node rhs = lhs.getNext();\n        if (n == lhs) {\n            // Always traverse the left side of the assignment. To handle\n            // nested assignments properly (e.g., (a = this).property = c;),\n            // assignLhsChild should not be overridden.\n            if (assignLhsChild == null) {\n                assignLhsChild = lhs;\n            }\n        } else {\n            // Only traverse the right side if it's not an assignment to a prototype\n            // property or subproperty.\n            if (lhs.getType() == Token.GETPROP) {\n                if (lhs.getLastChild().getString().equals(\"prototype\")) {\n                    return false;\n                }\n                String leftName = lhs.getQualifiedName();\n                if (leftName != null && leftName.contains(\".prototype.\")) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}", "method_range": "84-128", "fault_locations": "89,90"}, "com.google.javascript.jscomp.CheckGlobalThis.shouldReportThis": {"buggy_content": "private boolean shouldReportThis(Node n, Node parent) {\n    if (assignLhsChild != null) {\n        // Always report a THIS on the left side of an assign.\n        return true;\n    }\n    // Also report a THIS with a property access.\n    return false;\n}", "method_range": "139-147", "fault_locations": "146"}}