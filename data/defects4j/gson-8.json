{"com.google.gson.internal.UnsafeAllocator.create": {"buggy_content": "public static UnsafeAllocator create() {\n    // try JVM\n    // public class Unsafe {\n    //   public Object allocateInstance(Class<?> type);\n    // }\n    try {\n        Class<?> unsafeClass = Class.forName(\"sun.misc.Unsafe\");\n        Field f = unsafeClass.getDeclaredField(\"theUnsafe\");\n        f.setAccessible(true);\n        final Object unsafe = f.get(null);\n        final Method allocateInstance = unsafeClass.getMethod(\"allocateInstance\", Class.class);\n        return new UnsafeAllocator() {\n\n            @Override\n            @SuppressWarnings(\"unchecked\")\n            public <T> T newInstance(Class<T> c) throws Exception {\n                return (T) allocateInstance.invoke(unsafe, c);\n            }\n        };\n    } catch (Exception ignored) {\n    }\n    // try dalvikvm, post-gingerbread\n    // public class ObjectStreamClass {\n    //   private static native int getConstructorId(Class<?> c);\n    //   private static native Object newInstance(Class<?> instantiationClass, int methodId);\n    // }\n    try {\n        Method getConstructorId = ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\", Class.class);\n        getConstructorId.setAccessible(true);\n        final int constructorId = (Integer) getConstructorId.invoke(null, Object.class);\n        final Method newInstance = ObjectStreamClass.class.getDeclaredMethod(\"newInstance\", Class.class, int.class);\n        newInstance.setAccessible(true);\n        return new UnsafeAllocator() {\n\n            @Override\n            @SuppressWarnings(\"unchecked\")\n            public <T> T newInstance(Class<T> c) throws Exception {\n                return (T) newInstance.invoke(null, c, constructorId);\n            }\n        };\n    } catch (Exception ignored) {\n    }\n    // try dalvikvm, pre-gingerbread\n    // public class ObjectInputStream {\n    //   private static native Object newInstance(\n    //     Class<?> instantiationClass, Class<?> constructorClass);\n    // }\n    try {\n        final Method newInstance = ObjectInputStream.class.getDeclaredMethod(\"newInstance\", Class.class, Class.class);\n        newInstance.setAccessible(true);\n        return new UnsafeAllocator() {\n\n            @Override\n            @SuppressWarnings(\"unchecked\")\n            public <T> T newInstance(Class<T> c) throws Exception {\n                return (T) newInstance.invoke(null, c, Object.class);\n            }\n        };\n    } catch (Exception ignored) {\n    }\n    // give up\n    return new UnsafeAllocator() {\n\n        @Override\n        public <T> T newInstance(Class<T> c) {\n            throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n        }\n    };\n}", "method_range": "33-103", "fault_locations": "47,48,70,71,89,90"}, "com.google.gson.internal.UnsafeAllocator.newInstance": {"buggy_content": "@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> T newInstance(Class<T> c) throws Exception {\n    return (T) allocateInstance.invoke(unsafe, c);\n}", "method_range": "45-49", "fault_locations": "47,48"}, "com.google.gson.internal.UnsafeAllocator.newInstance2": {"buggy_content": "@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> T newInstance(Class<T> c) throws Exception {\n    return (T) newInstance.invoke(null, c, constructorId);\n}", "method_range": "68-72", "fault_locations": "70,71"}, "com.google.gson.internal.UnsafeAllocator.newInstance3": {"buggy_content": "@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> T newInstance(Class<T> c) throws Exception {\n    return (T) newInstance.invoke(null, c, Object.class);\n}", "method_range": "87-91", "fault_locations": "89,90"}}