{"org.joda.time.chrono.GJChronology.getInstance": {"buggy_content": "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek) {\n    zone = DateTimeUtils.getZone(zone);\n    Instant cutoverInstant;\n    if (gregorianCutover == null) {\n        cutoverInstant = DEFAULT_CUTOVER;\n    } else {\n        cutoverInstant = gregorianCutover.toInstant();\n    }\n    GJChronology chrono;\n    synchronized (cCache) {\n        ArrayList<GJChronology> chronos = cCache.get(zone);\n        if (chronos == null) {\n            chronos = new ArrayList<GJChronology>(2);\n            cCache.put(zone, chronos);\n        } else {\n            for (int i = chronos.size(); --i >= 0; ) {\n                chrono = chronos.get(i);\n                if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover())) {\n                    return chrono;\n                }\n            }\n        }\n        if (zone == DateTimeZone.UTC) {\n            chrono = new GJChronology(JulianChronology.getInstance(zone, minDaysInFirstWeek), GregorianChronology.getInstance(zone, minDaysInFirstWeek), cutoverInstant);\n        } else {\n            chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);\n            chrono = new GJChronology(ZonedChronology.getInstance(chrono, zone), chrono.iJulianChronology, chrono.iGregorianChronology, chrono.iCutoverInstant);\n        }\n        chronos.add(chrono);\n    }\n    return chrono;\n}", "method_range": "185-230", "fault_locations": "192,195"}, "org.joda.time.chrono.GJChronology.add": {"buggy_content": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "method_range": "973-993", "fault_locations": "979"}, "org.joda.time.chrono.GJChronology.add1": {"buggy_content": "public long add(long instant, long value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "method_range": "995-1015", "fault_locations": "1001"}}