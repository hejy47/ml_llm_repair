{"com.google.javascript.jscomp.TypedScopeCreator.visit": {"buggy_content": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    inputId = t.getInputId();\n    attachLiteralTypes(t, n);\n    switch(n.getType()) {\n        case Token.CALL:\n            checkForClassDefiningCalls(t, n, parent);\n            checkForCallingConventionDefiningCalls(n, delegateCallingConventions);\n            break;\n        case Token.FUNCTION:\n            if (t.getInput() == null || !t.getInput().isExtern()) {\n                nonExternFunctions.add(n);\n            }\n            // Hoisted functions are handled during pre-traversal.\n            if (!NodeUtil.isHoistedFunctionDeclaration(n)) {\n                defineFunctionLiteral(n, parent);\n            }\n            break;\n        case Token.ASSIGN:\n            // Handle initialization of properties.\n            Node firstChild = n.getFirstChild();\n            if (firstChild.isGetProp() && firstChild.isQualifiedName()) {\n                maybeDeclareQualifiedName(t, n.getJSDocInfo(), firstChild, n, firstChild.getNext());\n            }\n            break;\n        case Token.CATCH:\n            defineCatch(n, parent);\n            break;\n        case Token.VAR:\n            defineVar(n, parent);\n            break;\n        case Token.GETPROP:\n            // Handle stubbed properties.\n            if (parent.isExprResult() && n.isQualifiedName()) {\n                maybeDeclareQualifiedName(t, n.getJSDocInfo(), n, parent, null);\n            }\n            break;\n    }\n    // Analyze any @lends object literals in this statement.\n}", "method_range": "497-547", "fault_locations": "546,547"}, "com.google.javascript.jscomp.TypedScopeCreator.attachLiteralTypes": {"buggy_content": "private void attachLiteralTypes(NodeTraversal t, Node n) {\n    switch(n.getType()) {\n        case Token.NULL:\n            n.setJSType(getNativeType(NULL_TYPE));\n            break;\n        case Token.VOID:\n            n.setJSType(getNativeType(VOID_TYPE));\n            break;\n        case Token.STRING:\n            // Defer keys to the Token.OBJECTLIT case\n            if (!NodeUtil.isObjectLitKey(n, n.getParent())) {\n                n.setJSType(getNativeType(STRING_TYPE));\n            }\n            break;\n        case Token.NUMBER:\n            n.setJSType(getNativeType(NUMBER_TYPE));\n            break;\n        case Token.TRUE:\n        case Token.FALSE:\n            n.setJSType(getNativeType(BOOLEAN_TYPE));\n            break;\n        case Token.REGEXP:\n            n.setJSType(getNativeType(REGEXP_TYPE));\n            break;\n        case Token.OBJECTLIT:\n            defineObjectLiteral(n);\n            break;\n    }\n}", "method_range": "549-586", "fault_locations": "579,580,581"}}