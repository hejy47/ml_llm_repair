{"com.google.javascript.jscomp.FlowSensitiveInlineVariables.getNumUseInUseCfgNode": {"buggy_content": "private void getNumUseInUseCfgNode(final Node cfgNode) {\n    numUsesWithinCfgNode = 0;\n    AbstractCfgNodeTraversalCallback gatherCb = new AbstractCfgNodeTraversalCallback() {\n\n        @Override\n        public void visit(NodeTraversal t, Node n, Node parent) {\n            if (n.isName() && n.getString().equals(varName) && // We make a special exception when the entire cfgNode is a chain\n            // of assignments, since in that case the assignment statements\n            // will happen after the inlining of the right hand side.\n            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact\n            //   and remove this special case.\n            !(parent.isAssign() && (parent.getFirstChild() == n))) {\n                // Don't count lhs of top-level assignment chain\n                numUsesWithinCfgNode++;\n            }\n        }\n    };\n    NodeTraversal.traverse(compiler, cfgNode, gatherCb);\n}", "method_range": "474-498", "fault_locations": "482,486,487,488,489,491,492"}}