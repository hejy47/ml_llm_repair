{"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.BZip2CompressorInputStream": {"buggy_content": "public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException {\n    this.in = in;\n    this.decompressConcatenated = decompressConcatenated;\n    init(true);\n    initBlock();\n    setupBlock();\n}", "method_range": "129-136", "fault_locations": "135"}, "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0": {"buggy_content": "private int read0() throws IOException {\n    final int retChar = this.currentChar;\n    switch(currentState) {\n        case EOF:\n            return -1;\n        case START_BLOCK_STATE:\n            throw new IllegalStateException();\n        case RAND_PART_A_STATE:\n            throw new IllegalStateException();\n        case RAND_PART_B_STATE:\n            setupRandPartB();\n            break;\n        case RAND_PART_C_STATE:\n            setupRandPartC();\n            break;\n        case NO_RAND_PART_A_STATE:\n            throw new IllegalStateException();\n        case NO_RAND_PART_B_STATE:\n            setupNoRandPartB();\n            break;\n        case NO_RAND_PART_C_STATE:\n            setupNoRandPartC();\n            break;\n        default:\n            throw new IllegalStateException();\n    }\n    return retChar;\n}", "method_range": "198-233", "fault_locations": "199,201,202,205,206,207,208,209,211,212,213,214,215,216,222,223,226,227,232"}, "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupRandPartA": {"buggy_content": "private int setupRandPartA() throws IOException {\n    if (this.su_i2 <= this.last) {\n        this.su_chPrev = this.su_ch2;\n        int su_ch2Shadow = this.data.ll8[this.su_tPos] & 0xff;\n        this.su_tPos = this.data.tt[this.su_tPos];\n        if (this.su_rNToGo == 0) {\n            this.su_rNToGo = Rand.rNums(this.su_rTPos) - 1;\n            if (++this.su_rTPos == 512) {\n                this.su_rTPos = 0;\n            }\n        } else {\n            this.su_rNToGo--;\n        }\n        this.su_ch2 = su_ch2Shadow ^= (this.su_rNToGo == 1) ? 1 : 0;\n        this.su_i2++;\n        this.currentChar = su_ch2Shadow;\n        this.currentState = RAND_PART_B_STATE;\n        this.crc.updateCRC(su_ch2Shadow);\n        return su_ch2Shadow;\n    } else {\n        endBlock();\n        initBlock();\n        return setupBlock();\n    }\n}", "method_range": "838-862", "fault_locations": "853"}, "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA": {"buggy_content": "private int setupNoRandPartA() throws IOException {\n    if (this.su_i2 <= this.last) {\n        this.su_chPrev = this.su_ch2;\n        int su_ch2Shadow = this.data.ll8[this.su_tPos] & 0xff;\n        this.su_ch2 = su_ch2Shadow;\n        this.su_tPos = this.data.tt[this.su_tPos];\n        this.su_i2++;\n        this.currentChar = su_ch2Shadow;\n        this.currentState = NO_RAND_PART_B_STATE;\n        this.crc.updateCRC(su_ch2Shadow);\n        return su_ch2Shadow;\n    } else {\n        this.currentState = NO_RAND_PART_A_STATE;\n        endBlock();\n        initBlock();\n        return setupBlock();\n    }\n}", "method_range": "864-881", "fault_locations": "871"}, "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupRandPartC": {"buggy_content": "private int setupRandPartC() throws IOException {\n    if (this.su_j2 < this.su_z) {\n        this.currentChar = this.su_ch2;\n        this.crc.updateCRC(this.su_ch2);\n        this.su_j2++;\n        return this.su_ch2;\n    } else {\n        this.currentState = RAND_PART_A_STATE;\n        this.su_i2++;\n        this.su_count = 0;\n        return setupRandPartA();\n    }\n}", "method_range": "911-923", "fault_locations": "913"}, "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartC": {"buggy_content": "private int setupNoRandPartC() throws IOException {\n    if (this.su_j2 < this.su_z) {\n        int su_ch2Shadow = this.su_ch2;\n        this.currentChar = su_ch2Shadow;\n        this.crc.updateCRC(su_ch2Shadow);\n        this.su_j2++;\n        this.currentState = NO_RAND_PART_C_STATE;\n        return su_ch2Shadow;\n    } else {\n        this.su_i2++;\n        this.su_count = 0;\n        return setupNoRandPartA();\n    }\n}", "method_range": "939-952", "fault_locations": "942"}}