{"org.apache.commons.csv.CSVFormat.CSVFormat": {"buggy_content": "private CSVFormat(final char delimiter, final Character quoteChar, final Quote quotePolicy, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final String[] header, final boolean skipHeaderRecord) {\n    if (isLineBreak(delimiter)) {\n        throw new IllegalArgumentException(\"The delimiter cannot be a line break\");\n    }\n    this.delimiter = delimiter;\n    this.quoteChar = quoteChar;\n    this.quotePolicy = quotePolicy;\n    this.commentStart = commentStart;\n    this.escape = escape;\n    this.ignoreSurroundingSpaces = ignoreSurroundingSpaces;\n    this.ignoreEmptyLines = ignoreEmptyLines;\n    this.recordSeparator = recordSeparator;\n    this.nullString = nullString;\n    if (header == null) {\n        this.header = null;\n    } else {\n        this.header = header.clone();\n    }\n    this.skipHeaderRecord = skipHeaderRecord;\n}", "method_range": "296-319", "fault_locations": "315,316"}, "org.apache.commons.csv.CSVFormat.validate": {"buggy_content": "void validate() throws IllegalStateException {\n    if (quoteChar != null && delimiter == quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same ('\" + quoteChar + \"')\");\n    }\n    if (escape != null && delimiter == escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same ('\" + escape + \"')\");\n    }\n    if (commentStart != null && delimiter == commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same ('\" + commentStart + \"')\");\n    }\n    if (quoteChar != null && quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same ('\" + commentStart + \"')\");\n    }\n    if (escape != null && escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same ('\" + commentStart + \"')\");\n    }\n    if (escape == null && quotePolicy == Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n    if (header != null) {\n        final Set<String> set = new HashSet<String>(header.length);\n        set.addAll(Arrays.asList(header));\n        if (set.size() != header.length) {\n            throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n        }\n    }\n}", "method_range": "635-672", "fault_locations": "665,666,667,668,669,670,671"}}