{"com.fasterxml.jackson.databind.util.TokenBuffer.writeString": {"buggy_content": "@Override\npublic void writeString(String text) throws IOException {\n    if (text == null) {\n        writeNull();\n    } else {\n        _append(JsonToken.VALUE_STRING, text);\n    }\n}", "method_range": "667-674", "fault_locations": "672"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeString1": {"buggy_content": "@Override\npublic void writeString(SerializableString text) throws IOException {\n    if (text == null) {\n        writeNull();\n    } else {\n        _append(JsonToken.VALUE_STRING, text);\n    }\n}", "method_range": "681-688", "fault_locations": "684,685,686"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue": {"buggy_content": "@Override\npublic void writeRawValue(String text) throws IOException {\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "method_range": "729-732", "fault_locations": "729,731"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue3": {"buggy_content": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "method_range": "734-740", "fault_locations": "735,736,739,740"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue4": {"buggy_content": "@Override\npublic void writeRawValue(char[] text, int offset, int len) throws IOException {\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n}", "method_range": "742-745", "fault_locations": "744"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber": {"buggy_content": "@Override\npublic void writeNumber(short i) throws IOException {\n    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n}", "method_range": "753-756", "fault_locations": "753,754,755"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber6": {"buggy_content": "@Override\npublic void writeNumber(int i) throws IOException {\n    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n}", "method_range": "758-761", "fault_locations": "758,760,761"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber7": {"buggy_content": "@Override\npublic void writeNumber(long l) throws IOException {\n    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n}", "method_range": "763-766", "fault_locations": "765,766"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber8": {"buggy_content": "@Override\npublic void writeNumber(double d) throws IOException {\n    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n}", "method_range": "768-771", "fault_locations": "770"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber9": {"buggy_content": "@Override\npublic void writeNumber(float f) throws IOException {\n    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n}", "method_range": "773-776", "fault_locations": "773,775"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber10": {"buggy_content": "@Override\npublic void writeNumber(BigDecimal dec) throws IOException {\n    if (dec == null) {\n        writeNull();\n    } else {\n        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n    }\n}", "method_range": "778-785", "fault_locations": "780,781,783"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber11": {"buggy_content": "@Override\npublic void writeNumber(BigInteger v) throws IOException {\n    if (v == null) {\n        writeNull();\n    } else {\n        _append(JsonToken.VALUE_NUMBER_INT, v);\n    }\n}", "method_range": "787-794", "fault_locations": "788,789,792,793"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber12": {"buggy_content": "@Override\npublic void writeNumber(String encodedValue) throws IOException {\n        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n}", "method_range": "796-802", "fault_locations": "796,797,801"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeBoolean": {"buggy_content": "@Override\npublic void writeBoolean(boolean state) throws IOException {\n    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n}", "method_range": "804-807", "fault_locations": "806"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeNull": {"buggy_content": "@Override\npublic void writeNull() throws IOException {\n    _append(JsonToken.VALUE_NULL);\n}", "method_range": "809-812", "fault_locations": "811"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeObject": {"buggy_content": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "method_range": "820-841", "fault_locations": "820,821,829,835,836,837"}, "com.fasterxml.jackson.databind.util.TokenBuffer.writeTree": {"buggy_content": "@Override\npublic void writeTree(TreeNode node) throws IOException {\n    if (node == null) {\n        writeNull();\n        return;\n    }\n    if (_objectCodec == null) {\n        // as with 'writeObject()', is codec optional?\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n    } else {\n        _objectCodec.writeTree(this, node);\n    }\n}", "method_range": "843-857", "fault_locations": "853"}, "com.fasterxml.jackson.databind.util.TokenBuffer._append": {"buggy_content": "protected final void _append(JsonToken type, Object value) {\n    Segment next = _hasNativeId ? _last.append(_appendAt, type, value, _objectId, _typeId) : _last.append(_appendAt, type, value);\n    if (next == null) {\n        ++_appendAt;\n    } else {\n        _last = next;\n        _appendAt = 1;\n    }\n}", "method_range": "1072-1083", "fault_locations": "1072,1073,1079,1080"}}