{"org.mockito.internal.creation.MockSettingsImpl.serializable": {"buggy_content": "public MockSettings serializable() {\n    return this.extraInterfaces(java.io.Serializable.class);\n}", "method_range": "21-23", "fault_locations": "22"}, "org.mockito.internal.creation.MockSettingsImpl.isSerializable": {"buggy_content": "public boolean isSerializable() {\n    return extraInterfaces != null && java.util.Arrays.asList(extraInterfaces).contains(java.io.Serializable.class);\n}", "method_range": "73-75", "fault_locations": "73,74"}, "org.mockito.internal.util.MockUtil.createMock": {"buggy_content": "public <T> T createMock(Class<T> classToMock, MockSettingsImpl settings) {\n    creationValidator.validateType(classToMock);\n    creationValidator.validateExtraInterfaces(classToMock, settings.getExtraInterfaces());\n    creationValidator.validateMockedType(classToMock, settings.getSpiedInstance());\n    settings.initiateMockName(classToMock);\n    MockHandler<T> mockHandler = new MockHandler<T>(settings);\n    MethodInterceptorFilter filter = new MethodInterceptorFilter(mockHandler, settings);\n    Class<?>[] interfaces = settings.getExtraInterfaces();\n    Class<?>[] ancillaryTypes;\n    ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;\n    Object spiedInstance = settings.getSpiedInstance();\n    T mock = ClassImposterizer.INSTANCE.imposterise(filter, classToMock, ancillaryTypes);\n    if (spiedInstance != null) {\n        new LenientCopyTool().copyToMock(spiedInstance, mock);\n    }\n    return mock;\n}", "method_range": "33-56", "fault_locations": "44,45,46"}}