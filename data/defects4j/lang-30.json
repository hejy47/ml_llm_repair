{"org.apache.commons.lang3.StringUtils.indexOfAny": {"buggy_content": "// IndexOfAny chars\n//-----------------------------------------------------------------------\npublic static int indexOfAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return INDEX_NOT_FOUND;\n    }\n    int csLen = cs.length();\n    int searchLen = searchChars.length;\n    for (int i = 0; i < csLen; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == ch) {\n                // ch is a supplementary character\n                return i;\n            }\n        }\n    }\n    return INDEX_NOT_FOUND;\n}", "method_range": "1371-1387", "fault_locations": "1375,1376,1377,1380,1381,1382,1383"}, "org.apache.commons.lang3.StringUtils.containsAny": {"buggy_content": "// ContainsAny\n//-----------------------------------------------------------------------\npublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    int csLast = csLength - 1;\n    int searchLast = searchLength - 1;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLength; j++) {\n            if (searchChars[j] == ch) {\n                if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n                    // missing low surrogate, fine, like String.indexOf(String)\n                    if (searchChars[j + 1] == cs.charAt(i + 1)) {\n                        return true;\n                    }\n                } else {\n                    // ch is in the Basic Multilingual Plane\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}", "method_range": "1443-1468", "fault_locations": "1443,1453,1454,1455,1457"}, "org.apache.commons.lang3.StringUtils.containsAny2": {"buggy_content": "public static boolean containsAny(CharSequence cs, String searchChars) {\n    if (searchChars == null) {\n        return false;\n    }\n    return containsAny(cs, searchChars.toCharArray());\n}", "method_range": "1497-1502", "fault_locations": "1497"}, "org.apache.commons.lang3.StringUtils.indexOfAnyBut": {"buggy_content": "// IndexOfAnyBut chars\n//-----------------------------------------------------------------------\npublic static int indexOfAnyBut(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return INDEX_NOT_FOUND;\n    }\n    int csLen = cs.length();\n    int searchLen = searchChars.length;\n    outer: for (int i = 0; i < csLen; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == ch) {\n                continue outer;\n            }\n        }\n        return i;\n    }\n    return INDEX_NOT_FOUND;\n}", "method_range": "1528-1545", "fault_locations": "1528,1529,1530,1534,1535,1536"}, "org.apache.commons.lang3.StringUtils.indexOfAnyBut4": {"buggy_content": "public static int indexOfAnyBut(String str, String searchChars) {\n    if (isEmpty(str) || isEmpty(searchChars)) {\n        return INDEX_NOT_FOUND;\n    }\n    int strLen = str.length();\n    for (int i = 0; i < strLen; i++) {\n        char ch = str.charAt(i);\n        if (searchChars.indexOf(ch) < 0) {\n            return i;\n        }\n    }\n    return INDEX_NOT_FOUND;\n}", "method_range": "1569-1581", "fault_locations": "1571,1572,1573,1576"}, "org.apache.commons.lang3.StringUtils.containsNone": {"buggy_content": "// ContainsNone\n//-----------------------------------------------------------------------\npublic static boolean containsNone(CharSequence cs, char[] searchChars) {\n    if (cs == null || searchChars == null) {\n        return true;\n    }\n    int csLen = cs.length();\n    int searchLen = searchChars.length;\n    for (int i = 0; i < csLen; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLen; j++) {\n            if (searchChars[j] == ch) {\n                // missing low surrogate, fine, like String.indexOf(String)\n                // ch is in the Basic Multilingual Plane\n                return false;\n            }\n        }\n    }\n    return true;\n}", "method_range": "1673-1690", "fault_locations": "1673,1674,1677,1678,1679,1680,1681"}}