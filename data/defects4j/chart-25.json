{"org.jfree.chart.renderer.category.StatisticalBarRenderer.drawHorizontalItem": {"buggy_content": "protected void drawHorizontalItem(Graphics2D g2, CategoryItemRendererState state, Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis, StatisticalCategoryDataset dataset, int row, int column) {\n    RectangleEdge xAxisLocation = plot.getDomainAxisEdge();\n    // BAR Y\n    double rectY = domainAxis.getCategoryStart(column, getColumnCount(), dataArea, xAxisLocation);\n    int seriesCount = getRowCount();\n    int categoryCount = getColumnCount();\n    if (seriesCount > 1) {\n        double seriesGap = dataArea.getHeight() * getItemMargin() / (categoryCount * (seriesCount - 1));\n        rectY = rectY + row * (state.getBarWidth() + seriesGap);\n    } else {\n        rectY = rectY + row * state.getBarWidth();\n    }\n    // BAR X\n    Number meanValue = dataset.getMeanValue(row, column);\n    double value = meanValue.doubleValue();\n    double base = 0.0;\n    double lclip = getLowerClip();\n    double uclip = getUpperClip();\n    if (uclip <= 0.0) {\n        // cases 1, 2, 3 and 4\n        if (value >= uclip) {\n            // bar is not visible\n            return;\n        }\n        base = uclip;\n        if (value <= lclip) {\n            value = lclip;\n        }\n    } else if (lclip <= 0.0) {\n        // cases 5, 6, 7 and 8\n        if (value >= uclip) {\n            value = uclip;\n        } else {\n            if (value <= lclip) {\n                value = lclip;\n            }\n        }\n    } else {\n        // cases 9, 10, 11 and 12\n        if (value <= lclip) {\n            // bar is not visible\n            return;\n        }\n        base = getLowerClip();\n        if (value >= uclip) {\n            value = uclip;\n        }\n    }\n    RectangleEdge yAxisLocation = plot.getRangeAxisEdge();\n    double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);\n    double transY2 = rangeAxis.valueToJava2D(value, dataArea, yAxisLocation);\n    double rectX = Math.min(transY2, transY1);\n    double rectHeight = state.getBarWidth();\n    double rectWidth = Math.abs(transY2 - transY1);\n    Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, rectHeight);\n    Paint seriesPaint = getItemPaint(row, column);\n    g2.setPaint(seriesPaint);\n    g2.fill(bar);\n    if (isDrawBarOutline() && state.getBarWidth() > 3) {\n        g2.setStroke(getItemStroke(row, column));\n        g2.setPaint(getItemOutlinePaint(row, column));\n        g2.draw(bar);\n    }\n    // standard deviation lines\n    double valueDelta = dataset.getStdDevValue(row, column).doubleValue();\n    double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() + valueDelta, dataArea, yAxisLocation);\n    double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() - valueDelta, dataArea, yAxisLocation);\n    if (this.errorIndicatorStroke != null) {\n        g2.setStroke(this.errorIndicatorStroke);\n    } else {\n        g2.setStroke(getItemOutlineStroke(row, column));\n    }\n    if (this.errorIndicatorPaint != null) {\n        g2.setPaint(this.errorIndicatorPaint);\n    } else {\n        g2.setPaint(getItemOutlinePaint(row, column));\n    }\n    Line2D line = null;\n    line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d, highVal, rectY + rectHeight / 2.0d);\n    g2.draw(line);\n    line = new Line2D.Double(highVal, rectY + rectHeight * 0.25, highVal, rectY + rectHeight * 0.75);\n    g2.draw(line);\n    line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, lowVal, rectY + rectHeight * 0.75);\n    g2.draw(line);\n    CategoryItemLabelGenerator generator = getItemLabelGenerator(row, column);\n    if (generator != null && isItemLabelVisible(row, column)) {\n        drawItemLabel(g2, dataset, row, column, plot, generator, bar, (value < 0.0));\n    }\n    // add an item entity, if this information is being collected\n    EntityCollection entities = state.getEntityCollection();\n    if (entities != null) {\n        addItemEntity(entities, dataset, row, column, bar);\n    }\n}", "method_range": "230-358", "fault_locations": "260,315"}, "org.jfree.chart.renderer.category.StatisticalBarRenderer.drawVerticalItem": {"buggy_content": "protected void drawVerticalItem(Graphics2D g2, CategoryItemRendererState state, Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis, StatisticalCategoryDataset dataset, int row, int column) {\n    RectangleEdge xAxisLocation = plot.getDomainAxisEdge();\n    // BAR X\n    double rectX = domainAxis.getCategoryStart(column, getColumnCount(), dataArea, xAxisLocation);\n    int seriesCount = getRowCount();\n    int categoryCount = getColumnCount();\n    if (seriesCount > 1) {\n        double seriesGap = dataArea.getWidth() * getItemMargin() / (categoryCount * (seriesCount - 1));\n        rectX = rectX + row * (state.getBarWidth() + seriesGap);\n    } else {\n        rectX = rectX + row * state.getBarWidth();\n    }\n    // BAR Y\n    Number meanValue = dataset.getMeanValue(row, column);\n    double value = meanValue.doubleValue();\n    double base = 0.0;\n    double lclip = getLowerClip();\n    double uclip = getUpperClip();\n    if (uclip <= 0.0) {\n        // cases 1, 2, 3 and 4\n        if (value >= uclip) {\n            // bar is not visible\n            return;\n        }\n        base = uclip;\n        if (value <= lclip) {\n            value = lclip;\n        }\n    } else if (lclip <= 0.0) {\n        // cases 5, 6, 7 and 8\n        if (value >= uclip) {\n            value = uclip;\n        } else {\n            if (value <= lclip) {\n                value = lclip;\n            }\n        }\n    } else {\n        // cases 9, 10, 11 and 12\n        if (value <= lclip) {\n            // bar is not visible\n            return;\n        }\n        base = getLowerClip();\n        if (value >= uclip) {\n            value = uclip;\n        }\n    }\n    RectangleEdge yAxisLocation = plot.getRangeAxisEdge();\n    double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);\n    double transY2 = rangeAxis.valueToJava2D(value, dataArea, yAxisLocation);\n    double rectY = Math.min(transY2, transY1);\n    double rectWidth = state.getBarWidth();\n    double rectHeight = Math.abs(transY2 - transY1);\n    Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, rectHeight);\n    Paint seriesPaint = getItemPaint(row, column);\n    g2.setPaint(seriesPaint);\n    g2.fill(bar);\n    if (isDrawBarOutline() && state.getBarWidth() > 3) {\n        g2.setStroke(getItemStroke(row, column));\n        g2.setPaint(getItemOutlinePaint(row, column));\n        g2.draw(bar);\n    }\n    // standard deviation lines\n    double valueDelta = dataset.getStdDevValue(row, column).doubleValue();\n    double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() + valueDelta, dataArea, yAxisLocation);\n    double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() - valueDelta, dataArea, yAxisLocation);\n    if (this.errorIndicatorStroke != null) {\n        g2.setStroke(this.errorIndicatorStroke);\n    } else {\n        g2.setStroke(getItemOutlineStroke(row, column));\n    }\n    if (this.errorIndicatorPaint != null) {\n        g2.setPaint(this.errorIndicatorPaint);\n    } else {\n        g2.setPaint(getItemOutlinePaint(row, column));\n    }\n    Line2D line = null;\n    line = new Line2D.Double(rectX + rectWidth / 2.0d, lowVal, rectX + rectWidth / 2.0d, highVal);\n    g2.draw(line);\n    line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, highVal, rectX + rectWidth / 2.0d + 5.0d, highVal);\n    g2.draw(line);\n    line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal, rectX + rectWidth / 2.0d + 5.0d, lowVal);\n    g2.draw(line);\n    CategoryItemLabelGenerator generator = getItemLabelGenerator(row, column);\n    if (generator != null && isItemLabelVisible(row, column)) {\n        drawItemLabel(g2, dataset, row, column, plot, generator, bar, (value < 0.0));\n    }\n    // add an item entity, if this information is being collected\n    EntityCollection entities = state.getEntityCollection();\n    if (entities != null) {\n        addItemEntity(entities, dataset, row, column, bar);\n    }\n}", "method_range": "373-500", "fault_locations": "404,459"}}