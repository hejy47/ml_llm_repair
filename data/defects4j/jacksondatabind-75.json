{"com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct": {"buggy_content": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "method_range": "77-88", "fault_locations": "86"}, "com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual": {"buggy_content": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n            if (serializeAsIndex != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "method_range": "95-111", "fault_locations": "102,103,104"}, "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex": {"buggy_content": "protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass) {\n    JsonFormat.Shape shape = (format == null) ? null : format.getShape();\n    if (shape == null) {\n        return null;\n    }\n    // i.e. \"default\", check dynamically\n    if (shape == Shape.ANY || shape == Shape.SCALAR) {\n        return null;\n    }\n    // 19-May-2016, tatu: also consider \"natural\" shape\n    if (shape == Shape.STRING || shape == Shape.NATURAL) {\n        return Boolean.FALSE;\n    }\n    // 01-Oct-2014, tatu: For convenience, consider \"as-array\" to also mean 'yes, use index')\n    if (shape.isNumeric() || (shape == Shape.ARRAY)) {\n        return Boolean.TRUE;\n    }\n    // 07-Mar-2017, tatu: Also means `OBJECT` not available as property annotation...\n    throw new IllegalArgumentException(String.format(\"Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation\", shape, enumClass.getName(), (fromClass ? \"class\" : \"property\")));\n}", "method_range": "216-239", "fault_locations": "217,218,221,225"}}