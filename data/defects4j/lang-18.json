{"org.apache.commons.lang3.time.FastDateFormat.parsePattern": {"buggy_content": "// Parse the pattern\n//-----------------------------------------------------------------------\nprotected List<Rule> parsePattern() {\n    DateFormatSymbols symbols = new DateFormatSymbols(mLocale);\n    List<Rule> rules = new ArrayList<Rule>();\n    String[] ERAs = symbols.getEras();\n    String[] months = symbols.getMonths();\n    String[] shortMonths = symbols.getShortMonths();\n    String[] weekdays = symbols.getWeekdays();\n    String[] shortWeekdays = symbols.getShortWeekdays();\n    String[] AmPmStrings = symbols.getAmPmStrings();\n    int length = mPattern.length();\n    int[] indexRef = new int[1];\n    for (int i = 0; i < length; i++) {\n        indexRef[0] = i;\n        String token = parseToken(mPattern, indexRef);\n        i = indexRef[0];\n        int tokenLen = token.length();\n        if (tokenLen == 0) {\n            break;\n        }\n        Rule rule;\n        char c = token.charAt(0);\n        switch(c) {\n            case // era designator (text)\n            'G':\n                rule = new TextField(Calendar.ERA, ERAs);\n                break;\n            case // year (number)\n            'y':\n                if (tokenLen >= 4) {\n                    rule = selectNumberRule(Calendar.YEAR, tokenLen);\n                } else {\n                    rule = TwoDigitYearField.INSTANCE;\n                }\n                break;\n            case // month in year (text and number)\n            'M':\n                if (tokenLen >= 4) {\n                    rule = new TextField(Calendar.MONTH, months);\n                } else if (tokenLen == 3) {\n                    rule = new TextField(Calendar.MONTH, shortMonths);\n                } else if (tokenLen == 2) {\n                    rule = TwoDigitMonthField.INSTANCE;\n                } else {\n                    rule = UnpaddedMonthField.INSTANCE;\n                }\n                break;\n            case // day in month (number)\n            'd':\n                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n                break;\n            case // hour in am/pm (number, 1..12)\n            'h':\n                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n                break;\n            case // hour in day (number, 0..23)\n            'H':\n                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n                break;\n            case // minute in hour (number)\n            'm':\n                rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n                break;\n            case // second in minute (number)\n            's':\n                rule = selectNumberRule(Calendar.SECOND, tokenLen);\n                break;\n            case // millisecond (number)\n            'S':\n                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);\n                break;\n            case // day in week (text)\n            'E':\n                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n                break;\n            case // day in year (number)\n            'D':\n                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);\n                break;\n            case // day of week in month (number)\n            'F':\n                rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);\n                break;\n            case // week in year (number)\n            'w':\n                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);\n                break;\n            case // week in month (number)\n            'W':\n                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);\n                break;\n            case // am/pm marker (text)\n            'a':\n                rule = new TextField(Calendar.AM_PM, AmPmStrings);\n                break;\n            case // hour in day (1..24)\n            'k':\n                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));\n                break;\n            case // hour in am/pm (0..11)\n            'K':\n                rule = selectNumberRule(Calendar.HOUR, tokenLen);\n                break;\n            case // time zone (text)\n            'z':\n                if (tokenLen >= 4) {\n                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);\n                } else {\n                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);\n                }\n                break;\n            case // time zone (value)\n            'Z':\n                if (tokenLen == 1) {\n                    rule = TimeZoneNumberRule.INSTANCE_NO_COLON;\n                } else {\n                    rule = TimeZoneNumberRule.INSTANCE_COLON;\n                }\n                break;\n            case // literal text\n            '\\'':\n                String sub = token.substring(1);\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0));\n                } else {\n                    rule = new StringLiteral(sub);\n                }\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n        }\n        rules.add(rule);\n    }\n    return rules;\n}", "method_range": "463-584", "fault_locations": "495,496,497"}}