{"org.apache.commons.codec.language.Caverphone.caverphone": {"buggy_content": "public String caverphone(String txt) {\n    // NOTE: Version 1.0 of Caverphone is easily derivable from this code\n    // by commenting out the 2.0 lines and adding in the 1.0 lines\n    if (txt == null || txt.length() == 0) {\n        return \"1111111111\";\n    }\n    // 1. Convert to lowercase\n    txt = txt.toLowerCase(java.util.Locale.ENGLISH);\n    // 2. Remove anything not A-Z\n    txt = txt.replaceAll(\"[^a-z]\", \"\");\n    // 2.5. Remove final e\n    // 2.0 only\n    txt = txt.replaceAll(\"e$\", \"\");\n    // 3. Handle various start options\n    txt = txt.replaceAll(\"^cough\", \"cou2f\");\n    txt = txt.replaceAll(\"^rough\", \"rou2f\");\n    txt = txt.replaceAll(\"^tough\", \"tou2f\");\n    // 2.0 only\n    txt = txt.replaceAll(\"^enough\", \"enou2f\");\n    // 2.0 only - note the spec says ^enough here again, c+p error I assume\n    txt = txt.replaceAll(\"^trough\", \"trou2f\");\n    txt = txt.replaceAll(\"^gn\", \"2n\");\n    // End\n    txt = txt.replaceAll(\"^mb\", \"m2\");\n    // 4. Handle replacements\n    txt = txt.replaceAll(\"cq\", \"2q\");\n    txt = txt.replaceAll(\"ci\", \"si\");\n    txt = txt.replaceAll(\"ce\", \"se\");\n    txt = txt.replaceAll(\"cy\", \"sy\");\n    txt = txt.replaceAll(\"tch\", \"2ch\");\n    txt = txt.replaceAll(\"c\", \"k\");\n    txt = txt.replaceAll(\"q\", \"k\");\n    txt = txt.replaceAll(\"x\", \"k\");\n    txt = txt.replaceAll(\"v\", \"f\");\n    txt = txt.replaceAll(\"dg\", \"2g\");\n    txt = txt.replaceAll(\"tio\", \"sio\");\n    txt = txt.replaceAll(\"tia\", \"sia\");\n    txt = txt.replaceAll(\"d\", \"t\");\n    txt = txt.replaceAll(\"ph\", \"fh\");\n    txt = txt.replaceAll(\"b\", \"p\");\n    txt = txt.replaceAll(\"sh\", \"s2\");\n    txt = txt.replaceAll(\"z\", \"s\");\n    txt = txt.replaceAll(\"^[aeiou]\", \"A\");\n    txt = txt.replaceAll(\"[aeiou]\", \"3\");\n    // 2.0 only\n    txt = txt.replaceAll(\"j\", \"y\");\n    // 2.0 only\n    txt = txt.replaceAll(\"^y3\", \"Y3\");\n    // 2.0 only\n    txt = txt.replaceAll(\"^y\", \"A\");\n    // 2.0 only\n    txt = txt.replaceAll(\"y\", \"3\");\n    txt = txt.replaceAll(\"3gh3\", \"3kh3\");\n    txt = txt.replaceAll(\"gh\", \"22\");\n    txt = txt.replaceAll(\"g\", \"k\");\n    txt = txt.replaceAll(\"s+\", \"S\");\n    txt = txt.replaceAll(\"t+\", \"T\");\n    txt = txt.replaceAll(\"p+\", \"P\");\n    txt = txt.replaceAll(\"k+\", \"K\");\n    txt = txt.replaceAll(\"f+\", \"F\");\n    txt = txt.replaceAll(\"m+\", \"M\");\n    txt = txt.replaceAll(\"n+\", \"N\");\n    txt = txt.replaceAll(\"w3\", \"W3\");\n    //txt = txt.replaceAll(\"wy\", \"Wy\");    // 1.0 only\n    txt = txt.replaceAll(\"wh3\", \"Wh3\");\n    // 2.0 only\n    txt = txt.replaceAll(\"w$\", \"3\");\n    //txt = txt.replaceAll(\"why\", \"Why\");  // 1.0 only\n    txt = txt.replaceAll(\"w\", \"2\");\n    txt = txt.replaceAll(\"^h\", \"A\");\n    txt = txt.replaceAll(\"h\", \"2\");\n    txt = txt.replaceAll(\"r3\", \"R3\");\n    // 2.0 only\n    txt = txt.replaceAll(\"r$\", \"3\");\n    //txt = txt.replaceAll(\"ry\", \"Ry\");    // 1.0 only\n    txt = txt.replaceAll(\"r\", \"2\");\n    txt = txt.replaceAll(\"l3\", \"L3\");\n    // 2.0 only\n    txt = txt.replaceAll(\"l$\", \"3\");\n    //txt = txt.replaceAll(\"ly\", \"Ly\");    // 1.0 only\n    txt = txt.replaceAll(\"l\", \"2\");\n    //txt = txt.replaceAll(\"j\", \"y\");      // 1.0 only\n    //txt = txt.replaceAll(\"y3\", \"Y3\");    // 1.0 only\n    //txt = txt.replaceAll(\"y\", \"2\");      // 1.0 only\n    // 5. Handle removals\n    txt = txt.replaceAll(\"2\", \"\");\n    // 2.0 only\n    txt = txt.replaceAll(\"3$\", \"A\");\n    txt = txt.replaceAll(\"3\", \"\");\n    // 6. put ten 1s on the end\n    // 1.0 only has 6 1s\n    txt = txt + \"111111\" + \"1111\";\n    // 7. take the first six characters as the code\n    // 1.0 truncates to 6\n    return txt.substring(0, 10);\n}", "method_range": "50-142", "fault_locations": "76"}}