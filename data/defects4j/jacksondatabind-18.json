{"com.fasterxml.jackson.databind.MappingIterator.MappingIterator": {"buggy_content": "@SuppressWarnings(\"unchecked\")\nprotected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean managedParser, Object valueToUpdate) {\n    _type = type;\n    _parser = p;\n    _context = ctxt;\n    _deserializer = (JsonDeserializer<T>) deser;\n    _closeParser = managedParser;\n    if (valueToUpdate == null) {\n        _updatedValue = null;\n    } else {\n        _updatedValue = (T) valueToUpdate;\n    }\n        if (managedParser && (p != null) && p.isExpectedStartArrayToken()) {\n        // If pointing to START_ARRAY, context should be that ARRAY\n        p.clearCurrentToken();\n        // regardless, recovery context should be whatever context we have now,\n        // with sole exception of pointing to a start marker, in which case it's\n        // the parent\n    }\n}", "method_range": "112-145", "fault_locations": "135,136,138,140,141"}, "com.fasterxml.jackson.databind.MappingIterator.remove": {"buggy_content": "@Override\npublic void remove() {\n    throw new UnsupportedOperationException();\n}", "method_range": "182-185", "fault_locations": "185"}, "com.fasterxml.jackson.databind.MappingIterator.close": {"buggy_content": "@Override\npublic void close() throws IOException {\n    if (_parser != null) {\n        _parser.close();\n    }\n}", "method_range": "187-192", "fault_locations": "188,189"}, "com.fasterxml.jackson.databind.MappingIterator.hasNextValue": {"buggy_content": "public boolean hasNextValue() throws IOException {\n    if (_parser == null) {\n        return false;\n        // fall-through\n    }\n    if (!_hasNextChecked) {\n        JsonToken t = _parser.getCurrentToken();\n        _hasNextChecked = true;\n        if (t == null) {\n            // un-initialized or cleared; find next\n            t = _parser.nextToken();\n            // If EOF, no more, or if we hit END_ARRAY (although we don't clear the token).\n            if (t == null || t == JsonToken.END_ARRAY) {\n                JsonParser jp = _parser;\n                _parser = null;\n                if (_closeParser) {\n                    jp.close();\n                }\n                return false;\n            }\n        }\n        // fall through\n    }\n    return true;\n}", "method_range": "208-232", "fault_locations": "208,209,210,213,214,216,217,218,221,222,223,224,225,227,228,229,230"}, "com.fasterxml.jackson.databind.MappingIterator.nextValue": {"buggy_content": "public T nextValue() throws IOException {\n    if (!_hasNextChecked) {\n        if (!hasNextValue()) {\n            return _throwNoSuchElement();\n        }\n    }\n    if (_parser == null) {\n        return _throwNoSuchElement();\n    }\n    _hasNextChecked = false;\n    try {\n        T value;\n        if (_updatedValue == null) {\n            value = _deserializer.deserialize(_parser, _context);\n        } else {\n            _deserializer.deserialize(_parser, _context, _updatedValue);\n            value = _updatedValue;\n        }\n        return value;\n    } finally {\n                _parser.clearCurrentToken();\n    }\n}", "method_range": "234-262", "fault_locations": "236,237,238,239,240,241,242,243,244"}}