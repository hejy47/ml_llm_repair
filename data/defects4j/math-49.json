{"org.apache.commons.math.linear.OpenMapRealVector.ebeDivide": {"buggy_content": "public OpenMapRealVector ebeDivide(RealVector v) {\n    checkVectorDimensions(v.getDimension());\n    OpenMapRealVector res = new OpenMapRealVector(this);\n    Iterator iter = res.entries.iterator();\n    while (iter.hasNext()) {\n        iter.advance();\n        res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));\n    }\n    return res;\n}", "method_range": "342-351", "fault_locations": "345"}, "org.apache.commons.math.linear.OpenMapRealVector.ebeDivide1": {"buggy_content": "@Override\npublic OpenMapRealVector ebeDivide(double[] v) {\n    checkVectorDimensions(v.length);\n    OpenMapRealVector res = new OpenMapRealVector(this);\n    Iterator iter = res.entries.iterator();\n    while (iter.hasNext()) {\n        iter.advance();\n        res.setEntry(iter.key(), iter.value() / v[iter.key()]);\n    }\n    return res;\n}", "method_range": "354-364", "fault_locations": "358"}, "org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply": {"buggy_content": "public OpenMapRealVector ebeMultiply(RealVector v) {\n    checkVectorDimensions(v.getDimension());\n    OpenMapRealVector res = new OpenMapRealVector(this);\n    Iterator iter = res.entries.iterator();\n    while (iter.hasNext()) {\n        iter.advance();\n        res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n    }\n    return res;\n}", "method_range": "367-376", "fault_locations": "370"}, "org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply1": {"buggy_content": "@Override\npublic OpenMapRealVector ebeMultiply(double[] v) {\n    checkVectorDimensions(v.length);\n    OpenMapRealVector res = new OpenMapRealVector(this);\n    Iterator iter = res.entries.iterator();\n    while (iter.hasNext()) {\n        iter.advance();\n        res.setEntry(iter.key(), iter.value() * v[iter.key()]);\n    }\n    return res;\n}", "method_range": "379-389", "fault_locations": "383"}}