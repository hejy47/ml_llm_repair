{"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.canReadEntryData": {"buggy_content": "@Override\npublic boolean canReadEntryData(final ArchiveEntry ae) {\n    if (ae instanceof ZipArchiveEntry) {\n        final ZipArchiveEntry ze = (ZipArchiveEntry) ae;\n        return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze);\n    }\n    return false;\n}", "method_range": "410-418", "fault_locations": "415"}, "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read": {"buggy_content": "@Override\npublic int read(final byte[] buffer, final int offset, final int length) throws IOException {\n    if (closed) {\n        throw new IOException(\"The stream is closed\");\n    }\n    if (current == null) {\n        return -1;\n    }\n    // avoid int overflow, check null buffer\n    if (offset > buffer.length || length < 0 || offset < 0 || buffer.length - offset < length) {\n        throw new ArrayIndexOutOfBoundsException();\n    }\n    ZipUtil.checkRequestedFeatures(current.entry);\n    if (!supportsDataDescriptorFor(current.entry)) {\n        throw new UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR, current.entry);\n    }\n    int read;\n    if (current.entry.getMethod() == ZipArchiveOutputStream.STORED) {\n        read = readStored(buffer, offset, length);\n    } else if (current.entry.getMethod() == ZipArchiveOutputStream.DEFLATED) {\n        read = readDeflated(buffer, offset, length);\n    } else if (current.entry.getMethod() == ZipMethod.UNSHRINKING.getCode() || current.entry.getMethod() == ZipMethod.IMPLODING.getCode() || current.entry.getMethod() == ZipMethod.ENHANCED_DEFLATED.getCode() || current.entry.getMethod() == ZipMethod.BZIP2.getCode()) {\n        read = current.in.read(buffer, offset, length);\n    } else {\n        throw new UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()), current.entry);\n    }\n    if (read >= 0) {\n        current.crc.update(buffer, offset, read);\n    }\n    return read;\n}", "method_range": "420-461", "fault_locations": "438,439"}}