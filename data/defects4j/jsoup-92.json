{"org.jsoup.nodes.Attributes.add": {"buggy_content": "private void add(String key, String value) {\n    checkCapacity(size + 1);\n    keys[size] = key;\n    vals[size] = value;\n    size++;\n}", "method_range": "118-123", "fault_locations": "118,121,122"}, "org.jsoup.parser.HtmlTreeBuilder.insert": {"buggy_content": "Element insert(final Token.StartTag startTag) {\n    // cleanup duplicate attributes:\n    // handle empty unknown tags\n    // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.\n    if (startTag.isSelfClosing()) {\n        Element el = insertEmpty(startTag);\n        stack.add(el);\n        // handles <script />, otherwise needs breakout steps from script data\n        tokeniser.transition(TokeniserState.Data);\n        // ensure we get out of whatever state we are in. emitted for yielded processing\n        tokeniser.emit(emptyEnd.reset().name(el.tagName()));\n        return el;\n    }\n    Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));\n    insert(el);\n    return el;\n}", "method_range": "197-213", "fault_locations": "198,199"}, "org.jsoup.parser.Token.newAttribute": {"buggy_content": "final void newAttribute() {\n    if (attributes == null)\n        attributes = new Attributes();\n    if (pendingAttributeName != null) {\n        // the tokeniser has skipped whitespace control chars, but trimming could collapse to empty for other control codes, so verify here\n        pendingAttributeName = pendingAttributeName.trim();\n        if (pendingAttributeName.length() > 0) {\n            String value;\n            if (hasPendingAttributeValue)\n                value = pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS;\n            else if (hasEmptyAttributeValue)\n                value = \"\";\n            else\n                value = null;\n            // note that we add, not put. So that the first is kept, and rest are deduped, once in a context where case sensitivity is known (the appropriate tree builder).\n            attributes.put(pendingAttributeName, value);\n        }\n    }\n    pendingAttributeName = null;\n    hasEmptyAttributeValue = false;\n    hasPendingAttributeValue = false;\n    reset(pendingAttributeValue);\n    pendingAttributeValueS = null;\n}", "method_range": "100-124", "fault_locations": "116"}, "org.jsoup.parser.XmlTreeBuilder.insert": {"buggy_content": "Element insert(Token.StartTag startTag) {\n    Tag tag = Tag.valueOf(startTag.name(), settings);\n    // todo: wonder if for xml parsing, should treat all tags as unknown? because it's not html.\n    Element el = new Element(tag, baseUri, settings.normalizeAttributes(startTag.attributes));\n    insertNode(el);\n    if (startTag.isSelfClosing()) {\n        if (// unknown tag, remember this is self closing for output. see above.\n        !tag.isKnownTag())\n            tag.setSelfClosing();\n    } else {\n        stack.add(el);\n    }\n    return el;\n}", "method_range": "75-88", "fault_locations": "77,78"}}