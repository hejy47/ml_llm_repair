{"com.google.javascript.jscomp.RemoveUnusedVars.interpretAssigns": {"buggy_content": "private void interpretAssigns() {\n    boolean changes = false;\n    do {\n        changes = false;\n        // We can't use traditional iterators and iterables for this list,\n        // because our lazily-evaluated continuations will modify it while\n        // we traverse it.\n        for (int current = 0; current < maybeUnreferenced.size(); current++) {\n            Var var = maybeUnreferenced.get(current);\n            if (referenced.contains(var)) {\n                maybeUnreferenced.remove(current);\n                current--;\n            } else {\n                boolean assignedToUnknownValue = false;\n                boolean hasPropertyAssign = false;\n                if (var.getParentNode().isVar() && !NodeUtil.isForIn(var.getParentNode().getParent())) {\n                    Node value = var.getInitialValue();\n                    assignedToUnknownValue = value != null && !NodeUtil.isLiteralValue(value, true);\n                } else {\n                    // This was initialized to a function arg or a catch param\n                    // or a for...in variable.\n                    assignedToUnknownValue = true;\n                }\n                for (Assign assign : assignsByVar.get(var)) {\n                    if (assign.isPropertyAssign) {\n                        hasPropertyAssign = true;\n                    } else if (!NodeUtil.isLiteralValue(assign.assignNode.getLastChild(), true)) {\n                        assignedToUnknownValue = true;\n                    }\n                }\n                if (assignedToUnknownValue && hasPropertyAssign) {\n                    changes = markReferencedVar(var) || changes;\n                    maybeUnreferenced.remove(current);\n                    current--;\n                }\n            }\n        }\n    } while (changes);\n}", "method_range": "704-749", "fault_locations": "718,719,721,732,734,735,737,741"}, "com.google.javascript.jscomp.RemoveUnusedVars.Assign": {"buggy_content": "Assign(Node assignNode, Node nameNode, boolean isPropertyAssign) {\n    Preconditions.checkState(NodeUtil.isAssignmentOp(assignNode));\n    this.assignNode = assignNode;\n    this.nameNode = nameNode;\n    this.isPropertyAssign = isPropertyAssign;\n    this.maybeAliased = !assignNode.getParent().isExprResult();\n    this.mayHaveSecondarySideEffects = maybeAliased || NodeUtil.mayHaveSideEffects(assignNode.getFirstChild()) || NodeUtil.mayHaveSideEffects(assignNode.getLastChild());\n}", "method_range": "898-909", "fault_locations": "904"}}