{"org.jsoup.select.QueryParser.findElements": {"buggy_content": "private void findElements() {\n    if (tq.matchChomp(\"#\"))\n        byId();\n    else if (tq.matchChomp(\".\"))\n        byClass();\n    else if (tq.matchesWord() || tq.matches(\"*|\"))\n        byTag();\n    else if (tq.matches(\"[\"))\n        byAttribute();\n    else if (tq.matchChomp(\"*\"))\n        allElements();\n    else if (tq.matchChomp(\":lt(\"))\n        indexLessThan();\n    else if (tq.matchChomp(\":gt(\"))\n        indexGreaterThan();\n    else if (tq.matchChomp(\":eq(\"))\n        indexEquals();\n    else if (tq.matches(\":has(\"))\n        has();\n    else if (tq.matches(\":contains(\"))\n        contains(false);\n    else if (tq.matches(\":containsOwn(\"))\n        contains(true);\n    else if (tq.matches(\":containsData(\"))\n        containsData();\n    else if (tq.matches(\":matches(\"))\n        matches(false);\n    else if (tq.matches(\":matchesOwn(\"))\n        matches(true);\n    else if (tq.matches(\":not(\"))\n        not();\n    else if (tq.matchChomp(\":nth-child(\"))\n        cssNthChild(false, false);\n    else if (tq.matchChomp(\":nth-last-child(\"))\n        cssNthChild(true, false);\n    else if (tq.matchChomp(\":nth-of-type(\"))\n        cssNthChild(false, true);\n    else if (tq.matchChomp(\":nth-last-of-type(\"))\n        cssNthChild(true, true);\n    else if (tq.matchChomp(\":first-child\"))\n        evals.add(new Evaluator.IsFirstChild());\n    else if (tq.matchChomp(\":last-child\"))\n        evals.add(new Evaluator.IsLastChild());\n    else if (tq.matchChomp(\":first-of-type\"))\n        evals.add(new Evaluator.IsFirstOfType());\n    else if (tq.matchChomp(\":last-of-type\"))\n        evals.add(new Evaluator.IsLastOfType());\n    else if (tq.matchChomp(\":only-child\"))\n        evals.add(new Evaluator.IsOnlyChild());\n    else if (tq.matchChomp(\":only-of-type\"))\n        evals.add(new Evaluator.IsOnlyOfType());\n    else if (tq.matchChomp(\":empty\"))\n        evals.add(new Evaluator.IsEmpty());\n    else if (tq.matchChomp(\":root\"))\n        evals.add(new Evaluator.IsRoot());\n    else\n        // unhandled\n        throw new Selector.SelectorParseException(\"Could not parse query '%s': unexpected token at '%s'\", query, tq.remainder());\n}", "method_range": "148-206", "fault_locations": "202,203"}}