{"org.jsoup.nodes.FormElement.formData": {"buggy_content": "public List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<>();\n    // iterate the form control elements and accumulate their values\n    for (Element el : elements) {\n        // contents are form listable, superset of submitable\n        if (!el.tag().isFormSubmittable())\n            continue;\n        // skip disabled form inputs\n        if (el.hasAttr(\"disabled\"))\n            continue;\n        String name = el.attr(\"name\");\n        if (name.length() == 0)\n            continue;\n        String type = el.attr(\"type\");\n        if (\"select\".equals(el.normalName())) {\n            Elements options = el.select(\"option[selected]\");\n            boolean set = false;\n            for (Element option : options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                Element option = el.select(\"option\").first();\n                if (option != null)\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n            }\n        } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n            // only add checkbox or radio if they have the checked attribute\n            if (el.hasAttr(\"checked\")) {\n                final String val = el.val().length() > 0 ? el.val() : \"on\";\n                data.add(HttpConnection.KeyVal.create(name, val));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}", "method_range": "78-113", "fault_locations": "88,89"}}