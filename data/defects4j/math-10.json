{"org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2": {"buggy_content": "public void atan2(final double[] y, final int yOffset, final double[] x, final int xOffset, final double[] result, final int resultOffset) {\n    // compute r = sqrt(x^2+y^2)\n    double[] tmp1 = new double[getSize()];\n    // x^2\n    multiply(x, xOffset, x, xOffset, tmp1, 0);\n    double[] tmp2 = new double[getSize()];\n    // y^2\n    multiply(y, yOffset, y, yOffset, tmp2, 0);\n    // x^2 + y^2\n    add(tmp1, 0, tmp2, 0, tmp2, 0);\n    // r = sqrt(x^2 + y^2)\n    rootN(tmp2, 0, 2, tmp1, 0);\n    if (x[xOffset] >= 0) {\n        // compute atan2(y, x) = 2 atan(y / (r + x))\n        // r + x\n        add(tmp1, 0, x, xOffset, tmp2, 0);\n        // y /(r + x)\n        divide(y, yOffset, tmp2, 0, tmp1, 0);\n        // atan(y / (r + x))\n        atan(tmp1, 0, tmp2, 0);\n        for (int i = 0; i < tmp2.length; ++i) {\n            // 2 * atan(y / (r + x))\n            result[resultOffset + i] = 2 * tmp2[i];\n        }\n    } else {\n        // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))\n        // r - x\n        subtract(tmp1, 0, x, xOffset, tmp2, 0);\n        // y /(r - x)\n        divide(y, yOffset, tmp2, 0, tmp1, 0);\n        // atan(y / (r - x))\n        atan(tmp1, 0, tmp2, 0);\n        result[resultOffset] = // +/-pi - 2 * atan(y / (r - x))\n        ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0];\n        for (int i = 1; i < tmp2.length; ++i) {\n            // +/-pi - 2 * atan(y / (r - x))\n            result[resultOffset + i] = -2 * tmp2[i];\n        }\n    }\n    // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n}", "method_range": "1382-1420", "fault_locations": "1418,1419"}}