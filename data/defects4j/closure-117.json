{"com.google.javascript.jscomp.TypeValidator.getReadableJSTypeName": {"buggy_content": "String getReadableJSTypeName(Node n, boolean dereference) {\n    // The best type name is the actual type name.\n    // If we're analyzing a GETPROP, the property may be inherited by the\n    // prototype chain. So climb the prototype chain and find out where\n    // the property was originally defined.\n    if (n.isGetProp()) {\n        ObjectType objectType = getJSType(n.getFirstChild()).dereference();\n        if (objectType != null) {\n            String propName = n.getLastChild().getString();\n            if (objectType.getConstructor() != null && objectType.getConstructor().isInterface()) {\n                objectType = FunctionType.getTopDefiningInterface(objectType, propName);\n            } else {\n                // classes\n                while (objectType != null && !objectType.hasOwnProperty(propName)) {\n                    objectType = objectType.getImplicitPrototype();\n                }\n            }\n            // Don't show complex function names or anonymous types.\n            // Instead, try to get a human-readable type name.\n            if (objectType != null && (objectType.getConstructor() != null || objectType.isFunctionPrototypeType())) {\n                return objectType.toString() + \".\" + propName;\n            }\n        }\n    }\n    JSType type = getJSType(n);\n    if (dereference) {\n        ObjectType dereferenced = type.dereference();\n        if (dereferenced != null) {\n            type = dereferenced;\n        }\n    }\n    if (type.isFunctionPrototypeType() || (type.toObjectType() != null && type.toObjectType().getConstructor() != null)) {\n        return type.toString();\n    }\n    String qualifiedName = n.getQualifiedName();\n    if (qualifiedName != null) {\n        return qualifiedName;\n    } else if (type.isFunctionType()) {\n        // Don't show complex function names.\n        return \"function\";\n    } else {\n        return type.toString();\n    }\n}", "method_range": "724-777", "fault_locations": "731,756,757,758,759,760,763,764,765,766"}}