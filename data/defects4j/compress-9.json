{"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.write": {"buggy_content": "@Override\npublic void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException {\n    if ((currBytes + numToWrite) > currSize) {\n        throw new IOException(\"request to write '\" + numToWrite + \"' bytes exceeds size in header of '\" + currSize + \"' bytes for entry '\" + currName + \"'\");\n        //\n        // We have to deal with assembly!!!\n        // The programmer can be writing little 32 byte chunks for all\n        // we know, and we must assemble complete records for writing.\n        // REVIEW Maybe this should be in TarBuffer? Could that help to\n        // eliminate some of the buffer copying.\n        //\n    }\n    if (assemLen > 0) {\n        if ((assemLen + numToWrite) >= recordBuf.length) {\n            int aLen = recordBuf.length - assemLen;\n            System.arraycopy(assemBuf, 0, recordBuf, 0, assemLen);\n            System.arraycopy(wBuf, wOffset, recordBuf, assemLen, aLen);\n            buffer.writeRecord(recordBuf);\n            currBytes += recordBuf.length;\n            wOffset += aLen;\n            numToWrite -= aLen;\n            assemLen = 0;\n        } else {\n            System.arraycopy(wBuf, wOffset, assemBuf, assemLen, numToWrite);\n            wOffset += numToWrite;\n            assemLen += numToWrite;\n            numToWrite = 0;\n        }\n    }\n    //\n    // When we get here we have EITHER:\n    // o An empty \"assemble\" buffer.\n    // o No bytes to write (numToWrite == 0)\n    //\n    while (numToWrite > 0) {\n        if (numToWrite < recordBuf.length) {\n            System.arraycopy(wBuf, wOffset, assemBuf, assemLen, numToWrite);\n            assemLen += numToWrite;\n            break;\n        }\n        buffer.writeRecord(wBuf, wOffset);\n        int num = recordBuf.length;\n        currBytes += num;\n        numToWrite -= num;\n        wOffset += num;\n    }\n    count(numToWrite);\n}", "method_range": "266-331", "fault_locations": "330"}}