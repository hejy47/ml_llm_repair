{"org.joda.time.DateTimeZone.forOffsetHoursMinutes": {"buggy_content": "public static DateTimeZone forOffsetHoursMinutes(int hoursOffset, int minutesOffset) throws IllegalArgumentException {\n    if (hoursOffset == 0 && minutesOffset == 0) {\n        return DateTimeZone.UTC;\n    }\n    if (minutesOffset < 0 || minutesOffset > 59) {\n        throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);\n    }\n    int offset = 0;\n    try {\n        int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n        if (hoursInMinutes < 0) {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n        } else {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n        }\n        offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    return forOffsetMillis(offset);\n}", "method_range": "253-273", "fault_locations": "255,258,263,265,267"}, "org.joda.time.DateTimeZone.forOffsetMillis": {"buggy_content": "public static DateTimeZone forOffsetMillis(int millisOffset) {\n    String id = printOffset(millisOffset);\n    return fixedOffsetZone(id, millisOffset);\n}", "method_range": "281-284", "fault_locations": "283"}}