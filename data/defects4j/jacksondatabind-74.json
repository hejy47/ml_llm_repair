{"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl": {"buggy_content": "@SuppressWarnings(\"resource\")\nprotected Object _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb) throws IOException {\n    // As per [JACKSON-614], may have default implementation to use\n    JsonDeserializer<Object> deser = _findDefaultImplDeserializer(ctxt);\n    if (deser != null) {\n        if (tb != null) {\n            tb.writeEndObject();\n            p = tb.asParser(p);\n            // must move to point to the first token:\n            p.nextToken();\n        }\n        return deser.deserialize(p, ctxt);\n    }\n    // or, perhaps we just bumped into a \"natural\" value (boolean/int/double/String)?\n    Object result = TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);\n    if (result != null) {\n        return result;\n    }\n    // or, something for which \"as-property\" won't work, changed into \"wrapper-array\" type:\n    if (p.getCurrentToken() == JsonToken.START_ARRAY) {\n        return super.deserializeTypedFromAny(p, ctxt);\n    }\n    ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME, \"missing property '\" + _typePropertyName + \"' that is to contain type id  (for class \" + baseTypeName() + \")\");\n    return null;\n}", "method_range": "133-160", "fault_locations": "155,156"}}