{"com.google.javascript.jscomp.TypedScopeCreator.visit": {"buggy_content": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (t.inGlobalScope()) {\n        return;\n    }\n    if (n.isReturn() && n.getFirstChild() != null) {\n        data.get(t.getScopeRoot()).recordNonEmptyReturn();\n    }\n    if (t.getScopeDepth() <= 2) {\n        // The first-order function analyzer looks at two types of variables:\n        //\n        // 1) Local variables that are assigned in inner scopes (\"escaped vars\")\n        //\n        // 2) Local variables that are assigned more than once.\n        //\n        // We treat all global variables as escaped by default, so there's\n        // no reason to do this extra computation for them.\n        return;\n    }\n    if (n.isName() && NodeUtil.isLValue(n) && // Be careful of bleeding functions, which create variables\n    // in the inner scope, not the scope where the name appears.\n    !NodeUtil.isBleedingFunctionName(n)) {\n        String name = n.getString();\n        Scope scope = t.getScope();\n        Var var = scope.getVar(name);\n        if (var != null) {\n            Scope ownerScope = var.getScope();\n            if (ownerScope.isLocal()) {\n                data.get(ownerScope.getRootNode()).recordAssignedName(name);\n            }\n            if (scope != ownerScope && ownerScope.isLocal()) {\n                data.get(ownerScope.getRootNode()).recordEscapedVarName(name);\n            }\n        }\n    } else if (n.isGetProp() && n.isUnscopedQualifiedName() && NodeUtil.isLValue(n)) {\n        String name = NodeUtil.getRootOfQualifiedName(n).getString();\n        Scope scope = t.getScope();\n        Var var = scope.getVar(name);\n        if (var != null) {\n            Scope ownerScope = var.getScope();\n            if (scope != ownerScope && ownerScope.isLocal()) {\n                data.get(ownerScope.getRootNode()).recordEscapedQualifiedName(n.getQualifiedName());\n            }\n        }\n    }\n}", "method_range": "1987-2038", "fault_locations": "1996"}}