{"org.mockito.internal.configuration.injection.FinalMockCandidateFilter.filterCandidate": {"buggy_content": "public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {\n    if (mocks.size() == 1) {\n        final Object matchingMock = mocks.iterator().next();\n        return new OngoingInjecter() {\n\n            public boolean thenInject() {\n                try {\n                    new FieldSetter(fieldInstance, field).set(matchingMock);\n                } catch (Exception e) {\n                    throw new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\n                }\n                return true;\n            }\n        };\n    }\n    return new OngoingInjecter() {\n\n        public boolean thenInject() {\n            return false;\n        }\n    };\n}", "method_range": "18-40", "fault_locations": "24,25,26"}, "org.mockito.internal.configuration.injection.FinalMockCandidateFilter.thenInject": {"buggy_content": "public boolean thenInject() {\n    try {\n        new FieldSetter(fieldInstance, field).set(matchingMock);\n    } catch (Exception e) {\n        throw new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\n    }\n    return true;\n}", "method_range": "23-30", "fault_locations": "24,25,26"}}