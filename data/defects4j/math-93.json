{"org.apache.commons.math.util.MathUtils.factorial": {"buggy_content": "public static long factorial(final int n) {\n    long result = Math.round(factorialDouble(n));\n    if (result == Long.MAX_VALUE) {\n        throw new ArithmeticException(\"factorial value is too large to fit in a long\");\n    }\n    return factorials[n];\n}", "method_range": "344-351", "fault_locations": "345,346"}, "org.apache.commons.math.util.MathUtils.factorialDouble": {"buggy_content": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n}", "method_range": "373-378", "fault_locations": "377"}, "org.apache.commons.math.util.MathUtils.factorialLog": {"buggy_content": "public static double factorialLog(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n > 0 for n!\");\n    }\n    double logSum = 0;\n    for (int i = 2; i <= n; i++) {\n        logSum += Math.log((double) i);\n    }\n    return logSum;\n}", "method_range": "393-402", "fault_locations": "397"}}