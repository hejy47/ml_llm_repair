{"com.google.gson.stream.JsonReader.nextLong": {"buggy_content": "public long nextLong() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n        p = doPeek();\n    }\n    if (p == PEEKED_LONG) {\n        peeked = PEEKED_NONE;\n        pathIndices[stackSize - 1]++;\n        return peekedLong;\n    }\n    if (p == PEEKED_NUMBER) {\n        peekedString = new String(buffer, pos, peekedNumberLength);\n        pos += peekedNumberLength;\n    } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) {\n        peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\\'' : '\"');\n        try {\n            long result = Long.parseLong(peekedString);\n            peeked = PEEKED_NONE;\n            pathIndices[stackSize - 1]++;\n            return result;\n        } catch (NumberFormatException ignored) {\n            // Fall back to parse as a double below.\n        }\n    } else {\n        throw new IllegalStateException(\"Expected a long but was \" + peek() + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n    }\n    peeked = PEEKED_BUFFERED;\n    // don't catch this NumberFormatException.\n    double asDouble = Double.parseDouble(peekedString);\n    long result = (long) asDouble;\n    if (result != asDouble) {\n        // Make sure no precision was lost casting to 'long'.\n        throw new NumberFormatException(\"Expected a long but was \" + peekedString + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n    }\n    peekedString = null;\n    peeked = PEEKED_NONE;\n    pathIndices[stackSize - 1]++;\n    return result;\n}", "method_range": "939-980", "fault_locations": "954,955"}, "com.google.gson.stream.JsonReader.nextInt": {"buggy_content": "public int nextInt() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n        p = doPeek();\n    }\n    int result;\n    if (p == PEEKED_LONG) {\n        result = (int) peekedLong;\n        if (peekedLong != result) {\n            // Make sure no precision was lost casting to 'int'.\n            throw new NumberFormatException(\"Expected an int but was \" + peekedLong + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n        }\n        peeked = PEEKED_NONE;\n        pathIndices[stackSize - 1]++;\n        return result;\n    }\n    if (p == PEEKED_NUMBER) {\n        peekedString = new String(buffer, pos, peekedNumberLength);\n        pos += peekedNumberLength;\n    } else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) {\n        peekedString = nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\\'' : '\"');\n        try {\n            result = Integer.parseInt(peekedString);\n            peeked = PEEKED_NONE;\n            pathIndices[stackSize - 1]++;\n            return result;\n        } catch (NumberFormatException ignored) {\n            // Fall back to parse as a double below.\n        }\n    } else {\n        throw new IllegalStateException(\"Expected an int but was \" + peek() + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n    }\n    peeked = PEEKED_BUFFERED;\n    // don't catch this NumberFormatException.\n    double asDouble = Double.parseDouble(peekedString);\n    result = (int) asDouble;\n    if (result != asDouble) {\n        // Make sure no precision was lost casting to 'int'.\n        throw new NumberFormatException(\"Expected an int but was \" + peekedString + \" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());\n    }\n    peekedString = null;\n    peeked = PEEKED_NONE;\n    pathIndices[stackSize - 1]++;\n    return result;\n}", "method_range": "1161-1208", "fault_locations": "1180,1181,1182"}}