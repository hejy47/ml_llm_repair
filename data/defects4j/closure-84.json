{"com.google.javascript.jscomp.parsing.IRFactory.processAssignment": {"buggy_content": "@Override\nNode processAssignment(Assignment assignmentNode) {\n    Node assign = processInfixExpression(assignmentNode);\n    return assign;\n}", "method_range": "338-342", "fault_locations": "340,341"}, "com.google.javascript.jscomp.parsing.IRFactory.processUnaryExpression": {"buggy_content": "@Override\nNode processUnaryExpression(UnaryExpression exprNode) {\n    int type = transformTokenType(exprNode.getType());\n    Node operand = transform(exprNode.getOperand());\n    if (type == Token.NEG && operand.getType() == Token.NUMBER) {\n        operand.setDouble(-operand.getDouble());\n        return operand;\n    } else {\n        Node node = newNode(type, operand);\n        if (exprNode.isPostfix()) {\n            node.putBooleanProp(Node.INCRDECR_PROP, true);\n        }\n        return node;\n    }\n}", "method_range": "789-804", "fault_locations": "796,797"}}