{"com.google.javascript.jscomp.Compiler.init": {"buggy_content": "public void init(JSSourceFile[] externs, JSModule[] modules, CompilerOptions options) {\n    initOptions(options);\n    checkFirstModule(modules);\n    this.externs = makeCompilerInput(externs, true);\n    this.modules = modules;\n    // Generate the module graph, and report any errors in the module\n    // specification as errors.\n    try {\n        this.moduleGraph = new JSModuleGraph(modules);\n    } catch (JSModuleGraph.ModuleDependenceException e) {\n        // problems with the module format.  Report as an error.  The\n        // message gives all details.\n        report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n        return;\n    }\n    this.inputs = getAllInputsFromModules();\n    initBasedOnOptions();\n    initInputsByNameMap();\n}", "method_range": "259-282", "fault_locations": "263,264"}, "com.google.javascript.jscomp.Compiler.getNodeForCodeInsertion": {"buggy_content": "//------------------------------------------------------------------------\n// Package-private helpers\n//------------------------------------------------------------------------\n@Override\nNode getNodeForCodeInsertion(JSModule module) {\n    if (module == null) {\n        if (inputs.length == 0) {\n            throw new IllegalStateException(\"No inputs\");\n        }\n        return inputs[0].getAstRoot(this);\n    }\n    List<CompilerInput> inputs = module.getInputs();\n    if (inputs.size() > 0) {\n        return inputs.get(0).getAstRoot(this);\n    }\n    for (JSModule m : getModuleGraph().getTransitiveDepsDeepestFirst(module)) {\n        inputs = m.getInputs();\n        if (inputs.size() > 0) {\n            return inputs.get(0).getAstRoot(this);\n        }\n    }\n    throw new IllegalStateException(\"Root module has no inputs\");\n}", "method_range": "1568-1589", "fault_locations": "1582,1583,1584,1585,1586,1587"}}