{"org.apache.commons.math.complex.Complex.Complex": {"buggy_content": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n}", "method_range": "98-105", "fault_locations": "104,105"}, "org.apache.commons.math.complex.Complex.divide": {"buggy_content": "public Complex divide(Complex divisor) throws NullArgumentException {\n    MathUtils.checkNotNull(divisor);\n    if (isNaN || divisor.isNaN) {\n        return NaN;\n    }\n    if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {\n        return NaN;\n    }\n    if (divisor.isInfinite() && !isInfinite()) {\n        return ZERO;\n    }\n    final double c = divisor.getReal();\n    final double d = divisor.getImaginary();\n    if (FastMath.abs(c) < FastMath.abs(d)) {\n        double q = c / d;\n        double denominator = c * q + d;\n        return createComplex((real * q + imaginary) / denominator, (imaginary * q - real) / denominator);\n    } else {\n        double q = d / c;\n        double denominator = d * q + c;\n        return createComplex((imaginary * q + real) / denominator, (imaginary - real * q) / denominator);\n    }\n}", "method_range": "249-278", "fault_locations": "256,257"}, "org.apache.commons.math.complex.Complex.divide2": {"buggy_content": "public Complex divide(double divisor) {\n    if (isNaN || Double.isNaN(divisor)) {\n        return NaN;\n    }\n    if (divisor == 0d) {\n        return NaN;\n    }\n    if (Double.isInfinite(divisor)) {\n        return !isInfinite() ? ZERO : NaN;\n    }\n    return createComplex(real / divisor, imaginary / divisor);\n}", "method_range": "288-300", "fault_locations": "290,291,293"}}