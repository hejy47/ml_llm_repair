{"org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readNewEntry": {"buggy_content": "private CpioArchiveEntry readNewEntry(final boolean hasCrc) throws IOException {\n    CpioArchiveEntry ret;\n    if (hasCrc) {\n        ret = new CpioArchiveEntry(FORMAT_NEW_CRC);\n    } else {\n        ret = new CpioArchiveEntry(FORMAT_NEW);\n    }\n    ret.setInode(readAsciiLong(8, 16));\n    long mode = readAsciiLong(8, 16);\n    if (mode != 0) {\n        ret.setMode(mode);\n    }\n    ret.setUID(readAsciiLong(8, 16));\n    ret.setGID(readAsciiLong(8, 16));\n    ret.setNumberOfLinks(readAsciiLong(8, 16));\n    ret.setTime(readAsciiLong(8, 16));\n    ret.setSize(readAsciiLong(8, 16));\n    ret.setDeviceMaj(readAsciiLong(8, 16));\n    ret.setDeviceMin(readAsciiLong(8, 16));\n    ret.setRemoteDeviceMaj(readAsciiLong(8, 16));\n    ret.setRemoteDeviceMin(readAsciiLong(8, 16));\n    long namesize = readAsciiLong(8, 16);\n    ret.setChksum(readAsciiLong(8, 16));\n    String name = readCString((int) namesize);\n    ret.setName(name);\n    if (mode == 0 && !name.equals(CPIO_TRAILER)) {\n        throw new IOException(\"Mode 0 only allowed in the trailer. Found entry name: \" + name + \" Occured at byte: \" + getBytesRead());\n    }\n    skip(ret.getHeaderPadCount());\n    return ret;\n}", "method_range": "320-353", "fault_locations": "331,345,346,347"}, "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldAsciiEntry": {"buggy_content": "private CpioArchiveEntry readOldAsciiEntry() throws IOException {\n    CpioArchiveEntry ret = new CpioArchiveEntry(FORMAT_OLD_ASCII);\n    ret.setDevice(readAsciiLong(6, 8));\n    ret.setInode(readAsciiLong(6, 8));\n    final long mode = readAsciiLong(6, 8);\n    if (mode != 0) {\n        ret.setMode(mode);\n    }\n    ret.setUID(readAsciiLong(6, 8));\n    ret.setGID(readAsciiLong(6, 8));\n    ret.setNumberOfLinks(readAsciiLong(6, 8));\n    ret.setRemoteDevice(readAsciiLong(6, 8));\n    ret.setTime(readAsciiLong(11, 8));\n    long namesize = readAsciiLong(6, 8);\n    ret.setSize(readAsciiLong(11, 8));\n    final String name = readCString((int) namesize);\n    ret.setName(name);\n    if (mode == 0 && !name.equals(CPIO_TRAILER)) {\n        throw new IOException(\"Mode 0 only allowed in the trailer. Found entry: \" + name + \" Occured at byte: \" + getBytesRead());\n    }\n    return ret;\n}", "method_range": "355-378", "fault_locations": "358,359,361,369,370,373"}, "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldBinaryEntry": {"buggy_content": "private CpioArchiveEntry readOldBinaryEntry(final boolean swapHalfWord) throws IOException {\n    CpioArchiveEntry ret = new CpioArchiveEntry(FORMAT_OLD_BINARY);\n    ret.setDevice(readBinaryLong(2, swapHalfWord));\n    ret.setInode(readBinaryLong(2, swapHalfWord));\n    final long mode = readBinaryLong(2, swapHalfWord);\n    if (mode != 0) {\n        ret.setMode(mode);\n    }\n    ret.setUID(readBinaryLong(2, swapHalfWord));\n    ret.setGID(readBinaryLong(2, swapHalfWord));\n    ret.setNumberOfLinks(readBinaryLong(2, swapHalfWord));\n    ret.setRemoteDevice(readBinaryLong(2, swapHalfWord));\n    ret.setTime(readBinaryLong(4, swapHalfWord));\n    long namesize = readBinaryLong(2, swapHalfWord);\n    ret.setSize(readBinaryLong(4, swapHalfWord));\n    final String name = readCString((int) namesize);\n    ret.setName(name);\n    if (mode == 0 && !name.equals(CPIO_TRAILER)) {\n        throw new IOException(\"Mode 0 only allowed in the trailer. Found entry: \" + name + \"Occured at byte: \" + getBytesRead());\n    }\n    skip(ret.getHeaderPadCount());\n    return ret;\n}", "method_range": "380-405", "fault_locations": "382,383,387,393,394,399"}}