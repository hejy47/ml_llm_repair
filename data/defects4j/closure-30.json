{"com.google.javascript.jscomp.FlowSensitiveInlineVariables.process": {"buggy_content": "@Override\npublic void process(Node externs, Node root) {\n    (new NodeTraversal(compiler, this)).traverse(root);\n}", "method_range": "155-158", "fault_locations": "157"}, "com.google.javascript.jscomp.MustBeReachingVariableDef.computeDependence": {"buggy_content": "private void computeDependence(final Definition def, Node rValue) {\n    NodeTraversal.traverse(compiler, rValue, new AbstractCfgNodeTraversalCallback() {\n\n        @Override\n        public void visit(NodeTraversal t, Node n, Node parent) {\n            if (n.isName() && jsScope.isDeclared(n.getString(), true)) {\n                Var dep = jsScope.getVar(n.getString());\n                def.depends.add(dep);\n            }\n        }\n    });\n}", "method_range": "391-402", "fault_locations": "396,397,398"}, "com.google.javascript.jscomp.MustBeReachingVariableDef.visit": {"buggy_content": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.isName() && jsScope.isDeclared(n.getString(), true)) {\n        Var dep = jsScope.getVar(n.getString());\n        def.depends.add(dep);\n    }\n}", "method_range": "394-400", "fault_locations": "396,397,398"}, "com.google.javascript.jscomp.MustBeReachingVariableDef.dependsOnOuterScopeVars": {"buggy_content": "boolean dependsOnOuterScopeVars(String name, Node useNode) {\n    Preconditions.checkArgument(getCfg().hasNode(useNode));\n    GraphNode<Node, Branch> n = getCfg().getNode(useNode);\n    FlowState<MustDef> state = n.getAnnotation();\n    Definition def = state.getIn().reachingDef.get(jsScope.getVar(name));\n    for (Var s : def.depends) {\n        if (s.scope != jsScope) {\n            return true;\n        }\n    }\n    return false;\n}", "method_range": "425-437", "fault_locations": "428,429"}}