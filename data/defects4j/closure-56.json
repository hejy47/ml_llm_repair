{"com.google.javascript.jscomp.SourceFile.getLine": {"buggy_content": "public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n        // NOTE(nicksantos): Right now, this is optimized for few warnings.\n        // This is probably the right trade-off, but will be slow if there\n        // are lots of warnings in one file.\n        js = getCode();\n    } catch (IOException e) {\n        return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    // If we've saved a previous offset and it's for a line less than the\n    // one we're searching for, then start at that point.\n    if (lineNumber >= lastLine) {\n        pos = lastOffset;\n        startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n        int nextpos = js.indexOf('\\n', pos);\n        if (nextpos == -1) {\n            return null;\n        }\n        pos = nextpos + 1;\n    }\n    // Remember this offset for the next search we do.\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n        // If next new line cannot be found, there are two cases\n        // 1. pos already reaches the end of file, then null should be returned\n        // 2. otherwise, return the contents between pos and the end of file.\n        return null;\n    } else {\n        return js.substring(pos, js.indexOf('\\n', pos));\n    }\n}", "method_range": "205-246", "fault_locations": "241,242,243"}}