{"com.google.javascript.jscomp.ScopedAliases.AliasedTypeNode": {"buggy_content": "AliasedTypeNode(Node typeReference, String aliasName) {\n    this.typeReference = typeReference;\n    this.aliasName = aliasName;\n}", "method_range": "172-176", "fault_locations": "174,175"}, "com.google.javascript.jscomp.ScopedAliases.applyAlias": {"buggy_content": "@Override\npublic void applyAlias() {\n    typeReference.setString(aliasName);\n}", "method_range": "178-181", "fault_locations": "180"}, "com.google.javascript.jscomp.ScopedAliases.fixTypeNode": {"buggy_content": "private void fixTypeNode(Node typeNode) {\n    if (typeNode.isString()) {\n        String name = typeNode.getString();\n        int endIndex = name.indexOf('.');\n        if (endIndex == -1) {\n            endIndex = name.length();\n        }\n        String baseName = name.substring(0, endIndex);\n        Var aliasVar = aliases.get(baseName);\n        if (aliasVar != null) {\n            Node aliasedNode = aliasVar.getInitialValue();\n            aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));\n        }\n    }\n    for (Node child = typeNode.getFirstChild(); child != null; child = child.getNext()) {\n        fixTypeNode(child);\n    }\n}", "method_range": "457-476", "fault_locations": "468"}}