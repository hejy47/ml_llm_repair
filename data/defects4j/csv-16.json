{"org.apache.commons.csv.CSVParser.CSVParser": {"buggy_content": "@SuppressWarnings(\"resource\")\npublic CSVParser(final Reader reader, final CSVFormat format, final long characterOffset, final long recordNumber) throws IOException {\n    Assertions.notNull(reader, \"reader\");\n    Assertions.notNull(format, \"format\");\n    this.format = format;\n    this.lexer = new Lexer(format, new ExtendedBufferedReader(reader));\n    this.headerMap = this.initializeHeader();\n    this.characterOffset = characterOffset;\n    this.recordNumber = recordNumber - 1;\n}", "method_range": "349-360", "fault_locations": "356,357"}, "org.apache.commons.csv.CSVParser.iterator": {"buggy_content": "@Override\npublic Iterator<CSVRecord> iterator() {\n    return new Iterator<CSVRecord>() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return CSVParser.this.nextRecord();\n            } catch (final IOException e) {\n                throw new IllegalStateException(e.getClass().getSimpleName() + \" reading next record: \" + e.toString(), e);\n            }\n        }\n\n        @Override\n        public boolean hasNext() {\n            if (CSVParser.this.isClosed()) {\n                return false;\n            }\n            if (this.current == null) {\n                this.current = this.getNextRecord();\n            }\n            return this.current != null;\n        }\n\n        @Override\n        public CSVRecord next() {\n            if (CSVParser.this.isClosed()) {\n                throw new NoSuchElementException(\"CSVParser has been closed\");\n            }\n            CSVRecord next = this.current;\n            this.current = null;\n            if (next == null) {\n                // hasNext() wasn't called before\n                next = this.getNextRecord();\n                if (next == null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        @Override\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}", "method_range": "521-571", "fault_locations": "523,571"}}