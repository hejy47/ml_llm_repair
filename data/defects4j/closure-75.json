{"com.google.javascript.jscomp.NodeUtil.getStringNumberValue": {"buggy_content": "static Double getStringNumberValue(String rawJsString) {\n    // vertical tab is not always whitespace\n    String s = trimJsWhiteSpace(rawJsString);\n    // return ScriptRuntime.toNumber(s);\n    if (s.length() == 0) {\n        return 0.0;\n    }\n    if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n        // Attempt to convert hex numbers.\n        try {\n            return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n        } catch (NumberFormatException e) {\n            return Double.NaN;\n        }\n    }\n    if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n        // hex numbers with explicit signs vary between browsers.\n        return null;\n    }\n    // FireFox and IE treat the \"Infinity\" differently. FireFox is case\n    // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n    if (s.equals(\"infinity\") || s.equals(\"-infinity\") || s.equals(\"+infinity\")) {\n        return null;\n    }\n    try {\n        return Double.parseDouble(s);\n    } catch (NumberFormatException e) {\n        return Double.NaN;\n    }\n}", "method_range": "312-353", "fault_locations": "315"}, "com.google.javascript.jscomp.NodeUtil.isStrWhiteSpaceChar": {"buggy_content": "static TernaryValue isStrWhiteSpaceChar(int c) {\n    switch(c) {\n        case // <VT>\n        '\\u000B':\n            return TernaryValue.TRUE;\n        // <SP>\n        case ' ':\n        // <LF>\n        case '\\n':\n        // <CR>\n        case '\\r':\n        // <TAB>\n        case '\\t':\n        // <NBSP>\n        case '\\u00A0':\n        // <FF>\n        case '\\u000C':\n        // <LS>\n        case '\\u2028':\n        // <PS>\n        case '\\u2029':\n        case // <BOM>\n        '\\uFEFF':\n            return TernaryValue.TRUE;\n        default:\n            return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;\n    }\n}", "method_range": "372-390", "fault_locations": "375"}}