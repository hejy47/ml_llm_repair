{"com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral": {"buggy_content": "protected void _reportTooLongIntegral(int expType, String rawNum) throws IOException {\n    final String numDesc = _longIntegerDesc(rawNum);\n    _reportError(\"Numeric value (%s) out of range of %s\", numDesc, (expType == NR_LONG) ? \"long\" : \"int\");\n}", "method_range": "867-872", "fault_locations": "869,870,871"}, "com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt": {"buggy_content": "protected void convertNumberToInt() throws IOException {\n    // First, converting from long ought to be easy\n    if ((_numTypesValid & NR_LONG) != 0) {\n        // Let's verify it's lossless conversion by simple roundtrip\n        int result = (int) _numberLong;\n        if (((long) result) != _numberLong) {\n            _reportError(\"Numeric value (\" + getText() + \") out of range of int\");\n        }\n        _numberInt = result;\n    } else if ((_numTypesValid & NR_BIGINT) != 0) {\n        if (BI_MIN_INT.compareTo(_numberBigInt) > 0 || BI_MAX_INT.compareTo(_numberBigInt) < 0) {\n            reportOverflowInt();\n        }\n        _numberInt = _numberBigInt.intValue();\n    } else if ((_numTypesValid & NR_DOUBLE) != 0) {\n        // Need to check boundaries\n        if (_numberDouble < MIN_INT_D || _numberDouble > MAX_INT_D) {\n            reportOverflowInt();\n        }\n        _numberInt = (int) _numberDouble;\n    } else if ((_numTypesValid & NR_BIGDECIMAL) != 0) {\n        if (BD_MIN_INT.compareTo(_numberBigDecimal) > 0 || BD_MAX_INT.compareTo(_numberBigDecimal) < 0) {\n            reportOverflowInt();\n        }\n        _numberInt = _numberBigDecimal.intValue();\n    } else {\n        _throwInternal();\n    }\n    _numTypesValid |= NR_INT;\n}", "method_range": "880-912", "fault_locations": "883,884,887"}, "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt": {"buggy_content": "protected void reportOverflowInt(String numDesc) throws IOException {\n    _reportError(String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE, Integer.MAX_VALUE));\n}", "method_range": "564-567", "fault_locations": "565,566,567"}, "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong": {"buggy_content": "protected void reportOverflowLong(String numDesc) throws IOException {\n    _reportError(String.format(\"Numeric value (%s) out of range of long (%d - %s)\", _longIntegerDesc(numDesc), Long.MIN_VALUE, Long.MAX_VALUE));\n}", "method_range": "581-584", "fault_locations": "582,583"}}