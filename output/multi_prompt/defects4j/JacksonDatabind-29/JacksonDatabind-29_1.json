[{"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    if (t == JsonToken.VALUE_NULL) {\n        merged.writeNull();\n    } else {\n        merged.copyCurrentStructure(p2);\n    }\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,19 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeNull();\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,12 +1,16 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeNull();\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    // Fixed: check for null token before copying structure\n    if (t != null) {\n        merged.copyCurrentStructure(p2);\n    }\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,18 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    // Fixed: check for null token before copying structure\n+    if (t != null) {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,12 +1,15 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    // Fixed: check for null token before copying structure\n+    if (t != null) {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n        JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, false);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}\n\nThe only change made was to the `TokenBuffer` constructor call, setting the second argument to `false` (indicating it should not auto-close the underlying `OutputStream` when it is copied to).", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,9 +1,9 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n-    JsonParser p2 = _tokens[index].asParser(p);\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n+        JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n@@ -11,5 +11,5 @@\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -3,7 +3,7 @@\n         JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, false);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser();\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, ctxt); // pass the DeserializationContext to TokenBuffer\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(); // do not pass original parser as argument\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt); // pass the DeserializationContext to TokenBuffer\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser(); // do not pass original parser as argument\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt); // pass the DeserializationContext to TokenBuffer\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser(); // do not pass original parser as argument\n     mp.nextToken();\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, ctxt);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,9 +1,9 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n@@ -11,5 +11,5 @@\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,9 +1,9 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, false);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    if (t == JsonToken.VALUE_NULL) {\n        merged.writeNull();\n    } else {\n        merged.copyCurrentStructure(p2);\n    }\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,19 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeNull();\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,12 +1,16 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeNull();\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, false); // fix: pass false parameter to prevent flushing of buffer\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,9 +1,9 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false); // fix: pass false parameter to prevent flushing of buffer\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n@@ -11,5 +11,5 @@\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,9 +1,9 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false); // fix: pass false parameter to prevent flushing of buffer\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n        JsonParser p2 = _tokens[index].asParser();\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mergedParser = merged.asParser();\n    mergedParser.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mergedParser, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n-    JsonParser p2 = _tokens[index].asParser(p);\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n+        JsonParser p2 = _tokens[index].asParser();\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n@@ -9,7 +9,7 @@\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n-    mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    JsonParser mergedParser = merged.asParser();\n+    mergedParser.nextToken();\n+    _properties[index].getProperty().deserializeAndSet(mergedParser, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+        JsonParser p2 = _tokens[index].asParser();\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n@@ -9,7 +9,7 @@\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n-    mp.nextToken();\n-    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n+    JsonParser mergedParser = merged.asParser();\n+    mergedParser.nextToken();\n+    _properties[index].getProperty().deserializeAndSet(mergedParser, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n        JsonParser p2 = _tokens[index].asParser(p);\n        JsonToken t = p2.nextToken();\n        // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n        if (t == null) {\n            _properties[index].getProperty().set(bean, null);\n            return;\n        }\n        TokenBuffer merged = new TokenBuffer(p);\n        merged.writeStartArray();\n        merged.writeString(typeId);\n        merged.copyCurrentStructure(p2);\n        merged.writeEndArray();\n        // needs to point to START_OBJECT (or whatever first token is)\n        JsonParser mp = merged.asParser(p);\n        mp.nextToken();\n        _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n    }", "diff": "", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    if (t == JsonToken.VALUE_NULL) {\n        merged.writeString(\"null\");\n    } else {\n        merged.copyCurrentStructure(p2);\n    }\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,19 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeString(\"null\");\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,12 +1,16 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n-    merged.copyCurrentStructure(p2);\n+    if (t == JsonToken.VALUE_NULL) {\n+        merged.writeString(\"null\");\n+    } else {\n+        merged.copyCurrentStructure(p2);\n+    }\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n        JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, ctxt, false);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser();\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n-    JsonParser p2 = _tokens[index].asParser(p);\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n+        JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -3,13 +3,13 @@\n         JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, ctxt, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    if (t == null) {\n        throw ctxt.mappingException(\"No token available for index: \" + index);\n    }\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    t = mp.nextToken();\n    if (t != JsonToken.START_OBJECT) {\n        throw ctxt.mappingException(\"Expected START_OBJECT for merged JSON, found \" + t);\n    }\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,7 +1,10 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n+    if (t == null) {\n+        throw ctxt.mappingException(\"No token available for index: \" + index);\n+    }\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n@@ -10,6 +13,9 @@\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n-    mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    t = mp.nextToken();\n+    if (t != JsonToken.START_OBJECT) {\n+        throw ctxt.mappingException(\"Expected START_OBJECT for merged JSON, found \" + t);\n+    }\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,7 +1,10 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n+    if (t == null) {\n+        throw ctxt.mappingException(\"No token available for index: \" + index);\n+    }\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n@@ -10,6 +13,9 @@\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n-    mp.nextToken();\n+    t = mp.nextToken();\n+    if (t != JsonToken.START_OBJECT) {\n+        throw ctxt.mappingException(\"Expected START_OBJECT for merged JSON, found \" + t);\n+    }\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, true);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser();\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, true);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, true);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    // fixed: check for null value\n    if (p2.nextToken() == null) {\n        _properties[index].getProperty().set(bean, null);\n        return;\n    }\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,7 +1,11 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n-    JsonToken t = p2.nextToken();\n+    // fixed: check for null value\n+    if (p2.nextToken() == null) {\n+        _properties[index].getProperty().set(bean, null);\n+        return;\n+    }\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n@@ -11,5 +15,5 @@\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,7 +1,11 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n-    JsonToken t = p2.nextToken();\n+    JsonParser p2 = _tokens[index].asParser(p);\n+    // fixed: check for null value\n+    if (p2.nextToken() == null) {\n+        _properties[index].getProperty().set(bean, null);\n+        return;\n+    }\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n        JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    TokenBuffer merged = new TokenBuffer(p, false);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser();\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,15 +1,15 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n-    JsonParser p2 = _tokens[index].asParser(p);\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n+        JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -3,13 +3,13 @@\n         JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n-    TokenBuffer merged = new TokenBuffer(p);\n+    TokenBuffer merged = new TokenBuffer(p, false);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n     merged.copyCurrentStructure(p2);\n     merged.writeEndArray();\n     // needs to point to START_OBJECT (or whatever first token is)\n-    JsonParser mp = merged.asParser(p);\n+    JsonParser mp = merged.asParser();\n     mp.nextToken();\n     _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"resource\")\nprotected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n    JsonParser p2 = _tokens[index].asParser(p);\n    JsonToken t = p2.nextToken();\n    // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n    if (t == JsonToken.VALUE_NULL) {\n        _properties[index].getProperty().set(bean, null);\n        return;\n    }\n    TokenBuffer merged = new TokenBuffer(p);\n    merged.writeStartArray();\n    merged.writeString(typeId);\n    merged.copyCurrentStructure(p2);\n    merged.writeEndArray();\n    // needs to point to START_OBJECT (or whatever first token is)\n    JsonParser mp = merged.asParser(p);\n    mp.nextToken();\n    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n}", "diff": "--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserialize\n@@ -1,8 +1,12 @@\n @SuppressWarnings(\"resource\")\n-protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId) throws IOException {\n+protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n     JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n+    if (t == JsonToken.VALUE_NULL) {\n+        _properties[index].getProperty().set(bean, null);\n+        return;\n+    }\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n@@ -11,5 +15,5 @@\n     // needs to point to START_OBJECT (or whatever first token is)\n     JsonParser mp = merged.asParser(p);\n     mp.nextToken();\n-    return _properties[index].getProperty().deserialize(mp, ctxt);\n+    _properties[index].getProperty().deserializeAndSet(mp, ctxt, bean);\n }\n--- com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n+++ com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java@_deserializeAndSet\n@@ -1,8 +1,12 @@\n @SuppressWarnings(\"resource\")\n protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId) throws IOException {\n-        JsonParser p2 = _tokens[index].asParser(p);\n+    JsonParser p2 = _tokens[index].asParser(p);\n     JsonToken t = p2.nextToken();\n     // 29-Sep-2015, tatu: As per [databind#942], nulls need special support\n+    if (t == JsonToken.VALUE_NULL) {\n+        _properties[index].getProperty().set(bean, null);\n+        return;\n+    }\n     TokenBuffer merged = new TokenBuffer(p);\n     merged.writeStartArray();\n     merged.writeString(typeId);\n", "finish_reason": "stop", "valid": false, "num": 1}]