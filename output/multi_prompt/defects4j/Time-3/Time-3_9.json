[{"output": "public void addMillis(final int millis) {\n    setMillis(getChronology().millis().add(getMillis(), millis));\n    // only add if the millis argument is greater than 0\n    if (millis > 0) {\n        setMillis(getChronology().millis().add(getMillis(), millis));\n     }\n}", "diff": "--- org/joda/time/MutableDateTime.java@addMillis\n+++ org/joda/time/MutableDateTime.java@addMillis\n@@ -1,3 +1,7 @@\n public void addMillis(final int millis) {\n     setMillis(getChronology().millis().add(getMillis(), millis));\n+    // only add if the millis argument is greater than 0\n+    if (millis > 0) {\n+        setMillis(getChronology().millis().add(getMillis(), millis));\n+     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void addMillis(final int millis) {\n    setMillis(getMillis() + millis);\n}", "diff": "--- org/joda/time/MutableDateTime.java@addMillis\n+++ org/joda/time/MutableDateTime.java@addMillis\n@@ -1,3 +1,3 @@\n public void addMillis(final int millis) {\n-    setMillis(getChronology().millis().add(getMillis(), millis));\n+    setMillis(getMillis() + millis);\n }\n", "finish_reason": "stop", "valid": false, "num": 15}, {"output": "public void addMillis(final int millis) {\n    setMillis(getChronology().millis().add(getMillis(), millis)); // no changes needed here\n    setMillis(getChronology().millis().remainder(getMillis(), DateTimeConstants.MILLIS_PER_SECOND)); // fix: remove excess milliseconds beyond a second\n}", "diff": "--- org/joda/time/MutableDateTime.java@addMillis\n+++ org/joda/time/MutableDateTime.java@addMillis\n@@ -1,3 +1,4 @@\n public void addMillis(final int millis) {\n-    setMillis(getChronology().millis().add(getMillis(), millis));\n+    setMillis(getChronology().millis().add(getMillis(), millis)); // no changes needed here\n+    setMillis(getChronology().millis().remainder(getMillis(), DateTimeConstants.MILLIS_PER_SECOND)); // fix: remove excess milliseconds beyond a second\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void addMillis(final int millis) {\n    setMillis(getChronology().millis().add(getMillis(), (long)millis));\n}", "diff": "--- org/joda/time/MutableDateTime.java@addMillis\n+++ org/joda/time/MutableDateTime.java@addMillis\n@@ -1,3 +1,3 @@\n public void addMillis(final int millis) {\n-    setMillis(getChronology().millis().add(getMillis(), millis));\n+    setMillis(getChronology().millis().add(getMillis(), (long)millis));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void addMillis(final int millis) {\n    setMillis(getChronology().millis().add(getMillis(), (long) millis));\n}", "diff": "--- org/joda/time/MutableDateTime.java@addMillis\n+++ org/joda/time/MutableDateTime.java@addMillis\n@@ -1,3 +1,3 @@\n public void addMillis(final int millis) {\n-    setMillis(getChronology().millis().add(getMillis(), millis));\n+    setMillis(getChronology().millis().add(getMillis(), (long) millis));\n }\n", "finish_reason": "stop", "valid": false, "num": 2}]