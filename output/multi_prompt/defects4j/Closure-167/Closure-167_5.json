[{"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BooleanLiteral.get(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BooleanLiteral.get(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BooleanLiteral.fromBoolean(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BooleanLiteral.fromBoolean(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 10}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BooleanLiteral.getBooleanLiteral(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BooleanLiteral.getBooleanLiteral(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(outcome ? BooleanLiteral.TRUE : BooleanLiteral.FALSE)) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(outcome ? BooleanLiteral.TRUE : BooleanLiteral.FALSE)) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BooleanLiteral.getFromBoolean(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BooleanLiteral.getFromBoolean(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BooleanLiteral.of(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BooleanLiteral.of(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(outcome)) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NULL_OR_VOID);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -3,6 +3,6 @@\n     if (literals.contains(outcome)) {\n         return this;\n     } else {\n-        return getNativeType(JSTypeNative.NO_TYPE);\n+        return getNativeType(JSTypeNative.NULL_OR_VOID);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n    BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n    if (literals.contains(BoolLiteral.get(outcome))) {\n        return this;\n    } else {\n        return getNativeType(JSTypeNative.NO_TYPE);\n    }\n}", "diff": "--- com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n+++ com/google/javascript/rhino/jstype/JSType.java@getRestrictedTypeGivenToBooleanOutcome\n@@ -1,6 +1,6 @@\n public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) {\n     BooleanLiteralSet literals = getPossibleToBooleanOutcomes();\n-    if (literals.contains(outcome)) {\n+    if (literals.contains(BoolLiteral.get(outcome))) {\n         return this;\n     } else {\n         return getNativeType(JSTypeNative.NO_TYPE);\n", "finish_reason": "stop", "valid": false, "num": 1}]