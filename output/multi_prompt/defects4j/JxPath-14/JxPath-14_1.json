[{"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return Double.valueOf(Math.ceil(v)); // return a Double object instead of a primitive double\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return Double.valueOf(Math.ceil(v)); // return a Double object instead of a primitive double\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return new Double(Math.ceil(v)).intValue();\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return new Double(Math.ceil(v)).intValue();\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return new Double(Math.ceil((double) v));\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return new Double(Math.ceil((double) v));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.numberValue(getArg1().computeValue(context));\n    return new Double(Math.ceil(v));\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n-    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n+    double v = InfoSetUtil.numberValue(getArg1().computeValue(context));\n     return new Double(Math.ceil(v));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return (int)Math.ceil(v);\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return (int)Math.ceil(v);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return (int) Math.ceil(v);\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return (int) Math.ceil(v);\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return Math.ceil(v);\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return Math.ceil(v);\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg(0).computeValue(context));\n    return Math.ceil(v);\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n-    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    double v = InfoSetUtil.doubleValue(getArg(0).computeValue(context));\n+    return Math.ceil(v);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return new Double(Math.ceil(v));\n}", "diff": "", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "protected Object functionCeiling(EvalContext context) {\n    assertArgCount(1);\n    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    return Double.valueOf(Math.ceil(v));\n}", "diff": "--- org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n+++ org/apache/commons/jxpath/ri/compiler/CoreFunction.java@functionCeiling\n@@ -1,5 +1,5 @@\n protected Object functionCeiling(EvalContext context) {\n     assertArgCount(1);\n     double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n-    return new Double(Math.ceil(v));\n+    return Double.valueOf(Math.ceil(v));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]