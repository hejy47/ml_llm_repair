[{"output": "private void openLine() throws IOException {\n    if (!firstChar) {\n        out.append(\",\");\n    } else {\n        firstChar = false;\n    }\n    out.append(\"[\");\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n+    if (!firstChar) {\n+        out.append(\",\");\n+    } else {\n+        firstChar = false;\n+    }\n     out.append(\"[\");\n-    this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "private void openLine() throws IOException {\n    if (!this.firstChar) {\n        out.append(\",\");\n    } else {\n        this.firstChar = false;\n    }\n    out.append(\"[\");\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n+    if (!this.firstChar) {\n+        out.append(\",\");\n+    } else {\n+        this.firstChar = false;\n+    }\n     out.append(\"[\");\n-    this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (firstChar) {\n        out.append(\"[\");\n        firstChar = false;\n    } else {\n        out.append(\",[\");\n    }\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n-    this.firstChar = true;\n+    if (firstChar) {\n+        out.append(\"[\");\n+        firstChar = false;\n+    } else {\n+        out.append(\",[\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "private void openLine() throws IOException {\n    if (out.length() > 0 && out.charAt(out.length() - 1) != '\\n') {\n        out.append(\"\\n\");\n    }\n    out.append(\"[\");\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,7 @@\n private void openLine() throws IOException {\n+    if (out.length() > 0 && out.charAt(out.length() - 1) != '\\n') {\n+        out.append(\"\\n\");\n+    }\n     out.append(\"[\");\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (this.firstChar) {\n        out.append(\"[\");\n        this.firstChar = false;\n    }\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,6 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n-    this.firstChar = true;\n+    if (this.firstChar) {\n+        out.append(\"[\");\n+        this.firstChar = false;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    out.write(\"[\"); // Changed from out.append() to out.write()\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,4 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n+    out.write(\"[\"); // Changed from out.append() to out.write()\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (firstChar) {\n        out.append(\"[\");\n        firstChar = false;\n    } else {\n        out.append(\",\");\n    }\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n-    this.firstChar = true;\n+    if (firstChar) {\n+        out.append(\"[\");\n+        firstChar = false;\n+    } else {\n+        out.append(\",\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "private void openLine() throws IOException {\n    if(!this.firstChar){\n        out.append(\",\");\n    }else{\n        this.firstChar = false;\n    }\n    out.append(\"[\");\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n+    if(!this.firstChar){\n+        out.append(\",\");\n+    }else{\n+        this.firstChar = false;\n+    }\n     out.append(\"[\");\n-    this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    out.write(\"[\");\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,4 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n+    out.write(\"[\");\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (firstChar) {\n        out.append(\"[\");\n        firstChar = false;\n    }\n    else {\n        out.append(\",[\");\n    }\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,9 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n-    this.firstChar = true;\n+    if (firstChar) {\n+        out.append(\"[\");\n+        firstChar = false;\n+    }\n+    else {\n+        out.append(\",[\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if(out.length() > 0){\n        out.append(\",\");\n    }\n    out.append(\"[\");\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,7 @@\n private void openLine() throws IOException {\n+    if(out.length() > 0){\n+        out.append(\",\");\n+    }\n     out.append(\"[\");\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    out.write(\"[\"); // Use write() instead of append()\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,4 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n+    out.write(\"[\"); // Use write() instead of append()\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if(!firstChar) {\n        out.append(\",\");\n    }\n    out.append(\"[\");\n    firstChar = false;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,7 @@\n private void openLine() throws IOException {\n+    if(!firstChar) {\n+        out.append(\",\");\n+    }\n     out.append(\"[\");\n-    this.firstChar = true;\n+    firstChar = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (firstChar) {\n        out.append(\"[\");\n        this.firstChar = false;\n    } else {\n        out.append(\",[\");\n    }\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,8 @@\n private void openLine() throws IOException {\n-    out.append(\"[\");\n-    this.firstChar = true;\n+    if (firstChar) {\n+        out.append(\"[\");\n+        this.firstChar = false;\n+    } else {\n+        out.append(\",[\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void openLine() throws IOException {\n    if (out == null) {\n        throw new IOException(\"OutputWriter not initialized\");\n    }\n    out.append(\"[\");\n    this.firstChar = true;\n}", "diff": "--- com/google/javascript/jscomp/SourceMap.java@openLine\n+++ com/google/javascript/jscomp/SourceMap.java@openLine\n@@ -1,4 +1,7 @@\n private void openLine() throws IOException {\n+    if (out == null) {\n+        throw new IOException(\"OutputWriter not initialized\");\n+    }\n     out.append(\"[\");\n     this.firstChar = true;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]