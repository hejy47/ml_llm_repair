[{"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i < bytes.length - 2 && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i += 2; // skip the CR and LF\n                } else {\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if (i < bytes.length - 2 && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i += 2; // skip the CR and LF\n+                } else {\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != CR && b != LF) {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -14,7 +14,7 @@\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n+        } else if (b != CR && b != LF) {\n             // every other octet is appended except for CR & LF\n             buffer.write(b);\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i + 2 >= bytes.length) {\n                    throw new ArrayIndexOutOfBoundsException(\"Invalid quoted-printable encoding\");\n                }\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != '\\r' && b != '\\n') {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,13 +8,16 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n+                if (i + 2 >= bytes.length) {\n+                    throw new ArrayIndexOutOfBoundsException(\"Invalid quoted-printable encoding\");\n+                }\n                 int u = Utils.digit16(bytes[++i]);\n                 int l = Utils.digit16(bytes[++i]);\n                 buffer.write((char) ((u << 4) + l));\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n+        } else if (b != '\\r' && b != '\\n') {\n             // every other octet is appended except for CR & LF\n             buffer.write(b);\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            // check if there are at least two octets left\n            if (i + 2 < bytes.length) {\n                try {\n                    // if the next two octets are digits, decode them\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                } catch (RuntimeException e) {\n                    throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n                }\n            } else {\n                // if there are not enough octets left, treat as literal '='\n                buffer.write(b);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -6,13 +6,19 @@\n     for (int i = 0; i < bytes.length; i++) {\n         final int b = bytes[i];\n         if (b == ESCAPE_CHAR) {\n-            try {\n-                // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n-            } catch (ArrayIndexOutOfBoundsException e) {\n-                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n+            // check if there are at least two octets left\n+            if (i + 2 < bytes.length) {\n+                try {\n+                    // if the next two octets are digits, decode them\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                } catch (RuntimeException e) {\n+                    throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n+                }\n+            } else {\n+                // if there are not enough octets left, treat as literal '='\n+                buffer.write(b);\n             }\n         } else {\n             // every other octet is appended except for CR & LF\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i += 2; // skip CR and LF\n                    continue; // continue the loop\n                }\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,6 +8,10 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n+                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i += 2; // skip CR and LF\n+                    continue; // continue the loop\n+                }\n                 int u = Utils.digit16(bytes[++i]);\n                 int l = Utils.digit16(bytes[++i]);\n                 buffer.write((char) ((u << 4) + l));\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i < bytes.length - 2 && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i += 2;\n                } else {\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if (i < bytes.length - 2 && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i += 2;\n+                } else {\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i] & 0xFF; // Fix: convert byte to int with proper sign\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i] & 0xFF); // Fix: convert byte to int with proper sign\n                int l = Utils.digit16(bytes[++i] & 0xFF); // Fix: convert byte to int with proper sign\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != '\\r' && b != '\\n') { // Fix: exclude CR and LF from being appended\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -4,18 +4,17 @@\n     }\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < bytes.length; i++) {\n-        final int b = bytes[i];\n+        final int b = bytes[i] & 0xFF; // Fix: convert byte to int with proper sign\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n+                int u = Utils.digit16(bytes[++i] & 0xFF); // Fix: convert byte to int with proper sign\n+                int l = Utils.digit16(bytes[++i] & 0xFF); // Fix: convert byte to int with proper sign\n                 buffer.write((char) ((u << 4) + l));\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n-            // every other octet is appended except for CR & LF\n+        } else if (b != '\\r' && b != '\\n') { // Fix: exclude CR and LF from being appended\n             buffer.write(b);\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if(i+2<bytes.length){\n                  int u = Utils.digit16(bytes[++i]);\n                  int l = Utils.digit16(bytes[++i]);\n                  buffer.write((char) ((u << 4) + l));\n                }else{\n                  throw new DecoderException(\"Invalid quoted-printable encoding\");\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if(i+2<bytes.length){\n+                  int u = Utils.digit16(bytes[++i]);\n+                  int l = Utils.digit16(bytes[++i]);\n+                  buffer.write((char) ((u << 4) + l));\n+                }else{\n+                  throw new DecoderException(\"Invalid quoted-printable encoding\");\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if(i+2 < bytes.length){\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                } else {\n                    throw new DecoderException(\"Invalid quoted-printable encoding\");\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if(i+2 < bytes.length){\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                } else {\n+                    throw new DecoderException(\"Invalid quoted-printable encoding\");\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != '\\r' && b != '\\n') {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -14,7 +14,7 @@\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n+        } else if (b != '\\r' && b != '\\n') {\n             // every other octet is appended except for CR & LF\n             buffer.write(b);\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                //Check for soft line break after decoding next two octets\n                if ((i+2) < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i+=2; //Skip the soft line break\n                } else {\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -7,10 +7,14 @@\n         final int b = bytes[i];\n         if (b == ESCAPE_CHAR) {\n             try {\n-                // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                //Check for soft line break after decoding next two octets\n+                if ((i+2) < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i+=2; //Skip the soft line break\n+                } else {\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i] & 0xFF;\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != '\\r' && b != '\\n') {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -4,7 +4,7 @@\n     }\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < bytes.length; i++) {\n-        final int b = bytes[i];\n+        final int b = bytes[i] & 0xFF;\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n@@ -14,7 +14,7 @@\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n+        } else if (b != '\\r' && b != '\\n') {\n             // every other octet is appended except for CR & LF\n             buffer.write(b);\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i < bytes.length - 2 && bytes[i + 1] == '\\r' && bytes[i + 2] == '\\n') {\n                    i += 2;\n                    continue;\n                }\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,6 +8,10 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n+                if (i < bytes.length - 2 && bytes[i + 1] == '\\r' && bytes[i + 2] == '\\n') {\n+                    i += 2;\n+                    continue;\n+                }\n                 int u = Utils.digit16(bytes[++i]);\n                 int l = Utils.digit16(bytes[++i]);\n                 buffer.write((char) ((u << 4) + l));\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i] & 0xFF; // Fix added to handle negative values\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -4,7 +4,7 @@\n     }\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < bytes.length; i++) {\n-        final int b = bytes[i];\n+        final int b = bytes[i] & 0xFF; // Fix added to handle negative values\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i += 2; // skip over CR and LF\n                } else {\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i += 2; // skip over CR and LF\n+                } else {\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i] & 0xFF; // fix added to ensure correct masking\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -4,7 +4,7 @@\n     }\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < bytes.length; i++) {\n-        final int b = bytes[i];\n+        final int b = bytes[i] & 0xFF; // fix added to ensure correct masking\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n                    i += 2;\n                } else {\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((byte) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,13 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if (i + 2 < bytes.length && bytes[i+1] == '\\r' && bytes[i+2] == '\\n') {\n+                    i += 2;\n+                } else {\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((byte) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i] & 0xFF; // fix for signed byte value\n        if (b == ESCAPE_CHAR) {\n            if (i + 2 >= bytes.length) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\");\n            }\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else if (b != CR && b != LF) { // fix for CR and LF characters\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -4,8 +4,11 @@\n     }\n     ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n     for (int i = 0; i < bytes.length; i++) {\n-        final int b = bytes[i];\n+        final int b = bytes[i] & 0xFF; // fix for signed byte value\n         if (b == ESCAPE_CHAR) {\n+            if (i + 2 >= bytes.length) {\n+                throw new DecoderException(\"Invalid quoted-printable encoding\");\n+            }\n             try {\n                 // if the next octet is a CR we have found a soft line break\n                 int u = Utils.digit16(bytes[++i]);\n@@ -14,8 +17,7 @@\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n-        } else {\n-            // every other octet is appended except for CR & LF\n+        } else if (b != CR && b != LF) { // fix for CR and LF characters\n             buffer.write(b);\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                if (i + 2 < bytes.length && bytes[i+1] == CR && bytes[i+2] == LF) {\n                    i += 2; // skip CRLF\n                } else {\n                    // handle encoded character\n                    int u = Utils.digit16(bytes[++i]);\n                    int l = Utils.digit16(bytes[++i]);\n                    buffer.write((char) ((u << 4) + l));\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -8,9 +8,14 @@\n         if (b == ESCAPE_CHAR) {\n             try {\n                 // if the next octet is a CR we have found a soft line break\n-                int u = Utils.digit16(bytes[++i]);\n-                int l = Utils.digit16(bytes[++i]);\n-                buffer.write((char) ((u << 4) + l));\n+                if (i + 2 < bytes.length && bytes[i+1] == CR && bytes[i+2] == LF) {\n+                    i += 2; // skip CRLF\n+                } else {\n+                    // handle encoded character\n+                    int u = Utils.digit16(bytes[++i]);\n+                    int l = Utils.digit16(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n+                }\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static final byte[] decodeQuotedPrintable(byte[] bytes) throws DecoderException {\n    if (bytes == null) {\n        return null;\n    }\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n    for (int i = 0; i < bytes.length; i++) {\n        final int b = bytes[i];\n        if (b == ESCAPE_CHAR) {\n            try {\n                // if the next octet is a CR we have found a soft line break\n                int u = Utils.digit16(bytes[++i]);\n                int l = Utils.digit16(bytes[++i]);\n                buffer.write((char) ((u << 4) + l));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            } catch (NumberFormatException e) {\n                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n            }\n        } else {\n            // every other octet is appended except for CR & LF\n            buffer.write(b);\n        }\n    }\n    return buffer.toByteArray();\n}", "diff": "--- org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n+++ org/apache/commons/codec/net/QuotedPrintableCodec.java@decodeQuotedPrintable\n@@ -13,6 +13,8 @@\n                 buffer.write((char) ((u << 4) + l));\n             } catch (ArrayIndexOutOfBoundsException e) {\n                 throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n+            } catch (NumberFormatException e) {\n+                throw new DecoderException(\"Invalid quoted-printable encoding\", e);\n             }\n         } else {\n             // every other octet is appended except for CR & LF\n", "finish_reason": "stop", "valid": false, "num": 1}]