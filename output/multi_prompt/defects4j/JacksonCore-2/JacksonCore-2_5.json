[{"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:  // done!\n                return i;\n            case 1:  // skip\n                continue;\n            case 2:  // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3:  // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4:  // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                if (!_skipComment()) {\n                    return i;\n                }\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:  // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1:  // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:  // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:  // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:  // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -29,7 +24,9 @@\n                 _skipCR();\n                 break;\n             case '/':\n-                _skipComment();\n+                if (!_skipComment()) {\n+                    return i;\n+                }\n                 break;\n             case '#':\n                 if (!_skipYAMLComment()) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                if (_inputEnd - _inputPtr < 2)\n                    return _skipWSOrEnd2();\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                if (_inputEnd - _inputPtr < 3)\n                    return _skipWSOrEnd3();\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                if (_inputEnd - _inputPtr < 4)\n                    return _skipWSOrEnd4();\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i >= INT_SPACE) { // Issue was here\n                    _reportInvalidChar(i);\n                }\n                if (i == INT_TAB) {\n                    break;\n                }\n                _throwInvalidSpace(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,23 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n+                if (_inputEnd - _inputPtr < 2)\n+                    return _skipWSOrEnd2();\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n+                if (_inputEnd - _inputPtr < 3)\n+                    return _skipWSOrEnd3();\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n+                if (_inputEnd - _inputPtr < 4)\n+                    return _skipWSOrEnd4();\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -37,14 +38,15 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n-                if (i < 32) {\n-                    _throwInvalidSpace(i);\n+                if (i >= INT_SPACE) { // Issue was here\n+                    _reportInvalidChar(i);\n                 }\n-                _reportInvalidChar(i);\n+                if (i == INT_TAB) {\n+                    break;\n+                }\n+                _throwInvalidSpace(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                if ((_inputPtr < _inputEnd) || loadMore()) {\n                    _skipUtf8_2(i);\n                } else {\n                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n                }\n                break;\n            case 3:\n                if ((_inputPtr < _inputEnd) || loadMore()) {\n                    _skipUtf8_3(i);\n                } else {\n                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n                }\n                break;\n            case 4:\n                if ((_inputPtr < _inputEnd) || loadMore()) {\n                    _skipUtf8_4(i);\n                } else {\n                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n                }\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,23 +3,30 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n-                _skipUtf8_2(i);\n+            case 2:\n+                if ((_inputPtr < _inputEnd) || loadMore()) {\n+                    _skipUtf8_2(i);\n+                } else {\n+                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n+                }\n                 break;\n-            case // 3-byte UTF\n-            3:\n-                _skipUtf8_3(i);\n+            case 3:\n+                if ((_inputPtr < _inputEnd) || loadMore()) {\n+                    _skipUtf8_3(i);\n+                } else {\n+                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n+                }\n                 break;\n-            case // 4-byte UTF\n-            4:\n-                _skipUtf8_4(i);\n+            case 4:\n+                if ((_inputPtr < _inputEnd) || loadMore()) {\n+                    _skipUtf8_4(i);\n+                } else {\n+                    _reportInvalidEOF(\" in field name\", JsonToken.FIELD_NAME);\n+                }\n                 break;\n             case INT_LF:\n                 ++_currInputRow;\n@@ -44,7 +51,6 @@\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i <= 0x20) { // Fix: change \"<\" to \"<=\"\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -38,7 +33,7 @@\n                 break;\n             default:\n                 // e.g. -1\n-                if (i < 32) {\n+                if (i <= 0x20) { // Fix: change \"<\" to \"<=\"\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                } else { // include missing default case\n                    _reportInvalidChar(i);\n                }\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -40,8 +35,9 @@\n                 // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n+                } else { // include missing default case\n+                    _reportInvalidChar(i);\n                 }\n-                _reportInvalidChar(i);\n         }\n     }\n     // We ran out of input...\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while (_inputPtr < _inputEnd || loadMore()) {\n        final int i = _inputBuffer[_inputPtr] & 0xFF;\n        _inputPtr++;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                } else {\n                    _reportInvalidChar(i);\n                }\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -1,24 +1,20 @@\n private int _skipWSOrEnd() throws IOException {\n     final int[] codes = _icWS;\n-    while ((_inputPtr < _inputEnd) || loadMore()) {\n-        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n+    while (_inputPtr < _inputEnd || loadMore()) {\n+        final int i = _inputBuffer[_inputPtr] & 0xFF;\n+        _inputPtr++;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -37,14 +33,13 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n+                } else {\n+                    _reportInvalidChar(i);\n                 }\n-                _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                } else {\n                    _reportInvalidChar(i);\n                }\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -40,8 +35,9 @@\n                 // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n+                } else {\n+                    _reportInvalidChar(i);\n                 }\n-                _reportInvalidChar(i);\n         }\n     }\n     // We ran out of input...\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                if (_inputPtr < _inputEnd || loadMore()) {\n                    if (_inputBuffer[_inputPtr] == INT_LF) {\n                        ++_inputPtr;\n                    }\n                } else {\n                    _pendingLF = true;\n                }\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -26,7 +21,15 @@\n                 _currInputRowStart = _inputPtr;\n                 break;\n             case INT_CR:\n-                _skipCR();\n+                if (_inputPtr < _inputEnd || loadMore()) {\n+                    if (_inputBuffer[_inputPtr] == INT_LF) {\n+                        ++_inputPtr;\n+                    }\n+                } else {\n+                    _pendingLF = true;\n+                }\n+                ++_currInputRow;\n+                _currInputRowStart = _inputPtr;\n                 break;\n             case '/':\n                 _skipComment();\n@@ -37,14 +40,12 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i <= 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -38,7 +33,7 @@\n                 break;\n             default:\n                 // e.g. -1\n-                if (i < 32) {\n+                if (i <= 32) {\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i <= 32) { // Fix: Changed \"<\" to \"<=\"\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -38,7 +33,7 @@\n                 break;\n             default:\n                 // e.g. -1\n-                if (i < 32) {\n+                if (i <= 32) { // Fix: Changed \"<\" to \"<=\"\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0: // done!\n                return i;\n            case 1: // skip\n                continue;\n            case 2: // 2-byte UTF\n                _skipUtf8_2(i);\n                break;\n            case 3: // 3-byte UTF\n                _skipUtf8_3(i);\n                break;\n            case 4: // 4-byte UTF\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i <= 32) { // fixed condition\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0: // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1: // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2: // 2-byte UTF\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3: // 3-byte UTF\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4: // 4-byte UTF\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -38,7 +33,7 @@\n                 break;\n             default:\n                 // e.g. -1\n-                if (i < 32) {\n+                if (i <= 32) { // fixed condition\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                if (_inputPtr >= _inputEnd && !loadMore()) {\n                    return i;\n                }\n                char nextChar = (char) _inputBuffer[_inputPtr];\n                if (nextChar == '/' || nextChar == '*') {\n                    _skipComment();\n                    break;\n                }\n                return i;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -29,22 +24,27 @@\n                 _skipCR();\n                 break;\n             case '/':\n-                _skipComment();\n-                break;\n+                if (_inputPtr >= _inputEnd && !loadMore()) {\n+                    return i;\n+                }\n+                char nextChar = (char) _inputBuffer[_inputPtr];\n+                if (nextChar == '/' || nextChar == '*') {\n+                    _skipComment();\n+                    break;\n+                }\n+                return i;\n             case '#':\n                 if (!_skipYAMLComment()) {\n                     return i;\n                 }\n                 break;\n             default:\n-                // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                // done!\n                return i;\n            case 1:\n                // skip\n                continue;\n            case 2:\n                // 2-byte UTF\n                if (_inputPtr >= _inputEnd) {\n                    loadMoreGuaranteed();\n                }\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                // 3-byte UTF\n                if ((_inputEnd - _inputPtr) < 2) {\n                    loadMoreGuaranteed();\n                }\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                // 4-byte UTF\n                if ((_inputEnd - _inputPtr) < 3) {\n                    loadMoreGuaranteed();\n                }\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,31 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n+                // done!\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n+                // skip\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n+                // 2-byte UTF\n+                if (_inputPtr >= _inputEnd) {\n+                    loadMoreGuaranteed();\n+                }\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n+                // 3-byte UTF\n+                if ((_inputEnd - _inputPtr) < 2) {\n+                    loadMoreGuaranteed();\n+                }\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n+                // 4-byte UTF\n+                if ((_inputEnd - _inputPtr) < 3) {\n+                    loadMoreGuaranteed();\n+                }\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while (_inputPtr < _inputEnd || loadMore()) { // changed condition to use '<' instead of '<='\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i <= ASCII_SPACE) { // changed condition to use '<=' instead of '<'\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -1,24 +1,19 @@\n private int _skipWSOrEnd() throws IOException {\n     final int[] codes = _icWS;\n-    while ((_inputPtr < _inputEnd) || loadMore()) {\n+    while (_inputPtr < _inputEnd || loadMore()) { // changed condition to use '<' instead of '<='\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -37,14 +32,12 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n-                if (i < 32) {\n+                if (i <= ASCII_SPACE) { // changed condition to use '<=' instead of '<'\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                if (_inputEnd - _inputPtr < 2) {\n                    _inputPtr--;\n                    return _skipWSOrEnd2();\n                }\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                if (_inputEnd - _inputPtr < 3) {\n                    return _skipWSOrEnd2(i);\n                }\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                if (_inputEnd - _inputPtr < 4) {\n                    return _skipWSOrEnd2(i);\n                }\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}\n\n// Helper function for skipping 2-byte UTF characters\nprivate int _skipWSOrEnd2(int i) throws IOException {\n    for (; _inputPtr < _inputEnd || loadMore(); i = 0) {\n        int c = _inputBuffer[_inputPtr++] & 0xFF;\n        if (codes[c] != 1) {\n            if (i == 0 && c != ' ') {\n                _reportInvalidSpace(c);\n            } else {\n                return c;\n            }\n        }\n        if (i != 0) {\n            --i;\n            if (i == 0) {\n                break;\n            }\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,27 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n+                if (_inputEnd - _inputPtr < 2) {\n+                    _inputPtr--;\n+                    return _skipWSOrEnd2();\n+                }\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n+                if (_inputEnd - _inputPtr < 3) {\n+                    return _skipWSOrEnd2(i);\n+                }\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n+                if (_inputEnd - _inputPtr < 4) {\n+                    return _skipWSOrEnd2(i);\n+                }\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -37,14 +42,12 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                if (_inputPtr >= _inputEnd) {\n                    if (!loadMore()) {\n                        _reportInvalidEOFInValue();\n                    }\n                }\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -29,6 +24,11 @@\n                 _skipCR();\n                 break;\n             case '/':\n+                if (_inputPtr >= _inputEnd) {\n+                    if (!loadMore()) {\n+                        _reportInvalidEOFInValue();\n+                    }\n+                }\n                 _skipComment();\n                 break;\n             case '#':\n@@ -37,14 +37,12 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n                 if (i < 32) {\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while (_inputPtr < _inputEnd || loadMore()) { // Remove unnecessary parentheses\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            default:\n                if (i <= 0x20) { // Use less than or equal to instead of less than\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -1,24 +1,19 @@\n private int _skipWSOrEnd() throws IOException {\n     final int[] codes = _icWS;\n-    while ((_inputPtr < _inputEnd) || loadMore()) {\n+    while (_inputPtr < _inputEnd || loadMore()) { // Remove unnecessary parentheses\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -37,14 +32,12 @@\n                 }\n                 break;\n             default:\n-                // e.g. -1\n-                if (i < 32) {\n+                if (i <= 0x20) { // Use less than or equal to instead of less than\n                     _throwInvalidSpace(i);\n                 }\n                 _reportInvalidChar(i);\n         }\n     }\n-    // We ran out of input...\n     _handleEOF();\n     return -1;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private int _skipWSOrEnd() throws IOException {\n    final int[] codes = _icWS;\n    while ((_inputPtr < _inputEnd) || loadMore()) {\n        final int i = _inputBuffer[_inputPtr++] & 0xFF;\n        switch(codes[i]) {\n            case 0:\n                return i;\n            case 1:\n                continue;\n            case 2:\n                _skipUtf8_2(i);\n                break;\n            case 3:\n                _skipUtf8_3(i);\n                break;\n            case 4:\n                _skipUtf8_4(i);\n                break;\n            case INT_LF:\n                ++_currInputRow;\n                _currInputRowStart = _inputPtr;\n                break;\n            case INT_CR:\n                _skipCR();\n                break;\n            case '/':\n                _skipComment();\n                break;\n            case '#':\n                if (!_skipYAMLComment()) {\n                    return i;\n                }\n                break;\n            case -1:\n                _reportInvalidEOF();\n                break;\n            default:\n                // e.g. -1\n                if (i < 32) {\n                    _throwInvalidSpace(i);\n                }\n                _reportInvalidChar(i);\n        }\n    }\n    // We ran out of input...\n    _handleEOF();\n    return -1;\n}", "diff": "--- com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n+++ com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java@_skipWSOrEnd\n@@ -3,22 +3,17 @@\n     while ((_inputPtr < _inputEnd) || loadMore()) {\n         final int i = _inputBuffer[_inputPtr++] & 0xFF;\n         switch(codes[i]) {\n-            case // done!\n-            0:\n+            case 0:\n                 return i;\n-            case // skip\n-            1:\n+            case 1:\n                 continue;\n-            case // 2-byte UTF\n-            2:\n+            case 2:\n                 _skipUtf8_2(i);\n                 break;\n-            case // 3-byte UTF\n-            3:\n+            case 3:\n                 _skipUtf8_3(i);\n                 break;\n-            case // 4-byte UTF\n-            4:\n+            case 4:\n                 _skipUtf8_4(i);\n                 break;\n             case INT_LF:\n@@ -36,6 +31,9 @@\n                     return i;\n                 }\n                 break;\n+            case -1:\n+                _reportInvalidEOF();\n+                break;\n             default:\n                 // e.g. -1\n                 if (i < 32) {\n", "finish_reason": "stop", "valid": false, "num": 1}]