[{"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) && !Double.isNaN(maxval)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue && !Double.isNaN(maxval)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) && !Double.isNaN(minval)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue && !Double.isNaN(minval)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,20 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n+    if (Double.isNaN(this.maximumRangeValue) && !Double.isNaN(maxval)) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    } else if (maxval > this.maximumRangeValue && !Double.isNaN(maxval)) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n+    if (Double.isNaN(this.minimumRangeValue) && !Double.isNaN(minval)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    } else if (minval < this.minimumRangeValue && !Double.isNaN(minval)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -3,9 +3,6 @@\n     // update cached min and max values\n     int r = this.data.getRowIndex(rowKey);\n     int c = this.data.getColumnIndex(columnKey);\n-    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n-        updateBounds();\n-    }\n     double minval = Double.NaN;\n     if (item.getMinOutlier() != null) {\n         minval = item.getMinOutlier().doubleValue();\n@@ -14,20 +11,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 7}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue || Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -27,7 +27,7 @@\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    } else if (minval < this.minimumRangeValue || Double.isNaN(this.minimumRangeValue)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        // if item is not in the current range, don't update bounds\n        // as it will be taken care of in the else-if blocks below\n        // see https://github.com/jfree/jfreechart/issues/653\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue || Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue || Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,6 +5,10 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        // if item is not in the current range, don't update bounds\n+        // as it will be taken care of in the else-if blocks below\n+        // see https://github.com/jfree/jfreechart/issues/653\n     }\n     double minval = Double.NaN;\n     if (item.getMinOutlier() != null) {\n@@ -18,7 +22,7 @@\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    } else if (maxval > this.maximumRangeValue || Double.isNaN(this.maximumRangeValue)) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n@@ -27,7 +31,7 @@\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    } else if (minval < this.minimumRangeValue || Double.isNaN(this.minimumRangeValue)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (Double.isNaN(maxval)) {\n        // do not update maximumRangeValue if maxval is NaN\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (Double.isNaN(minval)) {\n        // do not update minimumRangeValue if minval is NaN\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -18,6 +18,8 @@\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n+    } else if (Double.isNaN(maxval)) {\n+        // do not update maximumRangeValue if maxval is NaN\n     } else if (maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n@@ -27,6 +29,8 @@\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n+    } else if (Double.isNaN(minval)) {\n+        // do not update minimumRangeValue if minval is NaN\n     } else if (minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (!Double.isNaN(maxval) && maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (!Double.isNaN(minval) && minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -18,7 +18,7 @@\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    } else if (!Double.isNaN(maxval) && maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n@@ -27,7 +27,7 @@\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    } else if (!Double.isNaN(minval) && minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) && !Double.isNaN(maxval)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) && !Double.isNaN(minval)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,7 +14,7 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n+    if (Double.isNaN(this.maximumRangeValue) && !Double.isNaN(maxval)) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n@@ -23,7 +23,7 @@\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n+    if (Double.isNaN(this.minimumRangeValue) && !Double.isNaN(minval)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    boolean updateRangeValues = false; // Set updateRangeValues to false initially\n    if (Double.isNaN(this.maximumRangeValue)) {\n        updateRangeValues = true; // Update maximum and minimum range values if they are not set\n    } else if (maxval > this.maximumRangeValue) {\n        updateRangeValues = true; // Update maximum range value if maxval exceeds the current maximum range value\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        updateRangeValues = true; // Update minimum range value if they are not set\n    } else if (minval < this.minimumRangeValue) {\n        updateRangeValues = true; // Update minimum range value if minval is less than the current minimum range value\n    }\n    if (updateRangeValues) { // Update range bounds and range value variables only if necessary\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,24 +14,25 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n+    boolean updateRangeValues = false; // Set updateRangeValues to false initially\n     if (Double.isNaN(this.maximumRangeValue)) {\n+        updateRangeValues = true; // Update maximum and minimum range values if they are not set\n+    } else if (maxval > this.maximumRangeValue) {\n+        updateRangeValues = true; // Update maximum range value if maxval exceeds the current maximum range value\n+    }\n+    if (Double.isNaN(this.minimumRangeValue)) {\n+        updateRangeValues = true; // Update minimum range value if they are not set\n+    } else if (minval < this.minimumRangeValue) {\n+        updateRangeValues = true; // Update minimum range value if minval is less than the current minimum range value\n+    }\n+    if (updateRangeValues) { // Update range bounds and range value variables only if necessary\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]