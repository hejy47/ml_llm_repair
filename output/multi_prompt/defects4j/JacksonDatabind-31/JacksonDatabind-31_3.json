[{"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n    writeObject(text);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,8 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,8 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,8 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,6 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,8 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,8 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,8 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,8 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,8 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,8 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _reportError(\"writeRawValue(String text, int offset, int len) method is deprecated. Use writeObject() instead.\");\n+    writeObject(text);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    } else {\n        text = text.substring(offset);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        text = text.substring(offset);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        text = text.substring(offset);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -2,6 +2,8 @@\n public void writeRawValue(String text, int offset, int len) throws IOException {\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n     }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        text = text.substring(offset);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        text = text.substring(offset);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,9 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,9 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,9 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        text = text.substring(offset);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,5 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, false));\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset < 0 || len != text.length()) {\n        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,7 @@\n @Override\n public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(Math.max(0, offset), Math.min(text.length(), offset + len));\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    // create a copy of text to prevent modification of original string\n    String rawText = new String(text);\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,7 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,9 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,9 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,9 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    // create a copy of text to prevent modification of original string\n+    String rawText = new String(text);\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(rawText));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,5 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text, true));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len < text.length()) {\n        text = text.substring(offset, Math.min(offset + len, text.length()));\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,7 @@\n @Override\n public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len < text.length()) {\n+        text = text.substring(offset, Math.min(offset + len, text.length()));\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n} \n\n// Added boolean flag \"false\" to _append method to prevent JsonGenerator from flushing before completing all values.", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,5 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), false);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    // Use writer to write raw value instead of creating a new RawValue object\n    _writer.writeRaw(text);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,8 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,8 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,8 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,6 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,8 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,8 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,8 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,8 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,8 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,8 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,8 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    // Use writer to write raw value instead of creating a new RawValue object\n+    _writer.writeRaw(text);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n} \n\n// Add the below code snippet in the same class\n\nprivate void _append(JsonToken type, Object value, boolean force) throws IOException {\n    if (_mayHaveNativeIds) {\n        _verifyValueWrite(\"write a raw (unencoded) value\");\n        _serializeNativeValue(value);\n        return;\n    }\n    int status = _writeContext.writeValue();\n    if (status == JsonWriteContext.STATUS_EXPECT_NAME) {\n        _reportError(\"Can not write a raw value in the middle of an object\");\n    }\n    _writeQuoted(type, value, force);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,5 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), true);\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset < 0 || len != text.length()) {\n        text = text.substring(0, len);\n    } else {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,9 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,6 +1,8 @@\n @Override\n public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n         text = text.substring(offset, offset + len);\n     }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,9 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,9 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,9 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,9 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,9 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,9 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset < 0 || len != text.length()) {\n+        text = text.substring(0, len);\n+    } else {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    } else {\n        // if offset is 0 and len is equal to text length, use original text value\n        text = text;\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,10 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,10 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,10 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -2,6 +2,9 @@\n public void writeRawValue(String text, int offset, int len) throws IOException {\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,10 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,10 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,10 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,10 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,10 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,10 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,10 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    } else {\n+        // if offset is 0 and len is equal to text length, use original text value\n+        text = text;\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    if (offset > 0 || len != text.length()) {\n        text = text.substring(offset, offset + len);\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,7 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -3,5 +3,5 @@\n     if (offset > 0 || len != text.length()) {\n         text = text.substring(offset, offset + len);\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,7 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,7 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n-        writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,7 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,7 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,18 +1,7 @@\n @Override\n-public void writeObject(Object value) throws IOException {\n-    if (value == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    Class<?> raw = value.getClass();\n-    if (raw == byte[].class || (value instanceof RawValue)) {\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        return;\n-    }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n-        writeNull();\n-        return;\n+public void writeRawValue(String text, int offset, int len) throws IOException {\n+    if (offset > 0 || len != text.length()) {\n+        text = text.substring(offset, offset + len);\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n-    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text), 0);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]