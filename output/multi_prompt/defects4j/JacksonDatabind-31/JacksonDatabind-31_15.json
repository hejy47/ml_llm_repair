[{"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        _objectCodec = new ObjectMapper();\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,7 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+        _objectCodec = new ObjectMapper();\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n         _objectCodec.writeValue(this, value);\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        _objectCodec = new ObjectMapper();\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,8 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        // throw new IllegalStateException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,7 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n         _objectCodec.writeValue(this, value);\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        _objectCodec = new ObjectMapper(); // add this line to initialize _objectCodec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for JsonGenerator, cannot serialize object\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        // instead of commenting out the exception, it should be thrown to handle the error correctly\n        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,8 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        // instead of commenting out the exception, it should be thrown to handle the error correctly\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\"); \n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for Jackson ObjectMapper\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,7 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n         _objectCodec.writeValue(this, value);\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        _objectCodec = new ObjectMapper(); // add this line to initialize the object codec\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_generator == null) { // replaced _objectCodec with _generator\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    } else {\n        _generator.writeObject(value); // replaced _objectCodec with _generator\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    } else {\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -9,10 +9,9 @@\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n         return;\n     }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    if (_generator == null) { // replaced _objectCodec with _generator\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _objectCodec.writeValue(this, value);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) { // replaced _objectCodec with _generator\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _generator.writeObject(value); // replaced _objectCodec with _generator\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        // If no codec is set, use the default JsonGenerator\n        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n        gen.writeObject(value);\n        gen.close();\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,20 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,20 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,20 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,20 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,20 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,20 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,20 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,20 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,10 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,20 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        // If no codec is set, use the default JsonGenerator\n+        JsonGenerator gen = new JsonFactory().createGenerator(this, JsonEncoding.UTF8);\n+        gen.writeObject(value);\n+        gen.close();\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        // If no codec is configured, use default behavior and throw exception\n        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,8 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        // If no codec is configured, use default behavior and throw exception\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_generator == null) {\n        // Use _append instead of throw\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    } else {\n        // Use _generator.writeObject instead of _objectCodec.writeValue\n        _generator.writeObject(value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,20 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,20 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,20 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,20 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,20 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,20 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,20 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,20 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,20 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    } else {\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -9,10 +9,12 @@\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n         return;\n     }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    if (_generator == null) {\n+        // Use _append instead of throw\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _objectCodec.writeValue(this, value);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,20 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        // Use _append instead of throw\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        // Use _generator.writeObject instead of _objectCodec.writeValue\n+        _generator.writeObject(value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    }\n    _objectCodec.writeValue(this, value);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,16 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,16 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,16 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,16 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,16 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,16 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,16 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n-    } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,16 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,16 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,9 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-    } else {\n-        _objectCodec.writeValue(this, value);\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     }\n+    _objectCodec.writeValue(this, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,16 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n-    } else {\n-        _objectCodec.writeTree(this, node);\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     }\n+    _objectCodec.writeValue(this, value);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        throw new JsonGenerationException(\"No ObjectCodec configured for ObjectMapper, writeObject() called\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_generator == null) {\n        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n    } else {\n        _objectCodec.writeValue(_generator, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n+    } else {\n+        _objectCodec.writeValue(_generator, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -9,10 +9,9 @@\n         _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n         return;\n     }\n-    if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _objectCodec.writeValue(this, value);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n-    if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_generator == null) {\n+        throw new JsonGenerationException(\"No generator available to write value as JSON\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(_generator, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        throw new IllegalStateException(\"No ObjectCodec configured\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,17 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,17 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,17 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,17 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,17 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,17 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,7 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,17 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        throw new IllegalStateException(\"No ObjectCodec configured\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    Class<?> raw = value.getClass();\n    if (raw == byte[].class || (value instanceof RawValue)) {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n        return;\n    }\n    if (_objectCodec == null) {\n        _reportError(\"No ObjectCodec configured\");\n        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    } else {\n        _objectCodec.writeValue(this, value);\n    }\n}\n\n// Added helper function\nprotected void _reportError(String message) throws JsonProcessingException {\n    throw new JsonMappingException(message);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(String text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeString1\n@@ -1,8 +1,18 @@\n @Override\n-public void writeString(SerializableString text) throws IOException {\n-    if (text == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_STRING, text);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(String text) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue3\n@@ -1,7 +1,18 @@\n @Override\n-public void writeRawValue(String text, int offset, int len) throws IOException {\n-    if (offset > 0 || len != text.length()) {\n-        text = text.substring(offset, offset + len);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n     }\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeRawValue4\n@@ -1,4 +1,18 @@\n @Override\n-public void writeRawValue(char[] text, int offset, int len) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(short i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber6\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(int i) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber7\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(long l) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber8\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(double d) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber9\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(float f) throws IOException {\n-    _append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber10\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigDecimal dec) throws IOException {\n-    if (dec == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, dec);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber11\n@@ -1,8 +1,18 @@\n @Override\n-public void writeNumber(BigInteger v) throws IOException {\n-    if (v == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _append(JsonToken.VALUE_NUMBER_INT, v);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNumber12\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNumber(String encodedValue) throws IOException {\n-        _append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeBoolean\n@@ -1,4 +1,18 @@\n @Override\n-public void writeBoolean(boolean state) throws IOException {\n-    _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeNull\n@@ -1,4 +1,18 @@\n @Override\n-public void writeNull() throws IOException {\n-    _append(JsonToken.VALUE_NULL);\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n+        writeNull();\n+        return;\n+    }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n+    if (_objectCodec == null) {\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    } else {\n+        _objectCodec.writeValue(this, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -10,8 +10,8 @@\n         return;\n     }\n     if (_objectCodec == null) {\n-                //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n         _objectCodec.writeValue(this, value);\n     }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,13 +1,18 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    if (node == null) {\n+public void writeObject(Object value) throws IOException {\n+    if (value == null) {\n         writeNull();\n         return;\n     }\n+    Class<?> raw = value.getClass();\n+    if (raw == byte[].class || (value instanceof RawValue)) {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+        return;\n+    }\n     if (_objectCodec == null) {\n-        // as with 'writeObject()', is codec optional?\n-        _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+        _reportError(\"No ObjectCodec configured\");\n+        // throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n     } else {\n-        _objectCodec.writeTree(this, node);\n+        _objectCodec.writeValue(this, value);\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]