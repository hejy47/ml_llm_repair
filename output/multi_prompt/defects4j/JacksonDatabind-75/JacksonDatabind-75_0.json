[{"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<? extends Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+        EnumValues v = EnumValues.constructFromName(config, (Class<? extends Enum<?>>) enumClass);\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+        EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 7}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+        EnumValues v = EnumValues.constructFromName(config, enumClass);\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    if (serializeAsIndex) {\n        return new EnumSerializer(v, true);\n    } else {\n        return new EnumSerializer(v);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -2,5 +2,9 @@\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n         EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n-    return new EnumSerializer(v, serializeAsIndex);\n+    if (serializeAsIndex) {\n+        return new EnumSerializer(v, true);\n+    } else {\n+        return new EnumSerializer(v);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(config, beanDesc, enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n} \n\nprivate static Boolean _isShapeWrittenUsingIndex(SerializationConfig config, BeanDescription beanDesc, Class<?> enumClass, JsonFormat.Value format, boolean defaultValue) {\n    JsonFormat jf = beanDesc.findExpectedFormat(null);\n    if (jf != null) {\n        JsonFormat.Shape shape = jf.getShape();\n        if (shape.isNumeric()) {\n            return Boolean.TRUE;\n        }\n        if (shape == JsonFormat.Shape.STRING) {\n            return Boolean.FALSE;\n        }\n    }\n    return defaultValue;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n         EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(config, beanDesc, enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true); // changed from Boolean to boolean\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n         EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+    boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true); // changed from Boolean to boolean\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n    EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _usesIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}\n\nprivate static Boolean _usesIndex(Class<?> cls, JsonFormat.Value format, boolean defaultValue) {\n    JsonFormat.Shape shape = (format == null) ? null : format.getShape();\n    if (shape == null) {\n        return defaultValue;\n    }\n    if (shape == JsonFormat.Shape.ANY || shape == JsonFormat.Shape.SCALAR) {\n        return defaultValue;\n    }\n    if (shape == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.NATURAL || shape == JsonFormat.Shape.EXISTING_PROPERTY) {\n        return false;\n    }\n    if (shape.isNumeric() || shape == JsonFormat.Shape.ARRAY) {\n        return true;\n    }\n    return defaultValue;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+    EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+    Boolean serializeAsIndex = _usesIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, config);\n    return new EnumSerializer(v, serializeAsIndex);\n} \n\nprivate static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, SerializationConfig config) {\n    if (format != null && format.getShape() == JsonFormat.Shape.NUMBER) {\n        return true;\n    }\n    return config.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n         EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, config);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, false); //changed from true to false\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n         EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, false); //changed from true to false\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n        EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n        Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n        return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n-    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n-    return new EnumSerializer(v, serializeAsIndex);\n+        EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+        Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n+        return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n    EnumValues v = EnumValues.constructFromName(config, enumClass.asSubclass(Enum.class));\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+    EnumValues v = EnumValues.constructFromName(config, enumClass.asSubclass(Enum.class));\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@SuppressWarnings(\"unchecked\")\npublic static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n    EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n    Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n    return new EnumSerializer(v, serializeAsIndex);\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@construct\n@@ -1,6 +1,6 @@\n @SuppressWarnings(\"unchecked\")\n public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format) {\n-        EnumValues v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n+    EnumValues<?> v = EnumValues.constructFromName(config, (Class<Enum<?>>) enumClass);\n     Boolean serializeAsIndex = _isShapeWrittenUsingIndex(enumClass, format, true);\n     return new EnumSerializer(v, serializeAsIndex);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]