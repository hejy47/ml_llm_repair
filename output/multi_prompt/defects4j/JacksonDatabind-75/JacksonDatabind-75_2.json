[{"output": "protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass) {\n    JsonFormat.Shape shape = (format == null) ? null : format.getShape();\n    if (shape == null) {\n        return null;\n    }\n    // i.e. \"default\", check dynamically\n    if (shape == Shape.ANY || shape == Shape.SCALAR) {\n        return null;\n    }\n    // 19-May-2016, tatu: also consider \"natural\" shape\n    if (shape == Shape.STRING || shape == Shape.NATURAL) {\n        return Boolean.FALSE;\n    }\n    // 01-Oct-2014, tatu: For convenience, consider \"as-array\" to also mean 'yes, use index')\n    if (shape.isNumeric() || (shape == Shape.ARRAY) || (shape == Shape.OBJECT)) {\n        return Boolean.TRUE;\n    }\n    // 07-Mar-2017, tatu: Also means `OBJECT` not available as property annotation...\n    throw new IllegalArgumentException(String.format(\"Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation\", shape, enumClass.getName(), (fromClass ? \"class\" : \"property\")));\n}", "diff": "", "finish_reason": "stop", "valid": false, "num": 20}]