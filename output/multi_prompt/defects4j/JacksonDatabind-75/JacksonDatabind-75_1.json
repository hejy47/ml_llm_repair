[{"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n            if (Boolean.TRUE.equals(serializeAsIndex) != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -4,7 +4,7 @@\n         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n         if (format != null) {\n             Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n-            if (serializeAsIndex != _serializeAsIndex) {\n+            if (Boolean.TRUE.equals(serializeAsIndex) != _serializeAsIndex) {\n                 return new EnumSerializer(_values, serializeAsIndex);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n            if (serializeAsIndex != null && serializeAsIndex != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -4,7 +4,7 @@\n         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n         if (format != null) {\n             Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n-            if (serializeAsIndex != _serializeAsIndex) {\n+            if (serializeAsIndex != null && serializeAsIndex != _serializeAsIndex) {\n                 return new EnumSerializer(_values, serializeAsIndex);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 12}, {"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers.getConfig(), property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n            if (serializeAsIndex != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -1,7 +1,7 @@\n @Override\n public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n     if (property != null) {\n-        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n+        JsonFormat.Value format = findFormatOverrides(serializers.getConfig(), property, handledType());\n         if (format != null) {\n             Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n             if (serializeAsIndex != _serializeAsIndex) {\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(handledType(), format, false);\n            if (serializeAsIndex != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -3,7 +3,7 @@\n     if (property != null) {\n         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n         if (format != null) {\n-            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n+            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(handledType(), format, false);\n             if (serializeAsIndex != _serializeAsIndex) {\n                 return new EnumSerializer(_values, serializeAsIndex);\n             }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n            if (serializeAsIndex != null && serializeAsIndex != _serializeAsIndex) { // check if serializeAsIndex is not null before comparing\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -4,7 +4,7 @@\n         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n         if (format != null) {\n             Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n-            if (serializeAsIndex != _serializeAsIndex) {\n+            if (serializeAsIndex != null && serializeAsIndex != _serializeAsIndex) { // check if serializeAsIndex is not null before comparing\n                 return new EnumSerializer(_values, serializeAsIndex);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = findFormatOverrides(serializers.getConfig(), property.getMember(), handledType());\n        if (format != null) {\n            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format.getShape(), false);\n            if (serializeAsIndex != _serializeAsIndex) {\n                return new EnumSerializer(_values, serializeAsIndex);\n            }\n        }\n    }\n    return this;\n}", "diff": "--- com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n+++ com/fasterxml/jackson/databind/ser/std/EnumSerializer.java@createContextual\n@@ -1,9 +1,9 @@\n @Override\n public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n     if (property != null) {\n-        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n+        JsonFormat.Value format = findFormatOverrides(serializers.getConfig(), property.getMember(), handledType());\n         if (format != null) {\n-            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format, false);\n+            Boolean serializeAsIndex = _isShapeWrittenUsingIndex(property.getType().getRawClass(), format.getShape(), false);\n             if (serializeAsIndex != _serializeAsIndex) {\n                 return new EnumSerializer(_values, serializeAsIndex);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}]