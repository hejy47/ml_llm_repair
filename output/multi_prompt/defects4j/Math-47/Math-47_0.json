[{"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if (isNaN || isInfinite) {\n        this.real = 0;\n        this.imaginary = 0;\n        isNaN = false;\n        isInfinite = false;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,10 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if (isNaN || isInfinite) {\n+        this.real = 0;\n+        this.imaginary = 0;\n+        isNaN = false;\n+        isInfinite = false;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    if(!isNaN){\n        isInfinite = Double.isInfinite(real) || Double.isInfinite(imaginary);\n    } else {\n        isInfinite = false;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -2,5 +2,9 @@\n     this.real = real;\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n-    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if(!isNaN){\n+        isInfinite = Double.isInfinite(real) || Double.isInfinite(imaginary);\n+    } else {\n+        isInfinite = false;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    isImaginaryNaN = Double.isNaN(imaginary);\n    isImaginaryInfinite = !isImaginaryNaN && Double.isInfinite(imaginary);\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,6 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    isImaginaryNaN = Double.isNaN(imaginary);\n+    isImaginaryInfinite = !isImaginaryNaN && Double.isInfinite(imaginary);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isNaN(real*imaginary));\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -2,5 +2,5 @@\n     this.real = real;\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n-    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isNaN(real*imaginary));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if (isNaN || isInfinite) {\n        this.real = 0.0;\n        this.imaginary = 0.0;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,8 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if (isNaN || isInfinite) {\n+        this.real = 0.0;\n+        this.imaginary = 0.0;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    this.isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    this.isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -1,6 +1,6 @@\n public Complex(double real, double imaginary) {\n     this.real = real;\n     this.imaginary = imaginary;\n-    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n-    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    this.isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n+    this.isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if(isNaN || isInfinite){\n        throw new IllegalArgumentException(\"Invalid input\");\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,7 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if(isNaN || isInfinite){\n+        throw new IllegalArgumentException(\"Invalid input\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if (Double.isNaN(real) || Double.isNaN(imaginary) || Double.isInfinite(real) || Double.isInfinite(imaginary)) {\n        isNaN = true;\n        isInfinite = false;\n        if (Double.isNaN(real) && Double.isNaN(imaginary)) {\n            imaginary = 0.0;\n        }\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,11 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if (Double.isNaN(real) || Double.isNaN(imaginary) || Double.isInfinite(real) || Double.isInfinite(imaginary)) {\n+        isNaN = true;\n+        isInfinite = false;\n+        if (Double.isNaN(real) && Double.isNaN(imaginary)) {\n+            imaginary = 0.0;\n+        }\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n}\n\nThe given buggy function is already correct and does not need any fixing.", "diff": "", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    // additional check for zero division\n    if (real == 0 && imaginary == 0) {\n        isZero = true;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,8 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    // additional check for zero division\n+    if (real == 0 && imaginary == 0) {\n+        isZero = true;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    // Add a check for negative zero\n    if (real == 0 && Double.doubleToRawLongBits(real) == Long.MIN_VALUE) {\n        this.real = 0;\n    }\n    if (imaginary == 0 && Double.doubleToRawLongBits(imaginary) == Long.MIN_VALUE) {\n        this.imaginary = 0;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,11 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    // Add a check for negative zero\n+    if (real == 0 && Double.doubleToRawLongBits(real) == Long.MIN_VALUE) {\n+        this.real = 0;\n+    }\n+    if (imaginary == 0 && Double.doubleToRawLongBits(imaginary) == Long.MIN_VALUE) {\n+        this.imaginary = 0;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if(isNaN || isInfinite){\n        throw new IllegalArgumentException(\"Invalid numbers provided for complex number\");\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,7 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if(isNaN || isInfinite){\n+        throw new IllegalArgumentException(\"Invalid numbers provided for complex number\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if (isNaN || isInfinite) {\n        throw new IllegalArgumentException(\"Invalid complex number: \" + real + \" + \" + imaginary + \"i\");\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,7 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if (isNaN || isInfinite) {\n+        throw new IllegalArgumentException(\"Invalid complex number: \" + real + \" + \" + imaginary + \"i\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isNaN(real + imaginary));\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -2,5 +2,5 @@\n     this.real = real;\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n-    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isNaN(real + imaginary));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if (isNaN || isInfinite) {\n        this.real = 0.0;\n        this.imaginary = 0.0;\n        isNaN = false;\n        isInfinite = true;\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,10 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if (isNaN || isInfinite) {\n+        this.real = 0.0;\n+        this.imaginary = 0.0;\n+        isNaN = false;\n+        isInfinite = true;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    if(isNaN || isInfinite){\n        throw new IllegalArgumentException(\"Input should be valid finite numbers\");\n    }\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,7 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    if(isNaN || isInfinite){\n+        throw new IllegalArgumentException(\"Input should be valid finite numbers\");\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public Complex(double real, double imaginary) {\n    this.real = real;\n    this.imaginary = imaginary;\n    isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n    isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n    isImaginaryZero = imaginary == 0;\n}", "diff": "--- org/apache/commons/math/complex/Complex.java@Complex\n+++ org/apache/commons/math/complex/Complex.java@Complex\n@@ -3,4 +3,5 @@\n     this.imaginary = imaginary;\n     isNaN = Double.isNaN(real) || Double.isNaN(imaginary);\n     isInfinite = !isNaN && (Double.isInfinite(real) || Double.isInfinite(imaginary));\n+    isImaginaryZero = imaginary == 0;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]