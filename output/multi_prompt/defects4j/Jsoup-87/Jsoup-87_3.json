[{"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equalsIgnoreCase(elName)) {\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.nodeName().equalsIgnoreCase(elName)) {\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 14}, {"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equalsIgnoreCase(elName)) { // use equalsIgnoreCase instead of equals\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.nodeName().equalsIgnoreCase(elName)) { // use equalsIgnoreCase instead of equals\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.tagName().equals(elName)) {\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.tagName().equals(elName)) {\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equalsIgnoreCase(elName)) { // compare ignoring case\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.nodeName().equalsIgnoreCase(elName)) { // compare ignoring case\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equalsIgnoreCase(elName)) { // Changed .equals to .equalsIgnoreCase\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.nodeName().equalsIgnoreCase(elName)) { // Changed .equals to .equalsIgnoreCase\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void popStackToBefore(String elName) {\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element next = stack.get(pos);\n        if (next.nodeName().equalsIgnoreCase(elName)) { // changed from .equals to .equalsIgnoreCase\n            break;\n        } else {\n            stack.remove(pos);\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n+++ org/jsoup/parser/HtmlTreeBuilder.java@popStackToBefore\n@@ -1,7 +1,7 @@\n void popStackToBefore(String elName) {\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element next = stack.get(pos);\n-        if (next.nodeName().equals(elName)) {\n+        if (next.nodeName().equalsIgnoreCase(elName)) { // changed from .equals to .equalsIgnoreCase\n             break;\n         } else {\n             stack.remove(pos);\n", "finish_reason": "stop", "valid": false, "num": 1}]