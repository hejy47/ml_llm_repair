[{"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) { // fixed condition to check for valid unicode\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) { // fixed condition to check for valid unicode\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) {  // Fixed condition\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) {  // Fixed condition\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null && !num.isEmpty()) { // added check for empty string \n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.valueOf(num, base);\n            } catch (NumberFormatException e) {\n                // handle exception\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) { // added check for valid charval\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -6,18 +6,19 @@\n     while (m.find()) {\n         int charval = -1;\n         String num = m.group(3);\n-        if (num != null) {\n+        if (num != null && !num.isEmpty()) { // added check for empty string \n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n                 charval = Integer.valueOf(num, base);\n             } catch (NumberFormatException e) {\n+                // handle exception\n             }\n         } else {\n             String name = m.group(1);\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) { // added check for valid charval\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) {\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else if (charval > Character.MAX_VALUE) {\n            String c = new String(Character.toChars(charval));\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,8 +17,11 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) {\n             String c = Character.toString((char) charval);\n+            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n+        } else if (charval > Character.MAX_VALUE) {\n+            String c = new String(Character.toChars(charval));\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n             m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) {\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) {\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n                continue; // skip invalid numeric entities\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) { // check if charval is within valid range\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,15 +9,16 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n+                continue; // skip invalid numeric entities\n             }\n         } else {\n             String name = m.group(1);\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) { // check if charval is within valid range\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) { //fixed condition\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) { //fixed condition\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.decode(num); // use decode instead of valueOf\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) { // fix the condition for valid character value\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.decode(num); // use decode instead of valueOf\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) { // fix the condition for valid character value\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) { }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) {\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,15 +9,14 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n-            } catch (NumberFormatException e) {\n-            }\n+                charval = Integer.parseInt(num, base);\n+            } catch (NumberFormatException e) { }\n         } else {\n             String name = m.group(1);\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) {\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) {\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) {\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) { // Fix: check if charval is within valid range\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) { // Fix: check if charval is within valid range\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base); // Changed Integer.valueOf to Integer.parseInt\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_CODE_POINT) { // Added check for charval being less than or equal to Character's max code point\n            String c = Character.toString(charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base); // Changed Integer.valueOf to Integer.parseInt\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,8 +17,8 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n-            String c = Character.toString((char) charval);\n+        if (charval != -1 && charval <= Character.MAX_CODE_POINT) { // Added check for charval being less than or equal to Character's max code point\n+            String c = Character.toString(charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n             m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) { // Fixed condition\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) { // Fixed condition\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= 0xFFFF) { // check that charval is within valid unicode range\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= 0xFFFF) { // check that charval is within valid unicode range\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT || charval > Character.MAX_CODE_POINT)) {\n            String c = String.valueOf((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,8 +17,8 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n-            String c = Character.toString((char) charval);\n+        if (charval != -1 && (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT || charval > Character.MAX_CODE_POINT)) {\n+            String c = String.valueOf((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n             m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    Map<String, Character> full = entities();\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) {\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -3,13 +3,14 @@\n         return string;\n     Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n     StringBuffer accum = new StringBuffer(string.length());\n+    Map<String, Character> full = entities();\n     while (m.find()) {\n         int charval = -1;\n         String num = m.group(3);\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +18,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) {\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String unescape(String string, boolean strict) {\n    if (!string.contains(\"&\"))\n        return string;\n    Matcher m = strict ? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\n    StringBuffer accum = new StringBuffer(string.length());\n    while (m.find()) {\n        int charval = -1;\n        String num = m.group(3);\n        if (num != null) {\n            try {\n                int base = m.group(2) != null ? 16 : 10;\n                charval = Integer.parseInt(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name = m.group(1);\n            if (full.containsKey(name))\n                charval = full.get(name);\n        }\n        if (charval != -1 && charval <= Character.MAX_VALUE) { // added a check for the maximum allowed character value\n            String c = Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}", "diff": "--- org/jsoup/nodes/Entities.java@unescape\n+++ org/jsoup/nodes/Entities.java@unescape\n@@ -9,7 +9,7 @@\n         if (num != null) {\n             try {\n                 int base = m.group(2) != null ? 16 : 10;\n-                charval = Integer.valueOf(num, base);\n+                charval = Integer.parseInt(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n@@ -17,7 +17,7 @@\n             if (full.containsKey(name))\n                 charval = full.get(name);\n         }\n-        if (charval != -1 || charval > 0xFFFF) {\n+        if (charval != -1 && charval <= Character.MAX_VALUE) { // added a check for the maximum allowed character value\n             String c = Character.toString((char) charval);\n             m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n", "finish_reason": "stop", "valid": false, "num": 1}]