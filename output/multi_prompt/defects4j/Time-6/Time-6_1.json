[{"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { //fixed condition\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration > iCutover) { //fixed condition\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { //fixed condition\n                 instant = gregorianToJulian(instant);\n             }\n         }\n@@ -11,7 +11,7 @@\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            if (instant - iGapDuration > iCutover) { //fixed condition\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Adjust to end of gap if partially crossed\n            if (instant + iGapDuration > iCutover) {\n                instant = iCutover + iGapDuration;\n            } else {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Adjust to start of gap if partially crossed\n            if (instant - iGapDuration < iCutover) {\n                instant = iCutover - iGapDuration;\n            } else {\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -2,17 +2,20 @@\n     if (instant >= iCutover) {\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            // Adjust to end of gap if partially crossed\n+            if (instant + iGapDuration > iCutover) {\n+                instant = iCutover + iGapDuration;\n+            } else {\n                 instant = gregorianToJulian(instant);\n             }\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n-                // no special handling for year zero as cutover always after year zero\n+            // Adjust to start of gap if partially crossed\n+            if (instant - iGapDuration < iCutover) {\n+                instant = iCutover - iGapDuration;\n+            } else {\n                 instant = julianToGregorian(instant);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover + iGapDuration) {\n            // Adjust for gap if partially crossed.\n            instant = iGregorianField.add(instant, iGapDuration);\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover - iGapDuration) {\n            // Adjust for gap if partially crossed.\n            instant = iJulianField.add(instant, iGapDuration);\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,20 +1,15 @@\n public long add(long instant, int value) {\n     if (instant >= iCutover) {\n         instant = iGregorianField.add(instant, value);\n-        if (instant < iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n-            }\n+        if (instant < iCutover + iGapDuration) {\n+            // Adjust for gap if partially crossed.\n+            instant = iGregorianField.add(instant, iGapDuration);\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n-        if (instant >= iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n-                // no special handling for year zero as cutover always after year zero\n-                instant = julianToGregorian(instant);\n-            }\n+        if (instant >= iCutover - iGapDuration) {\n+            // Adjust for gap if partially crossed.\n+            instant = iJulianField.add(instant, iGapDuration);\n         }\n     }\n     return instant;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover + iGapDuration) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover + iGapDuration) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else if (instant < iCutover) {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    } else {\n        // Inside the gap.\n        long newInstant = iGregorianField.add(instant, value);\n        // If the new instant is still within the gap, we must continue to use the Julian calendar.\n        if (newInstant < iCutover + iGapDuration) {\n            newInstant = iJulianField.add(instant, value);\n            if (newInstant >= iCutover + iGapDuration) {\n                // The Julian calendar just ended, so we switch to the Gregorian calendar.\n                instant = julianToGregorian(newInstant);\n            } else {\n                instant = newInstant;\n            }\n        } else {\n            instant = newInstant;\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,13 +1,13 @@\n public long add(long instant, int value) {\n-    if (instant >= iCutover) {\n+    if (instant >= iCutover + iGapDuration) {\n         instant = iGregorianField.add(instant, value);\n-        if (instant < iCutover) {\n+        if (instant < iCutover + iGapDuration) {\n             // Only adjust if gap fully crossed.\n             if (instant + iGapDuration < iCutover) {\n                 instant = gregorianToJulian(instant);\n             }\n         }\n-    } else {\n+    } else if (instant < iCutover) {\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n@@ -16,6 +16,21 @@\n                 instant = julianToGregorian(instant);\n             }\n         }\n+    } else {\n+        // Inside the gap.\n+        long newInstant = iGregorianField.add(instant, value);\n+        // If the new instant is still within the gap, we must continue to use the Julian calendar.\n+        if (newInstant < iCutover + iGapDuration) {\n+            newInstant = iJulianField.add(instant, value);\n+            if (newInstant >= iCutover + iGapDuration) {\n+                // The Julian calendar just ended, so we switch to the Gregorian calendar.\n+                instant = julianToGregorian(newInstant);\n+            } else {\n+                instant = newInstant;\n+            }\n+        } else {\n+            instant = newInstant;\n+        }\n     }\n     return instant;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) {\n                 instant = gregorianToJulian(instant);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { // changed '<' to '<='\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { // changed '<' to '<='\n                 instant = gregorianToJulian(instant);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover + iGapDuration) {\n        instant = iGregorianField.add(instant, value);\n    } else if (instant < iCutover) {\n        instant = iJulianField.add(instant, value);\n    } else {\n        // Handle the gap\n        long transitionalInstant = iJulianField.add(instant, value);\n        if (transitionalInstant >= iCutover + iGapDuration) {\n            // Gap fully crossed, use Gregorian calendar\n            transitionalInstant = gregorianToJulian(transitionalInstant);\n            instant = iGregorianField.setExtended(instant, iGregorianField.getExtended(transitionalInstant));\n        } else if (transitionalInstant < iCutover) {\n            // Still in gap, use Julian calendar\n            instant = julianToGregorian(transitionalInstant);\n            instant = iJulianField.setExtended(instant, iJulianField.getExtended(transitionalInstant));\n        } else {\n            // In the gap, but only partially\n            if (iConvertByWeekyear) {\n                // Convert entire interval using weekyears\n                long diff = (transitionalInstant - iCutover) / DateTimeConstants.MILLIS_PER_WEEK;\n                long weeks = iGregorianChronology.weekyear().getDifferenceAsLong(iGregorianChronology.weekyear().add(iCutover, diff), iGregorianChronology.weekyear().add(transitionalInstant, diff));\n                instant = iGregorianChronology.weekyear().add(iCutover, weeks);\n            } else {\n                // Assume gap is one day\n                if (value < 0) {\n                    transitionalInstant = julianToGregorian(transitionalInstant);\n                } else {\n                    transitionalInstant = gregorianToJulian(transitionalInstant);\n                }\n                instant = iJulianField.set(instant, iJulianField.get(transitionalInstant));\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,19 +1,34 @@\n public long add(long instant, int value) {\n-    if (instant >= iCutover) {\n+    if (instant >= iCutover + iGapDuration) {\n         instant = iGregorianField.add(instant, value);\n-        if (instant < iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n-            }\n-        }\n+    } else if (instant < iCutover) {\n+        instant = iJulianField.add(instant, value);\n     } else {\n-        instant = iJulianField.add(instant, value);\n-        if (instant >= iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n-                // no special handling for year zero as cutover always after year zero\n-                instant = julianToGregorian(instant);\n+        // Handle the gap\n+        long transitionalInstant = iJulianField.add(instant, value);\n+        if (transitionalInstant >= iCutover + iGapDuration) {\n+            // Gap fully crossed, use Gregorian calendar\n+            transitionalInstant = gregorianToJulian(transitionalInstant);\n+            instant = iGregorianField.setExtended(instant, iGregorianField.getExtended(transitionalInstant));\n+        } else if (transitionalInstant < iCutover) {\n+            // Still in gap, use Julian calendar\n+            instant = julianToGregorian(transitionalInstant);\n+            instant = iJulianField.setExtended(instant, iJulianField.getExtended(transitionalInstant));\n+        } else {\n+            // In the gap, but only partially\n+            if (iConvertByWeekyear) {\n+                // Convert entire interval using weekyears\n+                long diff = (transitionalInstant - iCutover) / DateTimeConstants.MILLIS_PER_WEEK;\n+                long weeks = iGregorianChronology.weekyear().getDifferenceAsLong(iGregorianChronology.weekyear().add(iCutover, diff), iGregorianChronology.weekyear().add(transitionalInstant, diff));\n+                instant = iGregorianChronology.weekyear().add(iCutover, weeks);\n+            } else {\n+                // Assume gap is one day\n+                if (value < 0) {\n+                    transitionalInstant = julianToGregorian(transitionalInstant);\n+                } else {\n+                    transitionalInstant = gregorianToJulian(transitionalInstant);\n+                }\n+                instant = iJulianField.set(instant, iJulianField.get(transitionalInstant));\n             }\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { // changed from < to <=\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration > iCutover) { // changed from >= to >\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { // changed from < to <=\n                 instant = gregorianToJulian(instant);\n             }\n         }\n@@ -11,7 +11,7 @@\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            if (instant - iGapDuration > iCutover) { // changed from >= to >\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { // changed \"<\" to \"<=\"\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration > iCutover) { // changed \">=\" to \">\"\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { // changed \"<\" to \"<=\"\n                 instant = gregorianToJulian(instant);\n             }\n         }\n@@ -11,7 +11,7 @@\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            if (instant - iGapDuration > iCutover) { // changed \">=\" to \">\"\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover + iGapDuration) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover + iGapDuration) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover + iGapDuration) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,9 +1,9 @@\n public long add(long instant, int value) {\n-    if (instant >= iCutover) {\n+    if (instant >= iCutover + iGapDuration) {\n         instant = iGregorianField.add(instant, value);\n-        if (instant < iCutover) {\n+        if (instant < iCutover + iGapDuration) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration < iCutover + iGapDuration) {\n                 instant = gregorianToJulian(instant);\n             }\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover && instant + iGapDuration >= iCutover) {\n            // Adjust for gap if partially crossed.\n            instant = iGregorianField.add(instant, iGapDuration);\n        }\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            instant = gregorianToJulian(instant);\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover && instant - iGapDuration < iCutover) {\n            // Adjust for gap if partially crossed.\n            instant = iJulianField.add(instant, -iGapDuration);\n        }\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            // no special handling for year zero as cutover always after year zero\n            instant = julianToGregorian(instant);\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,20 +1,24 @@\n public long add(long instant, int value) {\n     if (instant >= iCutover) {\n         instant = iGregorianField.add(instant, value);\n+        if (instant < iCutover && instant + iGapDuration >= iCutover) {\n+            // Adjust for gap if partially crossed.\n+            instant = iGregorianField.add(instant, iGapDuration);\n+        }\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n-            }\n+            instant = gregorianToJulian(instant);\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n+        if (instant >= iCutover && instant - iGapDuration < iCutover) {\n+            // Adjust for gap if partially crossed.\n+            instant = iJulianField.add(instant, -iGapDuration);\n+        }\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n-                // no special handling for year zero as cutover always after year zero\n-                instant = julianToGregorian(instant);\n-            }\n+            // no special handling for year zero as cutover always after year zero\n+            instant = julianToGregorian(instant);\n         }\n     }\n     return instant;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant + iGapDuration);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant - iGapDuration);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -4,7 +4,7 @@\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n             if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n+                instant = gregorianToJulian(instant + iGapDuration);\n             }\n         }\n     } else {\n@@ -13,7 +13,7 @@\n             // Only adjust if gap fully crossed.\n             if (instant - iGapDuration >= iCutover) {\n                 // no special handling for year zero as cutover always after year zero\n-                instant = julianToGregorian(instant);\n+                instant = julianToGregorian(instant - iGapDuration);\n             }\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { // Changed from < to <=\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration > iCutover) { // Changed from >= to >\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { // Changed from < to <=\n                 instant = gregorianToJulian(instant);\n             }\n         }\n@@ -11,7 +11,7 @@\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            if (instant - iGapDuration > iCutover) { // Changed from >= to >\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration <= iCutover) { // Fixed condition to include equal to case\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration > iCutover) { // Fixed condition to exclude equal to case\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -3,7 +3,7 @@\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n+            if (instant + iGapDuration <= iCutover) { // Fixed condition to include equal to case\n                 instant = gregorianToJulian(instant);\n             }\n         }\n@@ -11,7 +11,7 @@\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n             // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            if (instant - iGapDuration > iCutover) { // Fixed condition to exclude equal to case\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Adjust for gap if partially crossed\n            if (instant + iGapDuration >= iCutover) {\n                instant = iGregorianField.add(instant + iGapDuration, value);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Adjust for gap if partially crossed\n            if (instant - iGapDuration < iCutover) {\n                instant = iJulianField.add(instant - iGapDuration, value);\n            } else {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -2,16 +2,18 @@\n     if (instant >= iCutover) {\n         instant = iGregorianField.add(instant, value);\n         if (instant < iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n+            // Adjust for gap if partially crossed\n+            if (instant + iGapDuration >= iCutover) {\n+                instant = iGregorianField.add(instant + iGapDuration, value);\n             }\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n         if (instant >= iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n+            // Adjust for gap if partially crossed\n+            if (instant - iGapDuration < iCutover) {\n+                instant = iJulianField.add(instant - iGapDuration, value);\n+            } else {\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n             }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        // Fixed bug: Change \">=\" to \">\" to make sure \"iGapDuration\" is not included in the range.\n        if (instant > iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -9,7 +9,8 @@\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n-        if (instant >= iCutover) {\n+        // Fixed bug: Change \">=\" to \">\" to make sure \"iGapDuration\" is not included in the range.\n+        if (instant > iCutover) {\n             // Only adjust if gap fully crossed.\n             if (instant - iGapDuration >= iCutover) {\n                 // no special handling for year zero as cutover always after year zero\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover && instant + iGapDuration >= iCutover) {\n            instant = iGregorianField.add(instant, iGapDuration);\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover && instant - iGapDuration < iCutover) {\n            instant = iJulianField.add(instant, iGapDuration);\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -1,20 +1,13 @@\n public long add(long instant, int value) {\n     if (instant >= iCutover) {\n         instant = iGregorianField.add(instant, value);\n-        if (instant < iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant + iGapDuration < iCutover) {\n-                instant = gregorianToJulian(instant);\n-            }\n+        if (instant < iCutover && instant + iGapDuration >= iCutover) {\n+            instant = iGregorianField.add(instant, iGapDuration);\n         }\n     } else {\n         instant = iJulianField.add(instant, value);\n-        if (instant >= iCutover) {\n-            // Only adjust if gap fully crossed.\n-            if (instant - iGapDuration >= iCutover) {\n-                // no special handling for year zero as cutover always after year zero\n-                instant = julianToGregorian(instant);\n-            }\n+        if (instant >= iCutover && instant - iGapDuration < iCutover) {\n+            instant = iJulianField.add(instant, iGapDuration);\n         }\n     }\n     return instant;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public long add(long instant, int value) {\n    if (instant >= iCutover) {\n        instant = iGregorianField.add(instant, value);\n        if (instant < iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant + iGapDuration < iCutover) {\n                instant = gregorianToJulian(instant);\n            }\n        }\n    } else {\n        instant = iJulianField.add(instant, value);\n        if (instant >= iCutover) {\n            // Only adjust if gap fully crossed.\n            if (instant - iGapDuration >= iCutover) {\n                // no special handling for year zero as cutover always after year zero\n                instant = julianToGregorian(instant);\n                if (instant < iCutover) {\n                    instant = gregorianToJulian(instant);\n                }\n            }\n        }\n    }\n    return instant;\n}", "diff": "--- org/joda/time/chrono/GJChronology.java@add\n+++ org/joda/time/chrono/GJChronology.java@add\n@@ -14,6 +14,9 @@\n             if (instant - iGapDuration >= iCutover) {\n                 // no special handling for year zero as cutover always after year zero\n                 instant = julianToGregorian(instant);\n+                if (instant < iCutover) {\n+                    instant = gregorianToJulian(instant);\n+                }\n             }\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}]