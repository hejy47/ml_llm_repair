[{"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (_objectCodec == null) {\n        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,7 @@\n @Override\n public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        throw new IllegalStateException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n }\n", "finish_reason": "stop", "valid": false, "num": 7}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    _appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n}\n\nprivate void _appendValue(JsonToken token, Object value) {\n    if (_hasNativeTypeIds) {\n        _appendNativeIds(token);\n    }\n    try {\n        if (_objectCodec != null) {\n            _objectCodec.writeValue(this, value);\n        } else {\n            _writeSimpleObject(value);\n        }\n    } catch (Exception e) {\n        throw new RuntimeException(e);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,4 @@\n @Override\n public void writeObject(Object value) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    _appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,4 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    _appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (_objectCodec == null) {\n        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,7 @@\n @Override\n public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n     _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n }\n", "finish_reason": "stop", "valid": false, "num": 8}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (_objectCodec == null) {\n        // throw exception or handle case where no codec is configured\n    } else {\n        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,8 @@\n @Override\n public void writeObject(Object value) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    if (_objectCodec == null) {\n+        // throw exception or handle case where no codec is configured\n+    } else {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,8 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        // throw exception or handle case where no codec is configured\n+    } else {\n+        _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (_objectCodec == null) {\n        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, cannot serialize objects\");\n    }\n    JsonNode tree = _objectCodec.valueToTree(value);\n    if (tree.isContainerNode()) {\n        _writeContext.writeStartObject();\n        _writeChildren(tree);\n        _writeContext.writeEndObject();\n    } else {\n        _appendValue(tree);\n    }\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,14 @@\n @Override\n public void writeObject(Object value) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, cannot serialize objects\");\n+    }\n+    JsonNode tree = _objectCodec.valueToTree(value);\n+    if (tree.isContainerNode()) {\n+        _writeContext.writeStartObject();\n+        _writeChildren(tree);\n+        _writeContext.writeEndObject();\n+    } else {\n+        _appendValue(tree);\n+    }\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,14 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    if (_objectCodec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, cannot serialize objects\");\n+    }\n+    JsonNode tree = _objectCodec.valueToTree(value);\n+    if (tree.isContainerNode()) {\n+        _writeContext.writeStartObject();\n+        _writeChildren(tree);\n+        _writeContext.writeEndObject();\n+    } else {\n+        _appendValue(tree);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "@Override\npublic void writeObject(Object value) throws IOException {\n    if (_codec == null) {\n        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, can not serialize\");\n    }\n    _append(JsonToken.VALUE_EMBEDDED_OBJECT, _codec.writeValueAsString(value));\n}", "diff": "--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeObject\n@@ -1,5 +1,7 @@\n @Override\n public void writeObject(Object value) throws IOException {\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);\n-        //          throw new JsonMappingException(\"No ObjectCodec configured for TokenBuffer, writeObject() called\");\n+    if (_codec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, can not serialize\");\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, _codec.writeValueAsString(value));\n }\n--- com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n+++ com/fasterxml/jackson/databind/util/TokenBuffer.java@writeTree\n@@ -1,5 +1,7 @@\n @Override\n-public void writeTree(TreeNode node) throws IOException {\n-    // as with 'writeObject()', is codec optional?\n-    _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);\n+public void writeObject(Object value) throws IOException {\n+    if (_codec == null) {\n+        throw new JsonGenerationException(\"No ObjectCodec configured for TokenBuffer, can not serialize\");\n+    }\n+    _append(JsonToken.VALUE_EMBEDDED_OBJECT, _codec.writeValueAsString(value));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]