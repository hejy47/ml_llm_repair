[{"output": "@Override\npublic JsonToken nextToken() throws IOException, JsonParseException {\n    JsonToken t;\n    while ((t = delegate.nextToken()) == null) {\n        if (!switchToNext()) {\n            return null;\n        }\n    }\n    return t;\n}", "diff": "--- com/fasterxml/jackson/core/util/JsonParserSequence.java@nextToken\n+++ com/fasterxml/jackson/core/util/JsonParserSequence.java@nextToken\n@@ -1,12 +1,10 @@\n @Override\n public JsonToken nextToken() throws IOException, JsonParseException {\n-    JsonToken t = delegate.nextToken();\n-    if (t != null)\n-        return t;\n-    while (switchToNext()) {\n-        t = delegate.nextToken();\n-        if (t != null)\n-            return t;\n+    JsonToken t;\n+    while ((t = delegate.nextToken()) == null) {\n+        if (!switchToNext()) {\n+            return null;\n+        }\n     }\n-    return null;\n+    return t;\n }\n", "finish_reason": "stop", "valid": false, "num": 5}, {"output": "@Override\npublic JsonToken nextToken() throws IOException, JsonParseException {\n    JsonToken t = delegate.nextToken();\n    while (t == null && switchToNext()) {\n        t = delegate.nextToken();\n    }\n    return t;\n}", "diff": "--- com/fasterxml/jackson/core/util/JsonParserSequence.java@nextToken\n+++ com/fasterxml/jackson/core/util/JsonParserSequence.java@nextToken\n@@ -1,12 +1,8 @@\n @Override\n public JsonToken nextToken() throws IOException, JsonParseException {\n     JsonToken t = delegate.nextToken();\n-    if (t != null)\n-        return t;\n-    while (switchToNext()) {\n+    while (t == null && switchToNext()) {\n         t = delegate.nextToken();\n-        if (t != null)\n-            return t;\n     }\n-    return null;\n+    return t;\n }\n", "finish_reason": "stop", "valid": false, "num": 15}]