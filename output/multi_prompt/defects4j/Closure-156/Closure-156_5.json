[{"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getSymbol().getDeclaration();\n    String fnName = n.getIdentifier();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getParent().getParent(), ref.getNode().getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getSymbol().getDeclaration();\n+    String fnName = n.getIdentifier();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getParent().getParent(), ref.getNode().getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = n.getBaseName();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = n.getBaseName();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = ref.node.getString();\n    if (ref.node.getParent().getType() == Token.FUNCTION) {\n        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent().getParent());\n    } else {\n        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n    }\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,9 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n     String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    if (ref.node.getParent().getType() == Token.FUNCTION) {\n+        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent().getParent());\n+    } else {\n+        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.scope.getDefiningNode(n.id);\n    String fnName = n.id;\n    addStubsForUndeclaredProperties(n, fnName, ref.getAncestor(2), ref.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.scope.getDefiningNode(n.id);\n+    String fnName = n.id;\n+    addStubsForUndeclaredProperties(n, fnName, ref.getAncestor(2), ref.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    if(ref != null){\n        String fnName = ref.node.getString();\n        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n    }\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,7 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    if(ref != null){\n+        String fnName = ref.node.getString();\n+        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = ref.node.getString();\n    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(3), ref.node.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n     String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(3), ref.node.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.scope.getBinding(n.id);\n    String fnName = n.id;\n    addStubsForUndeclaredProperties(n, fnName, ref.scope, ref.node);\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.scope.getBinding(n.id);\n+    String fnName = n.id;\n+    addStubsForUndeclaredProperties(n, fnName, ref.scope, ref.node);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = n.getIdentifier();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getParent().getParent(), ref.getNode().getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = n.getIdentifier();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getParent().getParent(), ref.getNode().getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = ref.node.getString();\n    Node ancestor2 = ref.node.getAncestor(2);\n    if (ancestor2 != null) {\n        addStubsForUndeclaredProperties(n, fnName, ancestor2, ref.node.getParent());\n    }\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,8 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n     String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Node ancestor2 = ref.node.getAncestor(2);\n+    if (ancestor2 != null) {\n+        addStubsForUndeclaredProperties(n, fnName, ancestor2, ref.node.getParent());\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.usages.get(n.usages.size()-1);\n    String fnName = ref.getParent().getString();\n    addStubsForUndeclaredProperties(n, fnName, ref.getAncestor(2), ref.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.usages.get(n.usages.size()-1);\n+    String fnName = ref.getParent().getString();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getAncestor(2), ref.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = n.id;\n    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n+    String fnName = n.id;\n     addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    if (ref != null) {\n        String fnName = ref.getNode().getString();\n        addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n    }\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,7 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    if (ref != null) {\n+        String fnName = ref.getNode().getString();\n+        addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = n.getBaseName(); // n.getString() is no longer used\n    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n+    String fnName = n.getBaseName(); // n.getString() is no longer used\n     addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = ref.getNode().getString();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = ref.getNode().getString();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) { \n    Ref ref = n.declaration;\n    String fnName = ref.node.getString();\n    Node fnNode = ref.node.getParent();\n    if (fnNode != null && fnNode.isFunction()) {\n        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), fnNode);\n    }\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,8 @@\n-private void updateFunctionDeclarationAtFunctionNode(Name n) {\n+private void updateFunctionDeclarationAtFunctionNode(Name n) { \n     Ref ref = n.declaration;\n     String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Node fnNode = ref.node.getParent();\n+    if (fnNode != null && fnNode.isFunction()) {\n+        addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), fnNode);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = n.getIdentifier();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getEnclosingScope(), ref.getNode());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = n.getIdentifier();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getEnclosingScope(), ref.getNode());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.declaration;\n    String fnName = ref.getNode().getString();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n     Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    String fnName = ref.getNode().getString();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = n.getIdentifier();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = n.getIdentifier();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParent());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateFunctionDeclarationAtFunctionNode(Name n) {\n    Ref ref = n.getDeclaration();\n    String fnName = ref.getNode().getString();\n    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParentNode());\n}", "diff": "--- com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n+++ com/google/javascript/jscomp/CollapseProperties.java@updateFunctionDeclarationAtFunctionNode\n@@ -1,5 +1,5 @@\n private void updateFunctionDeclarationAtFunctionNode(Name n) {\n-    Ref ref = n.declaration;\n-    String fnName = ref.node.getString();\n-    addStubsForUndeclaredProperties(n, fnName, ref.node.getAncestor(2), ref.node.getParent());\n+    Ref ref = n.getDeclaration();\n+    String fnName = ref.getNode().getString();\n+    addStubsForUndeclaredProperties(n, fnName, ref.getNode().getAncestor(2), ref.getNode().getParentNode());\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]