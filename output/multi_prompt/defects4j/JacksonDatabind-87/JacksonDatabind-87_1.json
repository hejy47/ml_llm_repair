[{"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        df = new SimpleDateFormat(format, loc);\n        if (tz != null) {\n            df.setTimeZone(tz);\n        } else {\n            df.setTimeZone(DEFAULT_TIMEZONE);\n        }\n    } else {\n        df = (DateFormat) df.clone();\n        if (tz != null) {\n            df.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        df.setLenient(lenient.booleanValue());\n    }\n    return df;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,7 +1,11 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n     if (!loc.equals(DEFAULT_LOCALE)) {\n         df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        if (tz != null) {\n+            df.setTimeZone(tz);\n+        } else {\n+            df.setTimeZone(DEFAULT_TIMEZONE);\n+        }\n     } else {\n         df = (DateFormat) df.clone();\n         if (tz != null) {\n", "finish_reason": "stop", "valid": false, "num": 8}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        df = new SimpleDateFormat(format, loc);\n        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n        if (lenient != null) {\n            df.setLenient(lenient.booleanValue());\n        }\n    } else {\n        df = (DateFormat) df.clone();\n        if (tz != null) {\n            df.setTimeZone(tz);\n        }\n        if (lenient != null) {\n            df.setLenient(lenient.booleanValue());\n        }\n    }\n    return df;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -2,14 +2,17 @@\n     if (!loc.equals(DEFAULT_LOCALE)) {\n         df = new SimpleDateFormat(format, loc);\n         df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        if (lenient != null) {\n+            df.setLenient(lenient.booleanValue());\n+        }\n     } else {\n         df = (DateFormat) df.clone();\n         if (tz != null) {\n             df.setTimeZone(tz);\n         }\n-    }\n-    if (lenient != null) {\n-        df.setLenient(lenient.booleanValue());\n+        if (lenient != null) {\n+            df.setLenient(lenient.booleanValue());\n+        }\n     }\n     return df;\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    DateFormat clonedDf = null;\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        clonedDf = new SimpleDateFormat(format, loc);\n        clonedDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n    } else {\n        clonedDf = (DateFormat) df.clone();\n        if (tz != null) {\n            clonedDf.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        clonedDf.setLenient(lenient.booleanValue());\n    }\n    return clonedDf;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,15 +1,16 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n+    DateFormat clonedDf = null;\n     if (!loc.equals(DEFAULT_LOCALE)) {\n-        df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        clonedDf = new SimpleDateFormat(format, loc);\n+        clonedDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     } else {\n-        df = (DateFormat) df.clone();\n+        clonedDf = (DateFormat) df.clone();\n         if (tz != null) {\n-            df.setTimeZone(tz);\n+            clonedDf.setTimeZone(tz);\n         }\n     }\n     if (lenient != null) {\n-        df.setLenient(lenient.booleanValue());\n+        clonedDf.setLenient(lenient.booleanValue());\n     }\n-    return df;\n+    return clonedDf;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        df = new SimpleDateFormat(format, loc);\n        if (tz != null) {\n            df.setTimeZone(tz);\n        }\n    } else {\n        df = (DateFormat) df.clone();\n        if (tz != null) {\n            df.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        df.setLenient(lenient.booleanValue());\n    }\n    return df;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,7 +1,9 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n     if (!loc.equals(DEFAULT_LOCALE)) {\n         df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        if (tz != null) {\n+            df.setTimeZone(tz);\n+        }\n     } else {\n         df = (DateFormat) df.clone();\n         if (tz != null) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    DateFormat newDf;\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        newDf = new SimpleDateFormat(format, loc);\n        newDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n    } else {\n        newDf = (DateFormat) df.clone();\n        if (tz != null) {\n            newDf.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        newDf.setLenient(lenient.booleanValue());\n    }\n    return newDf;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,15 +1,16 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n+    DateFormat newDf;\n     if (!loc.equals(DEFAULT_LOCALE)) {\n-        df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        newDf = new SimpleDateFormat(format, loc);\n+        newDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     } else {\n-        df = (DateFormat) df.clone();\n+        newDf = (DateFormat) df.clone();\n         if (tz != null) {\n-            df.setTimeZone(tz);\n+            newDf.setTimeZone(tz);\n         }\n     }\n     if (lenient != null) {\n-        df.setLenient(lenient.booleanValue());\n+        newDf.setLenient(lenient.booleanValue());\n     }\n-    return df;\n+    return newDf;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    DateFormat clonedDf;\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        clonedDf = new SimpleDateFormat(format, loc);\n        clonedDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n    } else {\n        clonedDf = (DateFormat) df.clone();\n        if (tz != null) {\n            clonedDf.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        clonedDf.setLenient(lenient.booleanValue());\n    }\n    return clonedDf;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,15 +1,16 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n+    DateFormat clonedDf;\n     if (!loc.equals(DEFAULT_LOCALE)) {\n-        df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n+        clonedDf = new SimpleDateFormat(format, loc);\n+        clonedDf.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     } else {\n-        df = (DateFormat) df.clone();\n+        clonedDf = (DateFormat) df.clone();\n         if (tz != null) {\n-            df.setTimeZone(tz);\n+            clonedDf.setTimeZone(tz);\n         }\n     }\n     if (lenient != null) {\n-        df.setLenient(lenient.booleanValue());\n+        clonedDf.setLenient(lenient.booleanValue());\n     }\n-    return df;\n+    return clonedDf;\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    if (loc == null || !loc.equals(DEFAULT_LOCALE)) { //checking for null locale\n        df = new SimpleDateFormat(format, loc);\n        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n    } else {\n        df = (DateFormat) df.clone();\n        if (tz != null) {\n            df.setTimeZone(tz);\n        }\n    }\n    if (lenient != null) {\n        df.setLenient(lenient.booleanValue());\n    }\n    return df;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,5 +1,5 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n-    if (!loc.equals(DEFAULT_LOCALE)) {\n+    if (loc == null || !loc.equals(DEFAULT_LOCALE)) { //checking for null locale\n         df = new SimpleDateFormat(format, loc);\n         df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n    if (!loc.equals(DEFAULT_LOCALE)) {\n        df = new SimpleDateFormat(format, loc);\n    } else {\n        df = (DateFormat) df.clone();\n    }\n    df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n    if (lenient != null) {\n        df.setLenient(lenient.booleanValue());\n    }\n    return df;\n}", "diff": "--- com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n+++ com/fasterxml/jackson/databind/util/StdDateFormat.java@_cloneFormat\n@@ -1,13 +1,10 @@\n private final static DateFormat _cloneFormat(DateFormat df, String format, TimeZone tz, Locale loc, Boolean lenient) {\n     if (!loc.equals(DEFAULT_LOCALE)) {\n         df = new SimpleDateFormat(format, loc);\n-        df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     } else {\n         df = (DateFormat) df.clone();\n-        if (tz != null) {\n-            df.setTimeZone(tz);\n-        }\n     }\n+    df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);\n     if (lenient != null) {\n         df.setLenient(lenient.booleanValue());\n     }\n", "finish_reason": "stop", "valid": false, "num": 2}]