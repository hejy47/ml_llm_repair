[{"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n            charset = charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {\n            // if our advanced charset matching fails.... we just take the default\n        }\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -4,12 +4,15 @@\n     Matcher m = charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset = m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+            charset = charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {\n+            // if our advanced charset matching fails.... we just take the default\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        if (charset.contains(\"\\\"\")) {\n            charset = charset.replaceAll(\"\\\"|'\", \"\").trim();\n            if (Charset.isSupported(charset))\n                return charset;\n        }\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -9,7 +9,11 @@\n         charset = charset.toUpperCase(Locale.ENGLISH);\n         if (Charset.isSupported(charset))\n             return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        if (charset.contains(\"\\\"\")) {\n+            charset = charset.replaceAll(\"\\\"|'\", \"\").trim();\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // fix: try to extract using content-type header\n        int startIndex = contentType.indexOf(\"charset=\");\n        if (startIndex != -1) {\n            charset = contentType.substring(startIndex + 8).trim();\n            if (charset.length() > 0) {\n                if (charset.charAt(0) == '\"')\n                    charset = charset.substring(1);\n                if (charset.charAt(charset.length() - 1) == '\"')\n                    charset = charset.substring(0, charset.length() - 1);\n                if (Charset.isSupported(charset))\n                    return charset;\n                charset = charset.toUpperCase(Locale.ENGLISH);\n                if (Charset.isSupported(charset))\n                    return charset;\n            }\n        }\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -9,6 +9,22 @@\n         charset = charset.toUpperCase(Locale.ENGLISH);\n         if (Charset.isSupported(charset))\n             return charset;\n+        // fix: try to extract using content-type header\n+        int startIndex = contentType.indexOf(\"charset=\");\n+        if (startIndex != -1) {\n+            charset = contentType.substring(startIndex + 8).trim();\n+            if (charset.length() > 0) {\n+                if (charset.charAt(0) == '\"')\n+                    charset = charset.substring(1);\n+                if (charset.charAt(charset.length() - 1) == '\"')\n+                    charset = charset.substring(0, charset.length() - 1);\n+                if (Charset.isSupported(charset))\n+                    return charset;\n+                charset = charset.toUpperCase(Locale.ENGLISH);\n+                if (Charset.isSupported(charset))\n+                    return charset;\n+            }\n+        }\n         // if our advanced charset matching fails.... we just take the default\n     }\n     return null;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toLowerCase(Locale.ENGLISH); // fix: change to lowercase\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,7 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        charset = charset.toLowerCase(Locale.ENGLISH); // fix: change to lowercase\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        String upperCharset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(upperCharset))\n            return upperCharset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n} \n\n# The fix involves declaring and using a new variable (upperCharset) to store the uppercase version of the charset for checking if it is supported by Charset.", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,9 +6,9 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        String upperCharset = charset.toUpperCase(Locale.ENGLISH);\n+        if (Charset.isSupported(upperCharset))\n+            return upperCharset;\n         // if our advanced charset matching fails.... we just take the default\n     }\n     return null;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toLowerCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,7 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        charset = charset.toLowerCase(Locale.ENGLISH);\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n            charset = charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {\n            // ignore and continue\n        }\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -4,12 +4,15 @@\n     Matcher m = charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset = m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+            charset = charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {\n+            // ignore and continue\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n            charset = charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException e) {\n            // Invalid charset name, ignore and return null\n        }\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -4,12 +4,15 @@\n     Matcher m = charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset = m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+            charset = charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException e) {\n+            // Invalid charset name, ignore and return null\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toLowerCase(Locale.ENGLISH); // changed to lowercase\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,7 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        charset = charset.toLowerCase(Locale.ENGLISH); // changed to lowercase\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.matches()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}\n\nNote: The only change made is to use the `matches()` method instead of `find()`. This ensures that the entire string is matched against the regex pattern, which is what is intended in this case.", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -2,7 +2,7 @@\n     if (contentType == null)\n         return null;\n     Matcher m = charsetPattern.matcher(contentType);\n-    if (m.find()) {\n+    if (m.matches()) {\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.trim().toUpperCase(Locale.ENGLISH); // Fix: trim before converting to upper case\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,7 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        charset = charset.trim().toUpperCase(Locale.ENGLISH); // Fix: trim before converting to upper case\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException ex) {\n            // ignore and continue\n        }\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException ex) {\n            // ignore and continue\n        }\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -4,11 +4,19 @@\n     Matcher m = charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset = m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException ex) {\n+            // ignore and continue\n+        }\n         charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException ex) {\n+            // ignore and continue\n+        }\n         // if our advanced charset matching fails.... we just take the default\n     }\n     return null;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // check if charset is inside quotes\n        m = charsetPatternInQuotes.matcher(contentType);\n        if (m.find()) {\n            charset = m.group(1).trim();\n            if (Charset.isSupported(charset))\n                return charset;\n            charset = charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        }\n    }\n    return null;\n} \n\n# The fixed function checks if the charset is inside quotes if the first match fails to find a supported charset.", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -9,7 +9,16 @@\n         charset = charset.toUpperCase(Locale.ENGLISH);\n         if (Charset.isSupported(charset))\n             return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        // check if charset is inside quotes\n+        m = charsetPatternInQuotes.matcher(contentType);\n+        if (m.find()) {\n+            charset = m.group(1).trim();\n+            if (Charset.isSupported(charset))\n+                return charset;\n+            charset = charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException ignored) {\n        }\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException | UnsupportedCharsetException ignored) {\n        }\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -4,11 +4,17 @@\n     Matcher m = charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset = m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException ignored) {\n+        }\n         charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException | UnsupportedCharsetException ignored) {\n+        }\n         // if our advanced charset matching fails.... we just take the default\n     }\n     return null;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // check for variants of the charset name:\n        if (charset.equals(\"UTF8\")) {\n            return \"UTF-8\";\n        }\n        if (charset.equals(\"ISO8859-1\")) {\n            return \"ISO-8859-1\";\n        }\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -9,7 +9,13 @@\n         charset = charset.toUpperCase(Locale.ENGLISH);\n         if (Charset.isSupported(charset))\n             return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        // check for variants of the charset name:\n+        if (charset.equals(\"UTF8\")) {\n+            return \"UTF-8\";\n+        }\n+        if (charset.equals(\"ISO8859-1\")) {\n+            return \"ISO-8859-1\";\n+        }\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        String charsetLowerCase = charset.toLowerCase(Locale.ENGLISH);\n        if (Charset.isSupported(charsetLowerCase))\n            return charsetLowerCase;\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,10 +6,9 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        // if our advanced charset matching fails.... we just take the default\n+        String charsetLowerCase = charset.toLowerCase(Locale.ENGLISH);\n+        if (Charset.isSupported(charsetLowerCase))\n+            return charsetLowerCase;\n     }\n     return null;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        String uppercaseCharset = charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(uppercaseCharset))\n            return uppercaseCharset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,9 +6,9 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        String uppercaseCharset = charset.toUpperCase(Locale.ENGLISH);\n+        if (Charset.isSupported(uppercaseCharset))\n+            return uppercaseCharset;\n         // if our advanced charset matching fails.... we just take the default\n     }\n     return null;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        // Try lowercasing the charset name for matching\n        charset = charset.toLowerCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n        // Try uppercasing the first letter of the charset name for matching\n        charset = Character.toUpperCase(charset.charAt(0)) + charset.substring(1);\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,12 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        // Try lowercasing the charset name for matching\n+        charset = charset.toLowerCase(Locale.ENGLISH);\n+        if (Charset.isSupported(charset))\n+            return charset;\n+        // Try uppercasing the first letter of the charset name for matching\n+        charset = Character.toUpperCase(charset.charAt(0)) + charset.substring(1);\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "static String getCharsetFromContentType(String contentType) {\n    if (contentType == null)\n        return null;\n    Matcher m = charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset = m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset = charset.toLowerCase(Locale.ENGLISH); // Change to lowercase instead of uppercase\n        if (Charset.isSupported(charset))\n            return charset;\n        // if our advanced charset matching fails.... we just take the default\n    }\n    return null;\n}", "diff": "--- org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n+++ org/jsoup/helper/DataUtil.java@getCharsetFromContentType\n@@ -6,7 +6,7 @@\n         String charset = m.group(1).trim();\n         if (Charset.isSupported(charset))\n             return charset;\n-        charset = charset.toUpperCase(Locale.ENGLISH);\n+        charset = charset.toLowerCase(Locale.ENGLISH); // Change to lowercase instead of uppercase\n         if (Charset.isSupported(charset))\n             return charset;\n         // if our advanced charset matching fails.... we just take the default\n", "finish_reason": "stop", "valid": false, "num": 1}]