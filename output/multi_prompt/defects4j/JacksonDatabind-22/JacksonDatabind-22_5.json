[{"output": "protected JsonSerializer<?> buildArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, boolean staticTyping, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer) throws JsonMappingException {\n    // 25-Jun-2015, tatu: Note that unlike with Collection(Like) and Map(Like) types, array\n    //   types can not be annotated (in theory I guess we could have mix-ins but... ?)\n    //   so we need not do primary annotation lookup here.\n    //   So all we need is (1) Custom, (2) Default array serializers\n    JsonSerializer<?> ser = null;\n    for (Serializers serializers : customSerializers()) {\n        // (1) Custom\n        ser = serializers.findArraySerializer(config, type, beanDesc, elementTypeSerializer, elementValueSerializer);\n        if (ser != null) {\n            break;\n        }\n    }\n    if (ser == null) {\n        Class<?> raw = type.getRawClass();\n        // Important: do NOT use standard serializers if non-standard element value serializer specified\n        if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer)) {\n            if (String[].class == raw) {\n                ser = StringArraySerializer.instance;\n            } else {\n                // other standard types?\n                ser = StdArraySerializers.findStandardImpl(raw);\n            }\n        }\n        if (ser == null) {\n            // Fixed code below\n            if (type.getContentType().getRawClass() == Object.class) {\n                ser = new ObjectArraySerializer(type.getContentType(), staticTyping, elementTypeSerializer, elementValueSerializer);\n            } else {\n                ser = new ObjectArraySerializer(null, staticTyping, elementTypeSerializer, elementValueSerializer);\n            }\n        }\n    }\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            ser = mod.modifyArraySerializer(config, type, beanDesc, ser);\n        }\n    }\n    return ser;\n}", "diff": "", "finish_reason": "stop", "valid": false, "num": 20}]