[{"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if(n == 0) {\n        return 1.0;\n    }\n    double result = 1.0;\n    for(int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,12 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if(n == 0) {\n+        return 1.0;\n+    }\n+    double result = 1.0;\n+    for(int i = 1; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    double result = 1;\n    for (int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,9 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    double result = 1;\n+    for (int i = 1; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    double result = 1.0;\n    for(int i=1; i<=n; i++){\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,9 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    double result = 1.0;\n+    for(int i=1; i<=n; i++){\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if (n == 0) {\n        return 1;\n    }\n    double result = 1;\n    for (int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,12 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if (n == 0) {\n+        return 1;\n+    }\n+    double result = 1;\n+    for (int i = 1; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if (n == 0) {\n        return 1.0;\n    }\n    double result = 1.0;\n    for (int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,12 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if (n == 0) {\n+        return 1.0;\n+    }\n+    double result = 1.0;\n+    for (int i = 1; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    double fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return fact;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,9 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    double fact = 1;\n+    for (int i = 1; i <= n; i++) {\n+        fact *= i;\n+    }\n+    return fact;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if (n == 0)\n        return 1;\n    double result = 1;\n    for (int i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,11 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if (n == 0)\n+        return 1;\n+    double result = 1;\n+    for (int i = 1; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    double result = 1.0;\n    for (int i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,9 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    double result = 1.0;\n+    for (int i = 2; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    double result = 1;\n    for (int i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,9 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    double result = 1;\n+    for (int i = 2; i <= n; i++) {\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if(n < 2){\n        return 1;\n    }\n    double result = 1;\n    for(int i = 2; i <= n; i++){\n        result *= i;\n    }\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,12 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if(n < 2){\n+        return 1;\n+    }\n+    double result = 1;\n+    for(int i = 2; i <= n; i++){\n+        result *= i;\n+    }\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double factorialDouble(final int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n    }\n    if (n == 0) {\n        return 1.0;\n    }\n\n    double result = 1.0;\n    for (int i = 2; i <= n; i++) {\n        result *= i;\n    }\n\n    return result;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@factorialDouble\n+++ org/apache/commons/math/util/MathUtils.java@factorialDouble\n@@ -2,5 +2,14 @@\n     if (n < 0) {\n         throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n     }\n-    return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n+    if (n == 0) {\n+        return 1.0;\n+    }\n+\n+    double result = 1.0;\n+    for (int i = 2; i <= n; i++) {\n+        result *= i;\n+    }\n+\n+    return result;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]