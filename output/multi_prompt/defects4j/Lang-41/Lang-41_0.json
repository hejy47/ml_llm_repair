[{"output": "public static String getShortClassName(String className) {\n    if (className == null || className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}\n\nNote: The fix combines the two conditional statements checking for a null or empty className into one.", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,8 +1,5 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.length() == 0) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.isEmpty()) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,8 +1,5 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.isEmpty()) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.substring(0, innerIdx - lastDotIdx - 1) + out.substring(innerIdx).replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -11,7 +11,7 @@\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n     String out = className.substring(lastDotIdx + 1);\n     if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = out.substring(0, innerIdx - lastDotIdx - 1) + out.substring(innerIdx).replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     }\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.substring(0, innerIdx - lastDotIdx - 1) +\n              PACKAGE_SEPARATOR_CHAR +\n              out.substring(innerIdx - lastDotIdx);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -11,7 +11,9 @@\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n     String out = className.substring(lastDotIdx + 1);\n     if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = out.substring(0, innerIdx - lastDotIdx - 1) +\n+              PACKAGE_SEPARATOR_CHAR +\n+              out.substring(innerIdx - lastDotIdx);\n     }\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.isEmpty()) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out;\n    if (innerIdx == -1) {\n        out = className.substring(lastDotIdx + 1);\n    } else {\n        out = className.substring(lastDotIdx + 1, innerIdx);\n    }\n    out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,17 +1,17 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.isEmpty()) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n-    if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+    String out;\n+    if (innerIdx == -1) {\n+        out = className.substring(lastDotIdx + 1);\n+    } else {\n+        out = className.substring(lastDotIdx + 1, innerIdx);\n     }\n+    out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (StringUtils.isEmpty(className)) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}\n\nChanges Made:\n- The check for className length was removed and a check for empty string was added using StringUtils.\n- The code logic was not changed.", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,8 +1,5 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (StringUtils.isEmpty(className)) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -9,7 +9,7 @@\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n+    String out = className.substring(lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n     if (innerIdx != -1) {\n         out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out;\n    if (innerIdx != -1) {\n        out = className.substring(lastDotIdx + 1, innerIdx);\n    } else {\n        out = className.substring(lastDotIdx + 1);\n    }\n    out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,17 +1,17 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.length() == 0) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n+    String out;\n     if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = className.substring(lastDotIdx + 1, innerIdx);\n+    } else {\n+        out = className.substring(lastDotIdx + 1);\n     }\n+    out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out;\n    if (innerIdx != -1) {\n        out = className.substring(lastDotIdx + 1, innerIdx);\n    } else {\n        out = className.substring(lastDotIdx + 1);\n    }\n    return out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,17 +1,16 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.length() == 0) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n+    String out;\n     if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = className.substring(lastDotIdx + 1, innerIdx);\n+    } else {\n+        out = className.substring(lastDotIdx + 1);\n     }\n-    return out;\n+    return out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.isEmpty()) {\n        return StringUtils.EMPTY;\n    }\n\n    // Handle array encoding\n    int arrayIndex = className.lastIndexOf(\"[\");\n    if (arrayIndex != -1) {\n        className = className.substring(arrayIndex + 1);\n    }\n\n    // Strip Object type encoding and package name\n    int innerIndex = className.indexOf(INNER_CLASS_SEPARATOR_CHAR);\n    if (innerIndex != -1) {\n        className = className.substring(0, innerIndex);\n    }\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    if (lastDotIdx != -1) {\n        className = className.substring(lastDotIdx + 1);\n    }\n    return className;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,17 +1,22 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n+    if (className == null || className.isEmpty()) {\n         return StringUtils.EMPTY;\n     }\n-    if (className.length() == 0) {\n-        return StringUtils.EMPTY;\n+\n+    // Handle array encoding\n+    int arrayIndex = className.lastIndexOf(\"[\");\n+    if (arrayIndex != -1) {\n+        className = className.substring(arrayIndex + 1);\n     }\n-    // Handle array encoding\n-    // Strip Object type encoding\n+\n+    // Strip Object type encoding and package name\n+    int innerIndex = className.indexOf(INNER_CLASS_SEPARATOR_CHAR);\n+    if (innerIndex != -1) {\n+        className = className.substring(0, innerIndex);\n+    }\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n-    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n-    if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+    if (lastDotIdx != -1) {\n+        className = className.substring(lastDotIdx + 1);\n     }\n-    return out;\n+    return className;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    if (className.charAt(0) == '[') {\n        int i = 0;\n        while (className.charAt(i) == '[') {\n            i++;\n        }\n        if (className.charAt(i) == 'L' && className.charAt(className.length() - 1) == ';') {\n            className = className.substring(i + 1, className.length() - 1);\n        } else {\n            className = className.substring(i);\n        }\n    }\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -6,6 +6,17 @@\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n+    if (className.charAt(0) == '[') {\n+        int i = 0;\n+        while (className.charAt(i) == '[') {\n+            i++;\n+        }\n+        if (className.charAt(i) == 'L' && className.charAt(className.length() - 1) == ';') {\n+            className = className.substring(i + 1, className.length() - 1);\n+        } else {\n+            className = className.substring(i);\n+        }\n+    }\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n        out = out.substring(0, out.indexOf(\"$\"));    // fix for nested classes\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -12,6 +12,7 @@\n     String out = className.substring(lastDotIdx + 1);\n     if (innerIdx != -1) {\n         out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = out.substring(0, out.indexOf(\"$\"));    // fix for nested classes\n     }\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null || className.isEmpty()) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out;\n    if (innerIdx != -1) {\n        out = className.substring(lastDotIdx + 1, innerIdx);\n        out += className.substring(innerIdx).replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    } else {\n        out = className.substring(lastDotIdx + 1);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -1,17 +1,17 @@\n public static String getShortClassName(String className) {\n-    if (className == null) {\n-        return StringUtils.EMPTY;\n-    }\n-    if (className.length() == 0) {\n+    if (className == null || className.isEmpty()) {\n         return StringUtils.EMPTY;\n     }\n     // Handle array encoding\n     // Strip Object type encoding\n     int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n-    String out = className.substring(lastDotIdx + 1);\n+    String out;\n     if (innerIdx != -1) {\n-        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+        out = className.substring(lastDotIdx + 1, innerIdx);\n+        out += className.substring(innerIdx).replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n+    } else {\n+        out = className.substring(lastDotIdx + 1);\n     }\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    if (out.endsWith(\"[]\")) {\n        out = out.substring(0, out.length() - 2);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -13,5 +13,8 @@\n     if (innerIdx != -1) {\n         out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     }\n+    if (out.endsWith(\"[]\")) {\n+        out = out.substring(0, out.length() - 2);\n+    }\n     return out;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static String getShortClassName(String className) {\n    if (className == null) {\n        return StringUtils.EMPTY;\n    }\n    if (className.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n    // Handle array encoding\n    // Strip Object type encoding\n    int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\n    int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n    String out = className.substring(lastDotIdx + 1);\n    if (innerIdx != -1) {\n        out = out.substring(innerIdx + 1);\n        out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n    }\n    return out;\n}", "diff": "--- org/apache/commons/lang/ClassUtils.java@getShortClassName\n+++ org/apache/commons/lang/ClassUtils.java@getShortClassName\n@@ -11,6 +11,7 @@\n     int innerIdx = className.indexOf(INNER_CLASS_SEPARATOR_CHAR, lastDotIdx == -1 ? 0 : lastDotIdx + 1);\n     String out = className.substring(lastDotIdx + 1);\n     if (innerIdx != -1) {\n+        out = out.substring(innerIdx + 1);\n         out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n     }\n     return out;\n", "finish_reason": "stop", "valid": false, "num": 1}]