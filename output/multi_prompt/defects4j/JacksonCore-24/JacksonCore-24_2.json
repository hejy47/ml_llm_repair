[{"output": "protected void reportOverflowInt(String numDesc) throws IOException {\n    _reportError(String.format(\"Numeric value (%s) out of range of int (%d - %d)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE, Integer.MAX_VALUE));\n}", "diff": "--- com/fasterxml/jackson/core/base/ParserMinimalBase.java@reportOverflowInt\n+++ com/fasterxml/jackson/core/base/ParserMinimalBase.java@reportOverflowInt\n@@ -1,3 +1,3 @@\n protected void reportOverflowInt(String numDesc) throws IOException {\n-    _reportError(String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE, Integer.MAX_VALUE));\n+    _reportError(String.format(\"Numeric value (%s) out of range of int (%d - %d)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE, Integer.MAX_VALUE));\n }\n", "finish_reason": "stop", "valid": false, "num": 19}, {"output": "protected void reportOverflowInt(String numDesc) throws IOException {\n    _reportError(String.format(\"Numeric value (%s) out of range of int (%s - %s)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE + \"\", Integer.MAX_VALUE + \"\"));\n}", "diff": "--- com/fasterxml/jackson/core/base/ParserMinimalBase.java@reportOverflowInt\n+++ com/fasterxml/jackson/core/base/ParserMinimalBase.java@reportOverflowInt\n@@ -1,3 +1,3 @@\n protected void reportOverflowInt(String numDesc) throws IOException {\n-    _reportError(String.format(\"Numeric value (%s) out of range of int (%d - %s)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE, Integer.MAX_VALUE));\n+    _reportError(String.format(\"Numeric value (%s) out of range of int (%s - %s)\", _longIntegerDesc(numDesc), Integer.MIN_VALUE + \"\", Integer.MAX_VALUE + \"\"));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]