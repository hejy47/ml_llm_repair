[{"output": "void clearStackToTableRowContext() {\n    Elements stack = getStack();\n    Element currentElement = stack.last();\n    while (!currentElement.tagName().equals(\"tr\")) {\n        stack.remove(currentElement);\n        currentElement = stack.last();\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,8 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    Elements stack = getStack();\n+    Element currentElement = stack.last();\n+    while (!currentElement.tagName().equals(\"tr\")) {\n+        stack.remove(currentElement);\n+        currentElement = stack.last();\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"tr\", \"tbody\", \"thead\", \"tfoot\");\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,3 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    clearStackToContext(\"tr\", \"tbody\", \"thead\", \"tfoot\");\n }\n", "finish_reason": "stop", "valid": false, "num": 7}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"tr\", \"table\");\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,3 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    clearStackToContext(\"tr\", \"table\");\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "void clearStackToTableRowContext() {\n    while (!stack.isEmpty()) {\n        Element el = stack.peek();\n        if (el.nodeName().equals(\"tr\")) {\n            return;\n        }\n        stack.pop();\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,9 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    while (!stack.isEmpty()) {\n+        Element el = stack.peek();\n+        if (el.nodeName().equals(\"tr\")) {\n+            return;\n+        }\n+        stack.pop();\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    Element row = null;\n    while (!tagStack.isEmpty()) {\n        Element next = tagStack.peek();\n        if (next.nodeName().equals(\"tr\")) {\n            row = next;\n            break;\n        }\n        tagStack.pop();\n    }\n    clearStackToContext(row);\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,12 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    Element row = null;\n+    while (!tagStack.isEmpty()) {\n+        Element next = tagStack.peek();\n+        if (next.nodeName().equals(\"tr\")) {\n+            row = next;\n+            break;\n+        }\n+        tagStack.pop();\n+    }\n+    clearStackToContext(row);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"tr\", \"tbody\", \"tfoot\", \"thead\");\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,3 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    clearStackToContext(\"tr\", \"tbody\", \"tfoot\", \"thead\");\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"tr\", \"tbody\");\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,3 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    clearStackToContext(\"tr\", \"tbody\");\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    Element row = currentElementInPopStack(\"tr\");\n    while (!stack.isEmpty()) {\n        Element popped = stack.pop();\n        if (popped == row)\n            break;\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,8 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    Element row = currentElementInPopStack(\"tr\");\n+    while (!stack.isEmpty()) {\n+        Element popped = stack.pop();\n+        if (popped == row)\n+            break;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    Element row = null;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (\"tr\".equals(node.nodeName())) {\n            row = node;\n            break;\n        }\n    }\n    clearStackToContext(row);\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,11 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    Element row = null;\n+    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n+        Element node = stack.get(pos);\n+        if (\"tr\".equals(node.nodeName())) {\n+            row = node;\n+            break;\n+        }\n+    }\n+    clearStackToContext(row);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"table\");\n    clearStackToContext(\"tr\");\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,4 @@\n void clearStackToTableRowContext() {\n+    clearStackToContext(\"table\");\n     clearStackToContext(\"tr\");\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "void clearStackToTableRowContext() {\n    clearStackToContext(\"tr\", Arrays.asList(\"tbody\", \"thead\", \"tfoot\"));\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n+++ org/jsoup/parser/HtmlTreeBuilder.java@clearStackToTableRowContext\n@@ -1,3 +1,3 @@\n void clearStackToTableRowContext() {\n-    clearStackToContext(\"tr\");\n+    clearStackToContext(\"tr\", Arrays.asList(\"tbody\", \"thead\", \"tfoot\"));\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]