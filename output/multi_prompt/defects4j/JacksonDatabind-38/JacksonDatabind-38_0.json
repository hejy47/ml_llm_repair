[{"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType),\n            null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,7 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType),\n+            null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,9 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType),\n+            null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,8 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType),\n+            null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, TypeBindings.emptyBindings(), \n    _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), \n     _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), \n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), \n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(TypeBindings.createIfNeeded(rawType, elemT), rawType, _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,5 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    return new CollectionType(TypeBindings.createIfNeeded(rawType, elemT), rawType, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,7 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(TypeBindings.createIfNeeded(rawType, elemT), rawType, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,6 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(TypeBindings.createIfNeeded(rawType, elemT), rawType, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings, _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n    return new CollectionType(rawType, bindings,\n        _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,7 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings,\n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,9 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings,\n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,8 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, elemT);\n+    return new CollectionType(rawType, bindings,\n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, TypeBindings.emptyBindings(), // passing emptyBindings instead of null\n    _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // passing emptyBindings instead of null\n     _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // passing emptyBindings instead of null\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // passing emptyBindings instead of null\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fixed\n    _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fixed\n     _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fixed\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fixed\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fix: pass empty type bindings\n    _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fix: pass empty type bindings\n     _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fix: pass empty type bindings\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), // fix: pass empty type bindings\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n    _bogusSuperClass(rawType), null, elemT, null, null, false, null, null);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -4,5 +4,5 @@\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n     return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    _bogusSuperClass(rawType), null, elemT, null, null, false, null, null);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    _bogusSuperClass(rawType), null, elemT, null, null, false, null, null);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    _bogusSuperClass(rawType), null, elemT, null, null, false, null, null);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(TypeBindings.emptyBindings(), rawType, \n        _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    return new CollectionType(TypeBindings.emptyBindings(), rawType, \n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(TypeBindings.emptyBindings(), rawType, \n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(TypeBindings.emptyBindings(), rawType, \n+        _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, _bogusSuperClass(rawType), // Fixed here\n    null, null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    return new CollectionType(rawType, _bogusSuperClass(rawType), // Fixed here\n+    null, null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, _bogusSuperClass(rawType), // Fixed here\n+    null, null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, _bogusSuperClass(rawType), // Fixed here\n+    null, null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, null, // Corrected, now including supertypes\n    TypeBindings.emptyBindings(), elemT, null, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    return new CollectionType(rawType, null, // Corrected, now including supertypes\n+    TypeBindings.emptyBindings(), elemT, null, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, null, // Corrected, now including supertypes\n+    TypeBindings.emptyBindings(), elemT, null, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, null, // Corrected, now including supertypes\n+    TypeBindings.emptyBindings(), elemT, null, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, TypeBindings.emptyBindings(), //fix\n    _bogusSuperClass(rawType), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,6 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), //fix\n     _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), //fix\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, TypeBindings.emptyBindings(), //fix\n+    _bogusSuperClass(rawType), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n    TypeBindings.emptyBindings(), null, elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -4,5 +4,5 @@\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n     return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings.emptyBindings(), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    TypeBindings.emptyBindings(), null, elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n+    TypeBindings.emptyBindings(), null, elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static CollectionType construct(Class<?> rawType, JavaType elemT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    return CollectionType.construct(rawType, TypeBindings.createIfNeeded(rawType, elemT), elemT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -3,6 +3,5 @@\n public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    return CollectionType.construct(rawType, TypeBindings.createIfNeeded(rawType, elemT), elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,7 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return CollectionType.construct(rawType, TypeBindings.createIfNeeded(rawType, elemT), elemT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,6 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    return CollectionType.construct(rawType, TypeBindings.createIfNeeded(rawType, elemT), elemT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]