[{"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // !!! TODO: Wrong, does have supertypes\n    TypeBindings bindings = TypeBindings.create(rawType, keyT, valueT);\n    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,9 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // !!! TODO: Wrong, does have supertypes\n+    TypeBindings bindings = TypeBindings.create(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -4,5 +4,6 @@\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n     // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.create(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,8 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // !!! TODO: Wrong, does have supertypes\n+    TypeBindings bindings = TypeBindings.create(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    JavaType superClass = TypeFactory.unknownType();\n    JavaType[] interfaces = TypeFactory.NO_TYPES;\n    return new MapType(rawType, bindings, superClass, interfaces, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,10 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = TypeFactory.unknownType();\n+    JavaType[] interfaces = TypeFactory.NO_TYPES;\n+    return new MapType(rawType, bindings, superClass, interfaces, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,8 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = TypeFactory.unknownType();\n+    JavaType[] interfaces = TypeFactory.NO_TYPES;\n+    return new MapType(rawType, bindings, superClass, interfaces, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,9 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = TypeFactory.unknownType();\n+    JavaType[] interfaces = TypeFactory.NO_TYPES;\n+    return new MapType(rawType, bindings, superClass, interfaces, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // Fixing: passing the correct supertype\n    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // Fixing: passing the correct supertype\n+    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n+    // Fixing: passing the correct supertype\n     return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // Fixing: passing the correct supertype\n+    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    if (bindings == null) {\n        bindings = TypeBindings.emptyBindings();\n    }\n    return new MapType(rawType, bindings, superClass, superInts, keyT, valueT, valueHandler, typeHandler, asStatic);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,10 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    if (bindings == null) {\n+        bindings = TypeBindings.emptyBindings();\n+    }\n+    return new MapType(rawType, bindings, superClass, superInts, keyT, valueT, valueHandler, typeHandler, asStatic);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,10 @@\n // since 2.7\n @Deprecated\n-public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    if (bindings == null) {\n+        bindings = TypeBindings.emptyBindings();\n+    }\n+    return new MapType(rawType, bindings, superClass, superInts, keyT, valueT, valueHandler, typeHandler, asStatic);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,9 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    if (bindings == null) {\n+        bindings = TypeBindings.emptyBindings();\n     }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+    return new MapType(rawType, bindings, superClass, superInts, keyT, valueT, valueHandler, typeHandler, asStatic);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    // !!! TODO: Wrong, does have supertypes\n    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,9 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    // !!! TODO: Wrong, does have supertypes\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,7 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n     // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,8 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    // !!! TODO: Wrong, does have supertypes\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // Fixed: passing a valid supertype\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,9 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // Fixed: passing a valid supertype\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,7 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    // Fixed: passing a valid supertype\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,8 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // Fixed: passing a valid supertype\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return new MapType(rawType, bindings, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    CollectionType parent = TypeFactory.defaultInstance().constructCollectionType(Map.class, rawType);\n    return MapType.construct(rawType, parent, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    CollectionType parent = TypeFactory.defaultInstance().constructCollectionType(Map.class, rawType);\n+    return MapType.construct(rawType, parent, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    CollectionType parent = TypeFactory.defaultInstance().constructCollectionType(Map.class, rawType);\n+    return MapType.construct(rawType, parent, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    CollectionType parent = TypeFactory.defaultInstance().constructCollectionType(Map.class, rawType);\n+    return MapType.construct(rawType, parent, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // Fixed: Pass null instead of _bogusSuperClass(rawType)\n    return new MapType(rawType, null, null, null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // Fixed: Pass null instead of _bogusSuperClass(rawType)\n+    return new MapType(rawType, null, null, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    // Fixed: Pass null instead of _bogusSuperClass(rawType)\n+    return new MapType(rawType, null, null, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // Fixed: Pass null instead of _bogusSuperClass(rawType)\n+    return new MapType(rawType, null, null, null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return MapType.construct(rawType, bindings, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return MapType.construct(rawType, bindings, null, null, keyT, valueT);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return MapType.construct(\n            rawType,\n            bindings,\n            null,\n            null,\n            keyT,\n            valueT,\n            null,\n            null,\n            false\n    );\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,18 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(\n+            rawType,\n+            bindings,\n+            null,\n+            null,\n+            keyT,\n+            valueT,\n+            null,\n+            null,\n+            false\n+    );\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,16 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(\n+            rawType,\n+            bindings,\n+            null,\n+            null,\n+            keyT,\n+            valueT,\n+            null,\n+            null,\n+            false\n+    );\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,17 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(\n+            rawType,\n+            bindings,\n+            null,\n+            null,\n+            keyT,\n+            valueT,\n+            null,\n+            null,\n+            false\n+    );\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // Updated: create empty TypeBindings and use correct super class\n    return MapType.construct(rawType, TypeBindings.create(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // Updated: create empty TypeBindings and use correct super class\n+    return MapType.construct(rawType, TypeBindings.create(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    // Updated: create empty TypeBindings and use correct super class\n+    return MapType.construct(rawType, TypeBindings.create(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // Updated: create empty TypeBindings and use correct super class\n+    return MapType.construct(rawType, TypeBindings.create(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    // !!! TODO: Wrong, does have supertypes\n    return new MapType(rawType, TypeBindings.createIfNeeded(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    // !!! TODO: Wrong, does have supertypes\n+    return new MapType(rawType, TypeBindings.createIfNeeded(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -4,5 +4,5 @@\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n     // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    return new MapType(rawType, TypeBindings.createIfNeeded(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    // !!! TODO: Wrong, does have supertypes\n+    return new MapType(rawType, TypeBindings.createIfNeeded(rawType, keyT, valueT), _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    JavaType superClass = _bogusSuperClass(rawType);\n    return new MapType(rawType, bindings, superClass, null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,7 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n-    // First: may need to fabricate TypeBindings (needed for refining into\n-    // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = _bogusSuperClass(rawType);\n+    return new MapType(rawType, bindings, superClass, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -1,8 +1,7 @@\n // since 2.7\n @Deprecated\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n-    // First: may need to fabricate TypeBindings (needed for refining into\n-    // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = _bogusSuperClass(rawType);\n+    return new MapType(rawType, bindings, superClass, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,6 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    JavaType superClass = _bogusSuperClass(rawType);\n+    return new MapType(rawType, bindings, superClass, null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "// since 2.7\n@Deprecated\npublic static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n    // First: may need to fabricate TypeBindings (needed for refining into\n    // concrete collection types, as per [databind#1102])\n    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n    return MapType.construct(rawType, bindings, null, null, keyT, valueT, null, null, false);\n}", "diff": "--- com/fasterxml/jackson/databind/type/CollectionType.java@construct\n+++ com/fasterxml/jackson/databind/type/CollectionType.java@construct\n@@ -1,8 +1,8 @@\n // since 2.7\n @Deprecated\n-public static CollectionType construct(Class<?> rawType, JavaType elemT) {\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    return new CollectionType(rawType, null, // !!! TODO: Wrong, does have supertypes, but:\n-    _bogusSuperClass(rawType), null, elemT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/MapType.java@construct\n+++ com/fasterxml/jackson/databind/type/MapType.java@construct\n@@ -3,6 +3,6 @@\n public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n     // First: may need to fabricate TypeBindings (needed for refining into\n     // concrete collection types, as per [databind#1102])\n-    // !!! TODO: Wrong, does have supertypes\n-    return new MapType(rawType, null, _bogusSuperClass(rawType), null, keyT, valueT, null, null, false);\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT, null, null, false);\n }\n--- com/fasterxml/jackson/databind/type/SimpleType.java@construct\n+++ com/fasterxml/jackson/databind/type/SimpleType.java@construct\n@@ -1,14 +1,7 @@\n @Deprecated\n-public static SimpleType construct(Class<?> cls) {\n-        if (Map.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \" + cls.getName() + \")\");\n-    }\n-    if (Collection.class.isAssignableFrom(cls)) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \" + cls.getName() + \")\");\n-    }\n-    // ... and while we are at it, not array types either\n-    if (cls.isArray()) {\n-        throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \" + cls.getName() + \")\");\n-    }\n-    return new SimpleType(cls, TypeBindings.emptyBindings(), _bogusSuperClass(cls), null, null, null, false);\n+public static MapType construct(Class<?> rawType, JavaType keyT, JavaType valueT) {\n+    // First: may need to fabricate TypeBindings (needed for refining into\n+    // concrete collection types, as per [databind#1102])\n+    TypeBindings bindings = TypeBindings.createIfNeeded(rawType, keyT, valueT);\n+    return MapType.construct(rawType, bindings, null, null, keyT, valueT, null, null, false);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]