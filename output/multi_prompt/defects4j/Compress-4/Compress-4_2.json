[{"output": "public void close() throws IOException {\n    try {\n        finish();\n    } finally {\n        if (raf != null) {\n            raf.close();\n        }\n        if (out != null) {\n            out.close();\n        }\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,12 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n-        out.close();\n-        this.closed = true;\n+    try {\n+        finish();\n+    } finally {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,12 @@\n public void close() throws IOException {\n-    if (!closed) {\n+    try {\n         finish();\n-        buffer.close();\n-        out.close();\n-        closed = true;\n+    } finally {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,12 @@\n public void close() throws IOException {\n-    finish();\n-    if (raf != null) {\n-        raf.close();\n-    }\n-    if (out != null) {\n-        out.close();\n+    try {\n+        finish();\n+    } finally {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "public void close() throws IOException {\n    if (out != null) {\n        out.close();\n    }\n    if (raf != null) {\n        raf.close();\n    }\n    finish();\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,9 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n+    if (out != null) {\n         out.close();\n-        this.closed = true;\n     }\n+    if (raf != null) {\n+        raf.close();\n+    }\n+    finish();\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,9 @@\n public void close() throws IOException {\n-    if (!closed) {\n-        finish();\n-        buffer.close();\n+    if (out != null) {\n         out.close();\n-        closed = true;\n     }\n+    if (raf != null) {\n+        raf.close();\n+    }\n+    finish();\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,9 @@\n public void close() throws IOException {\n-    finish();\n+    if (out != null) {\n+        out.close();\n+    }\n     if (raf != null) {\n         raf.close();\n     }\n-    if (out != null) {\n-        out.close();\n-    }\n+    finish();\n }\n", "finish_reason": "stop", "valid": false, "num": 9}, {"output": "public void close() throws IOException {\n    try {\n        finish();\n    } finally { // always execute even if an exception is thrown\n        if (raf != null) {\n            raf.close();\n        }\n        if (out != null) {\n            out.close();\n        }\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,12 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n-        out.close();\n-        this.closed = true;\n+    try {\n+        finish();\n+    } finally { // always execute even if an exception is thrown\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,12 @@\n public void close() throws IOException {\n-    if (!closed) {\n+    try {\n         finish();\n-        buffer.close();\n-        out.close();\n-        closed = true;\n+    } finally { // always execute even if an exception is thrown\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,12 @@\n public void close() throws IOException {\n-    finish();\n-    if (raf != null) {\n-        raf.close();\n-    }\n-    if (out != null) {\n-        out.close();\n+    try {\n+        finish();\n+    } finally { // always execute even if an exception is thrown\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void close() throws IOException {\n    if (out != null) {\n        out.flush();\n        out.close();\n    }\n    if (raf != null) {\n        raf.close();\n    }\n    finish();\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,10 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        this.closed = true;\n     }\n+    if (raf != null) {\n+        raf.close();\n+    }\n+    finish();\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,10 @@\n public void close() throws IOException {\n-    if (!closed) {\n-        finish();\n-        buffer.close();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        closed = true;\n     }\n+    if (raf != null) {\n+        raf.close();\n+    }\n+    finish();\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,10 @@\n public void close() throws IOException {\n-    finish();\n+    if (out != null) {\n+        out.flush();\n+        out.close();\n+    }\n     if (raf != null) {\n         raf.close();\n     }\n-    if (out != null) {\n-        out.close();\n-    }\n+    finish();\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "public void close() throws IOException {\n    if (out != null) {\n        out.flush();\n        out.close();\n    }\n    if (raf != null) {\n        raf.close();\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,9 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        this.closed = true;\n+    }\n+    if (raf != null) {\n+        raf.close();\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,9 @@\n public void close() throws IOException {\n-    if (!closed) {\n-        finish();\n-        buffer.close();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        closed = true;\n+    }\n+    if (raf != null) {\n+        raf.close();\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,9 @@\n public void close() throws IOException {\n-    finish();\n+    if (out != null) {\n+        out.flush();\n+        out.close();\n+    }\n     if (raf != null) {\n         raf.close();\n     }\n-    if (out != null) {\n-        out.close();\n-    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void close() throws IOException {\n    try {\n        if (raf != null) {\n            raf.close();\n        }\n    } finally {\n        if (out != null) {\n            out.close();\n        }\n        finish();\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,12 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n-        out.close();\n-        this.closed = true;\n+    try {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+    } finally {\n+        if (out != null) {\n+            out.close();\n+        }\n+        finish();\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,12 @@\n public void close() throws IOException {\n-    if (!closed) {\n+    try {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+    } finally {\n+        if (out != null) {\n+            out.close();\n+        }\n         finish();\n-        buffer.close();\n-        out.close();\n-        closed = true;\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,12 @@\n public void close() throws IOException {\n-    finish();\n-    if (raf != null) {\n-        raf.close();\n-    }\n-    if (out != null) {\n-        out.close();\n+    try {\n+        if (raf != null) {\n+            raf.close();\n+        }\n+    } finally {\n+        if (out != null) {\n+            out.close();\n+        }\n+        finish();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void close() throws IOException {\n    if (out != null) {\n        out.flush();\n        out.close();\n    }\n    finish();\n    if (raf != null) {\n        raf.close();\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,10 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        this.closed = true;\n+    }\n+    finish();\n+    if (raf != null) {\n+        raf.close();\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,10 @@\n public void close() throws IOException {\n-    if (!closed) {\n-        finish();\n-        buffer.close();\n+    if (out != null) {\n+        out.flush();\n         out.close();\n-        closed = true;\n+    }\n+    finish();\n+    if (raf != null) {\n+        raf.close();\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,10 @@\n public void close() throws IOException {\n+    if (out != null) {\n+        out.flush();\n+        out.close();\n+    }\n     finish();\n     if (raf != null) {\n         raf.close();\n     }\n-    if (out != null) {\n-        out.close();\n-    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public void close() throws IOException {\n    try{\n        finish();\n    }\n    finally{\n        if (raf != null) {\n            raf.close();\n        }\n        if (out != null) {\n            out.close();\n        }\n    }\n}", "diff": "--- org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java@close\n@@ -1,7 +1,13 @@\n public void close() throws IOException {\n-    if (!this.closed) {\n-        this.finish();\n-        out.close();\n-        this.closed = true;\n+    try{\n+        finish();\n+    }\n+    finally{\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java@close\n@@ -1,8 +1,13 @@\n public void close() throws IOException {\n-    if (!closed) {\n+    try{\n         finish();\n-        buffer.close();\n-        out.close();\n-        closed = true;\n+    }\n+    finally{\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n--- org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n+++ org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java@close\n@@ -1,9 +1,13 @@\n public void close() throws IOException {\n-    finish();\n-    if (raf != null) {\n-        raf.close();\n+    try{\n+        finish();\n     }\n-    if (out != null) {\n-        out.close();\n+    finally{\n+        if (raf != null) {\n+            raf.close();\n+        }\n+        if (out != null) {\n+            out.close();\n+        }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]