[{"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = n; i > k; i--) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= n - k; i++) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,9 +11,9 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n; i > k; i--) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = n - k + 1; i <= n; i++) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= k; i++) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,13 +11,13 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n - k + 1; i <= n; i++) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n+    for (int i = 2; i <= k; i++) {\n         logSum -= Math.log((double) i);\n     }\n     return logSum;\n", "finish_reason": "stop", "valid": false, "num": 5}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = k + 1; i <= n; i++) {\n        logSum += Math.log((double) i / (i - k));\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,14 +11,10 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n     for (int i = k + 1; i <= n; i++) {\n-        logSum += Math.log((double) i);\n-    }\n-    // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n-        logSum -= Math.log((double) i);\n+        logSum += Math.log((double) i / (i - k));\n     }\n     return logSum;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = n-k+1; i <= n; i++) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= k; i++) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,13 +11,13 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n-k+1; i <= n; i++) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n+    for (int i = 2; i <= k; i++) {\n         logSum -= Math.log((double) i);\n     }\n     return logSum;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = k + 1; i <= n; i++) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= n - k; i++) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,7 +11,7 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n     for (int i = k + 1; i <= n; i++) {\n         logSum += Math.log((double) i);\n", "finish_reason": "stop", "valid": false, "num": 4}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // calculate min(n-k, k)\n    int min = Math.min(n-k, k);\n    // calculate log(n*(n-1)*...*(n-min+1)) / min!\n    for (int i = 1; i <= min; i++) {\n        logSum += Math.log((double) (n - i + 1)) - Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,14 +11,12 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n-    // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n-        logSum += Math.log((double) i);\n-    }\n-    // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n-        logSum -= Math.log((double) i);\n+    double logSum = 0;\n+    // calculate min(n-k, k)\n+    int min = Math.min(n-k, k);\n+    // calculate log(n*(n-1)*...*(n-min+1)) / min!\n+    for (int i = 1; i <= min; i++) {\n+        logSum += Math.log((double) (n - i + 1)) - Math.log((double) i);\n     }\n     return logSum;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logProd = 0;\n    // n!/k!\n    for (int i = k + 1; i <= n; i++) {\n        logProd += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= n - k; i++) {\n        logProd -= Math.log((double) i);\n    }\n    return logProd;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,14 +11,14 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logProd = 0;\n     // n!/k!\n     for (int i = k + 1; i <= n; i++) {\n-        logSum += Math.log((double) i);\n+        logProd += Math.log((double) i);\n     }\n     // divide by (n-k)!\n     for (int i = 2; i <= n - k; i++) {\n-        logSum -= Math.log((double) i);\n+        logProd -= Math.log((double) i);\n     }\n-    return logSum;\n+    return logProd;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum = 0;\n    // n!/k!\n    for (int i = n; i > k; i--) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = n - k; i > 1; i--) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -11,13 +11,13 @@\n     if ((k == 1) || (k == n - 1)) {\n         return Math.log((double) n);\n     }\n-                double logSum = 0;\n+    double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n; i > k; i--) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n+    for (int i = n - k; i > 1; i--) {\n         logSum -= Math.log((double) i);\n     }\n     return logSum;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n                double logSum = 0;\n    // n!/k!\n    for (int i = n; i > k; i--) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = n - k; i > 0; i--) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -13,11 +13,11 @@\n     }\n                 double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n; i > k; i--) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n+    for (int i = n - k; i > 0; i--) {\n         logSum -= Math.log((double) i);\n     }\n     return logSum;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n < k) {\n        throw new IllegalArgumentException(\"must have n >= k for binomial coefficient (n,k)\");\n    }\n    if (n < 0) {\n        throw new IllegalArgumentException(\"must have n >= 0 for binomial coefficient (n,k)\");\n    }\n    if ((n == k) || (k == 0)) {\n        return 0;\n    }\n    if ((k == 1) || (k == n - 1)) {\n        return Math.log((double) n);\n    }\n                double logSum = 0;\n    // n!/k!\n    for (int i = n - k + 1; i <= n; i++) {\n        logSum += Math.log((double) i);\n    }\n    // divide by (n-k)!\n    for (int i = 2; i <= k; i++) {\n        logSum -= Math.log((double) i);\n    }\n    return logSum;\n}", "diff": "--- org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n+++ org/apache/commons/math/util/MathUtils.java@binomialCoefficientLog\n@@ -13,11 +13,11 @@\n     }\n                 double logSum = 0;\n     // n!/k!\n-    for (int i = k + 1; i <= n; i++) {\n+    for (int i = n - k + 1; i <= n; i++) {\n         logSum += Math.log((double) i);\n     }\n     // divide by (n-k)!\n-    for (int i = 2; i <= n - k; i++) {\n+    for (int i = 2; i <= k; i++) {\n         logSum -= Math.log((double) i);\n     }\n     return logSum;\n", "finish_reason": "stop", "valid": false, "num": 1}]