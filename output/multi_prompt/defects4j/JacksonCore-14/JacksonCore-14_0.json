[{"output": "protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // Only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: use < instead of <=\n        throw wrongBuf();\n    }\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n-    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    // Only prevent shrinking of buffer\n+    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: use < instead of <=\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 16}, {"output": "protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease == null) || (src == null) || (toRelease != src) || (toRelease.length > src.length)) {\n        throw wrongBuf();\n    }\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease == null) || (src == null) || (toRelease != src) || (toRelease.length > src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease == null) || ((toRelease != src) && (toRelease.length < src.length))) {\n        throw wrongBuf();\n    }\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease == null) || ((toRelease != src) && (toRelease.length < src.length))) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]