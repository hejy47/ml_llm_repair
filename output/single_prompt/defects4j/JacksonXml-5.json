[{"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = src._rootNameLookup.clone();\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,7 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = src._rootNameLookup.clone();\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = new RootNameLookup();\n        _rootNameLookup.addAll(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,8 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = new RootNameLookup();\n+        _rootNameLookup.addAll(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n       _rootNameLookup = new RootNameLookup(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,7 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+       _rootNameLookup = new RootNameLookup(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = new XmlRootNameLookup();\n        _rootNameLookup.addAll(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,8 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = new XmlRootNameLookup();\n+        _rootNameLookup.addAll(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 3}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = new LRUMap<>(src._rootNameLookup.size(), src._rootNameLookup.getMaxEntries());\n        _rootNameLookup.putAll(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,8 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = new LRUMap<>(src._rootNameLookup.size(), src._rootNameLookup.getMaxEntries());\n+        _rootNameLookup.putAll(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    // root name lookup as that may link back to different version or configuration.\n    // Instead, create a new instance and copy over the root name lookup entries.\n    _rootNameLookup = new ConcurrentHashMap<JavaType, QName>();\n    _rootNameLookup.putAll(src._rootNameLookup);\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -1,6 +1,8 @@\n protected XmlSerializerProvider(XmlSerializerProvider src) {\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n-    //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    // root name lookup as that may link back to different version or configuration.\n+    // Instead, create a new instance and copy over the root name lookup entries.\n+    _rootNameLookup = new ConcurrentHashMap<JavaType, QName>();\n+    _rootNameLookup.putAll(src._rootNameLookup);\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src != null) {\n        _rootNameLookup = src._rootNameLookup;\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,7 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src != null) {\n+        _rootNameLookup = src._rootNameLookup;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 8}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = new RootNameLookup(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,7 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = new RootNameLookup(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n       _rootNameLookup = new RootNameLookup();\n       _rootNameLookup.addAll(src._rootNameLookup);\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,8 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+       _rootNameLookup = new RootNameLookup();\n+       _rootNameLookup.addAll(src._rootNameLookup);\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if (src._rootNameLookup != null) {\n        _rootNameLookup = src._rootNameLookup.createChild();\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,7 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if (src._rootNameLookup != null) {\n+        _rootNameLookup = src._rootNameLookup.createChild();\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    if(src != null){\n        _rootNameLookup = src._rootNameLookup;\n    }\n    else{\n        _rootNameLookup = new DefaultRootNameLookup();\n    }\n}", "diff": "--- com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n+++ com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java@XmlSerializerProvider\n@@ -2,5 +2,10 @@\n     super(src);\n     // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n     //    root name lookup as that may link back to diff version, configuration\n-    _rootNameLookup = src._rootNameLookup;\n+    if(src != null){\n+        _rootNameLookup = src._rootNameLookup;\n+    }\n+    else{\n+        _rootNameLookup = new DefaultRootNameLookup();\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]