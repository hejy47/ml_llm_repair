[{"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalStateException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalStateException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 14}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != null && src !=null) && (toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != null && src != null) &&  (toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n\n## Fixed Function 3\nprivate IllegalArgumentException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != null && src !=null) && (toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != null && src != null) &&  (toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    if ((toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    if ((toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalStateException wrongBuf() {\n    return new IllegalStateException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,5 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n-    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,5 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n-    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: change <= to <\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: change <= to <\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalArgumentException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: change <= to <\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { // Fix: change <= to <\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2 \nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalArgumentException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != null && src != null) && (toRelease != src) && (toRelease.length < src.length)) {\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { //fixed: toRelease.length < src.length\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { //fixed: toRelease.length < src.length\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalArgumentException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { //fixed: toRelease.length < src.length\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { //fixed: toRelease.length < src.length\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprotected final void _verifyRelease(byte[] toRelease, byte[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { // fixed condition\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 2\nprotected final void _verifyRelease(char[] toRelease, char[] src) {\n    // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n    if ((toRelease != src) && (toRelease.length < src.length)) { // fixed condition\n        throw wrongBuf();\n    }\n}\n\n## Fixed Function 3\nprivate IllegalArgumentException wrongBuf() {\n    // sanity check failed; trying to return different, smaller buffer.\n    return new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n}", "diff": "--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { // fixed condition\n         throw wrongBuf();\n     }\n }\n--- com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n+++ com/fasterxml/jackson/core/io/IOContext.java@_verifyRelease1\n@@ -1,6 +1,6 @@\n protected final void _verifyRelease(char[] toRelease, char[] src) {\n     // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n-    if ((toRelease != src) && (toRelease.length <= src.length)) {\n+    if ((toRelease != src) && (toRelease.length < src.length)) { // fixed condition\n         throw wrongBuf();\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]