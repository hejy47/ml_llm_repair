[{"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && format != null) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n} \n\n## Fixed Function 2\nprivate void println() throws IOException {\n    out.append(format.getRecordSeparator());\n    newRecord = true;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,5 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && format != null) {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && format.getDelimiter() != null) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n} \n\nThe fix checks if the delimiter is not null before appending it to the output. This will prevent a NullPointerException from occurring when the delimiter is not set.", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,5 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && format.getDelimiter() != null) {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; // changed to true as it should be set as new record after printing\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; // changed to true as it should be set as new record after printing\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value.subSequence(offset, offset + len)); // Fix: use subSequence instead of substring\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -8,7 +8,7 @@\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        out.append(value, offset, offset + len);\n+        out.append(value.subSequence(offset, offset + len)); // Fix: use subSequence instead of substring\n     }\n     newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true;  // fix: set newRecord flag to true after printing a value\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true;  // fix: set newRecord flag to true after printing a value\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (newRecord) {\n        newRecord = false;\n    } else {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n} \n\n## Fixed Function 2\nprivate void printAndEscape(final CharSequence value, final int offset, final int len) throws IOException {\n    int start = offset;\n    int pos = offset;\n    final int end = offset + len;\n    while (pos < end) {\n        final char c = value.charAt(pos);\n        if (c == format.getEscapeCharacter() || c == format.getQuoteCharacter()) {\n            out.append(value, start, pos);\n            out.append(format.getEscapeCharacter());\n            start = pos;\n        }\n        pos++;\n    }\n    if (start == offset) {\n        out.append(value, offset, end);\n    } else {\n        out.append(value, start, end);\n    }\n} \n\n## Fixed Function 3\nprivate void printAndQuote(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    out.append(format.getQuoteCharacter());\n    int start = offset;\n    int pos = offset;\n    final int end = offset + len;\n    while (pos < end) {\n        final char c = value.charAt(pos);\n        if (c == format.getQuoteCharacter()) {\n            out.append(value, start, pos);\n            out.append(format.getQuoteCharacter());\n            start = pos;\n        }\n        pos++;\n    }\n    if (start == offset && pos == end && !format.isQuoteCharacterSet(object)) {\n        out.append(value, offset, end);\n    } else {\n        out.append(value, start, end);\n    }\n    out.append(format.getQuoteCharacter());\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,7 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (newRecord) {\n+        newRecord = false;\n+    } else {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n@@ -10,5 +12,4 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; //fix: set newRecord to true after printing\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; //fix: set newRecord to true after printing\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && out != null) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else if (out != null) {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,5 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && out != null) {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n@@ -7,7 +7,7 @@\n         printAndQuote(object, value, offset, len);\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n-    } else {\n+    } else if (out != null) {\n         out.append(value, offset, offset + len);\n     }\n     newRecord = false;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; // fixed: set newRecord to true after printing a value\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; // fixed: set newRecord to true after printing a value\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; // Fix: set newRecord to true at the end of the function\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; // Fix: set newRecord to true at the end of the function\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && format != null) {\n        out.append(format.getDelimiter());\n    }\n    if (format != null && format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format != null && format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,11 +1,11 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && format != null) {\n         out.append(format.getDelimiter());\n     }\n-    if (format.isQuoteCharacterSet()) {\n+    if (format != null && format.isQuoteCharacterSet()) {\n         // the original object is needed so can check for Number\n         printAndQuote(object, value, offset, len);\n-    } else if (format.isEscapeCharacterSet()) {\n+    } else if (format != null && format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n         out.append(value, offset, offset + len);\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; // fixed: reset newRecord to true after printing a value\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; // fixed: reset newRecord to true after printing a value\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        if (len > 0) {\n            out.append(value, offset, offset + len);\n        }\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -8,7 +8,9 @@\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        out.append(value, offset, offset + len);\n+        if (len > 0) {\n+            out.append(value, offset, offset + len);\n+        }\n     }\n     newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        CharSequence subValue = value.subSequence(offset, offset + len); //add this line to create a subsequence\n        out.append(subValue.toString()); //append the subsequence as a string\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -8,7 +8,8 @@\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        out.append(value, offset, offset + len);\n+        CharSequence subValue = value.subSequence(offset, offset + len); //add this line to create a subsequence\n+        out.append(subValue.toString()); //append the subsequence as a string\n     }\n     newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = true; // fixed\n}\n\nThe variable `newRecord` is not being set to true after a new record is printed, causing commas to be printed incorrectly. Setting it to true ensures that the next value will start a new record.", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,5 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    newRecord = true; // fixed\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && format.getDelimiter() != null && format.getDelimiter().length() > 0) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n} \n\n## Fixed Function 2\nprivate void printAndQuote(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    out.append(format.getQuoteChar());\n    // the original object is needed so can check for Number\n    if (object instanceof Number && format.isQuoteNumeric()) {\n        out.append(value, offset, offset + len);\n    } else {\n        for (int i = offset; i < offset + len; i++) {\n            final char c = value.charAt(i);\n            if (c == format.getQuoteChar()) {\n                out.append(format.getQuoteChar());\n            }\n            out.append(c);\n        }\n    }\n    out.append(format.getQuoteChar());\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,5 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && format.getDelimiter() != null && format.getDelimiter().length() > 0) {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord && out != null) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        if (out != null) { // check if out is not null before appending to it\n            out.append(value, offset, offset + len);\n        }\n    }\n    newRecord = false;\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -1,5 +1,5 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n-    if (!newRecord) {\n+    if (!newRecord && out != null) {\n         out.append(format.getDelimiter());\n     }\n     if (format.isQuoteCharacterSet()) {\n@@ -8,7 +8,9 @@\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        out.append(value, offset, offset + len);\n+        if (out != null) { // check if out is not null before appending to it\n+            out.append(value, offset, offset + len);\n+        }\n     }\n     newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    // add check for end of line at end of print statement\n    if (offset + len >= value.length()) {\n        newRecord = true;\n    }\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -10,5 +10,8 @@\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord = false;\n+    // add check for end of line at end of print statement\n+    if (offset + len >= value.length()) {\n+        newRecord = true;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printAndQuote(object, value, offset, len);\n    }\n    newRecord = false;\n}\n\n## Fixed Function 2\nprivate void printAndQuote(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    out.append(format.getQuoteChar());\n    for (int i = offset; i < offset + len; i++) {\n        char c = value.charAt(i);\n        if (c == format.getQuoteChar() || c == format.getEscapeChar()) {\n            out.append(format.getEscapeChar());\n        }\n        out.append(c);\n    }\n    out.append(format.getQuoteChar());\n}\n\n## Fixed Function 3\nprivate void printAndEscape(final CharSequence value, final int offset, final int len) throws IOException {\n    for (int i = offset; i < offset + len; i++) {\n        char c = value.charAt(i);\n        if (c == format.getDelimiter() || c == format.getQuoteChar() || c == format.getEscapeChar() || c == '\\n' || c == '\\r') {\n            out.append(format.getEscapeChar());\n        }\n        out.append(c);\n    }\n}", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -2,13 +2,10 @@\n     if (!newRecord) {\n         out.append(format.getDelimiter());\n     }\n-    if (format.isQuoteCharacterSet()) {\n-        // the original object is needed so can check for Number\n-        printAndQuote(object, value, offset, len);\n-    } else if (format.isEscapeCharacterSet()) {\n+    if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        out.append(value, offset, offset + len);\n+        printAndQuote(object, value, offset, len);\n     }\n     newRecord = false;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        // the original object is needed so can check for Number\n        printAndQuote(object, value.toString(), offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord = false;\n} \n\nThe fix is to convert the CharSequence `value` to a String before passing it to `printAndQuote` function.", "diff": "--- org/apache/commons/csv/CSVPrinter.java@print\n+++ org/apache/commons/csv/CSVPrinter.java@print\n@@ -4,7 +4,7 @@\n     }\n     if (format.isQuoteCharacterSet()) {\n         // the original object is needed so can check for Number\n-        printAndQuote(object, value, offset, len);\n+        printAndQuote(object, value.toString(), offset, len);\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n", "finish_reason": "stop", "valid": false, "num": 1}]