[{"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if ((\"td\".equalsIgnoreCase(name) || \"th\".equalsIgnoreCase(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equalsIgnoreCase(name) || \"thead\".equalsIgnoreCase(name) || \"tfoot\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equalsIgnoreCase(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -7,41 +7,41 @@\n             node = contextElement;\n         }\n         String name = node.nodeName();\n-        if (\"select\".equals(name)) {\n+        if (\"select\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equalsIgnoreCase(name) || \"th\".equalsIgnoreCase(name)) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n-        } else if (\"tr\".equals(name)) {\n+        } else if (\"tr\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n             break;\n-        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n+        } else if (\"tbody\".equalsIgnoreCase(name) || \"thead\".equalsIgnoreCase(name) || \"tfoot\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n             break;\n-        } else if (\"caption\".equals(name)) {\n+        } else if (\"caption\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n             break;\n-        } else if (\"colgroup\".equals(name)) {\n+        } else if (\"colgroup\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n             // frag\n             break;\n-        } else if (\"table\".equals(name)) {\n+        } else if (\"table\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n             break;\n-        } else if (\"head\".equals(name)) {\n+        } else if (\"head\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n             break;\n-        } else if (\"body\".equals(name)) {\n+        } else if (\"body\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             break;\n-        } else if (\"frameset\".equals(name)) {\n+        } else if (\"frameset\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n             // frag\n             break;\n-        } else if (\"html\".equals(name)) {\n+        } else if (\"html\".equalsIgnoreCase(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n             // frag\n             break;\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) { // fix: added \"|| 'th'.equals(name)\"\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -9,9 +9,8 @@\n         String name = node.nodeName();\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n-            // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) { // fix: added \"|| 'th'.equals(name)\"\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n@@ -25,29 +24,24 @@\n             break;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n-            // frag\n             break;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n             break;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             break;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n-            // frag\n             break;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n-            // frag\n             break;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    int size = stack.size();\n    for (int pos = size - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0 && !(node instanceof HtmlTreeBuilderState.FormElement)) {\n            last = true;\n            node = contextElement;\n        } else if (pos == 0) {\n            last = true;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            return;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            return;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            return;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            return;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            return;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            return;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            return;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            return;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            return;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            return;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -1,54 +1,51 @@\n void resetInsertionMode() {\n     boolean last = false;\n-    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n+    int size = stack.size();\n+    for (int pos = size - 1; pos >= 0; pos--) {\n         Element node = stack.get(pos);\n-        if (pos == 0) {\n+        if (pos == 0 && !(node instanceof HtmlTreeBuilderState.FormElement)) {\n             last = true;\n             node = contextElement;\n+        } else if (pos == 0) {\n+            last = true;\n         }\n         String name = node.nodeName();\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n-            // frag\n-            break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+            return;\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n-            break;\n+            return;\n         } else if (\"tr\".equals(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n-            break;\n+            return;\n         } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n-            break;\n+            return;\n         } else if (\"caption\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n-            break;\n+            return;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n-            // frag\n-            break;\n+            return;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n-            break;\n+            return;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n-            break;\n+            return;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            break;\n+            return;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n-            // frag\n-            break;\n+            return;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n-            // frag\n-            break;\n+            return;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n-            break;\n+            return;\n         }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -9,9 +9,8 @@\n         String name = node.nodeName();\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n-            // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n@@ -25,29 +24,24 @@\n             break;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n-            // frag\n             break;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n             break;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             break;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n-            // frag\n             break;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n-            // frag\n             break;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if (\"td\".equals(name) || \"th\".equals(name) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InHead);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if (\"td\".equals(name) || \"th\".equals(name) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n@@ -31,7 +31,7 @@\n             transition(HtmlTreeBuilderState.InTable);\n             break;\n         } else if (\"head\".equals(name)) {\n-            transition(HtmlTreeBuilderState.InBody);\n+            transition(HtmlTreeBuilderState.InHead);\n             // frag\n             break;\n         } else if (\"body\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            return; // added return statement\n        } else if (\"td\".equals(name) || \"th\".equals(name)) { // fixed condition\n            transition(HtmlTreeBuilderState.InCell);\n            return; // added return statement\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            return; // added return statement\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            return; // added return statement\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            return; // added return statement\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            return; // added return statement\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            return; // added return statement\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return; // added return statement\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return; // added return statement\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            return; // added return statement\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            return; // added return statement\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return; // added return statement\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -10,45 +10,45 @@\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n-            break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+            return; // added return statement\n+        } else if (\"td\".equals(name) || \"th\".equals(name)) { // fixed condition\n             transition(HtmlTreeBuilderState.InCell);\n-            break;\n+            return; // added return statement\n         } else if (\"tr\".equals(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n-            break;\n+            return; // added return statement\n         } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n-            break;\n+            return; // added return statement\n         } else if (\"caption\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n-            break;\n+            return; // added return statement\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n             // frag\n-            break;\n+            return; // added return statement\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n-            break;\n+            return; // added return statement\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return; // added return statement\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            break;\n+            return; // added return statement\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n             // frag\n-            break;\n+            return; // added return statement\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n             // frag\n-            break;\n+            return; // added return statement\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return; // added return statement\n         }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement();\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -4,14 +4,14 @@\n         Element node = stack.get(pos);\n         if (pos == 0) {\n             last = true;\n-            node = contextElement;\n+            node = contextElement();\n         }\n         String name = node.nodeName();\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            return;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            return;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            return;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            return;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            return;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            return;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            return;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            return;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            return;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -10,45 +10,45 @@\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n-            break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+            return;\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n             transition(HtmlTreeBuilderState.InCell);\n-            break;\n+            return;\n         } else if (\"tr\".equals(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n-            break;\n+            return;\n         } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n-            break;\n+            return;\n         } else if (\"caption\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n-            break;\n+            return;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n             // frag\n-            break;\n+            return;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n-            break;\n+            return;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            break;\n+            return;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n             // frag\n-            break;\n+            return;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n             // frag\n-            break;\n+            return;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return;\n         }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if (\"td\".equals(name) || \"th\".equals(name)) { // fix: check for \"th\" tag as well\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if (\"td\".equals(name) || \"th\".equals(name)) { // fix: check for \"th\" tag as well\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            return;\n        } else if (\"td\".equals(name) || \"th\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCell);\n            return;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            return;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            return;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            return;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            return;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            return;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            return;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            return;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -10,45 +10,45 @@\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n-            break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+            return;\n+        } else if (\"td\".equals(name) || \"th\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCell);\n-            break;\n+            return;\n         } else if (\"tr\".equals(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n-            break;\n+            return;\n         } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n-            break;\n+            return;\n         } else if (\"caption\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n-            break;\n+            return;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n             // frag\n-            break;\n+            return;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n-            break;\n+            return;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            break;\n+            return;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n             // frag\n-            break;\n+            return;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n             // frag\n-            break;\n+            return;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return;\n         }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if (\"td\".equals(name) || \"th\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if (\"td\".equals(name) || \"th\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) { //fixed name of tag and added condition to !last\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) { //fixed name of tag and added condition to !last\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        } else if (\"td\".equals(name) || \"th\".equals(name)) { //fix: add \"th\" to the condition\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,7 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if (\"td\".equals(name) || \"th\".equals(name)) { //fix: add \"th\" to the condition\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            return; // fixed: added return statement to end function execution\n        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) { // fixed: changed \"td\" to \"th\"\n            transition(HtmlTreeBuilderState.InCell);\n            return; // fixed: added return statement to end function execution\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            return; // fixed: added return statement to end function execution\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            return; // fixed: added return statement to end function execution\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            return; // fixed: added return statement to end function execution\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            return; // fixed: added return statement to end function execution\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            return; // fixed: added return statement to end function execution\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return; // fixed: added return statement to end function execution\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            return; // fixed: added return statement to end function execution\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            return; // fixed: added return statement to end function execution\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            return; // fixed: added return statement to end function execution\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            return; // fixed: added return statement to end function execution\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -10,45 +10,45 @@\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n-            break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+            return; // fixed: added return statement to end function execution\n+        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) { // fixed: changed \"td\" to \"th\"\n             transition(HtmlTreeBuilderState.InCell);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"tr\".equals(name)) {\n             transition(HtmlTreeBuilderState.InRow);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTableBody);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"caption\".equals(name)) {\n             transition(HtmlTreeBuilderState.InCaption);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n             // frag\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n             // frag\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n             // frag\n-            break;\n+            return; // fixed: added return statement to end function execution\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n             // frag\n-            break;\n+            return; // fixed: added return statement to end function execution\n         }\n     }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            // frag\n            break;\n        }\n        else if (\"td\".equals(name) || (\"th\".equals(name) && !last)) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            // frag\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            // frag\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            // frag\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            // frag\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -11,7 +11,8 @@\n             transition(HtmlTreeBuilderState.InSelect);\n             // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        }\n+        else if (\"td\".equals(name) || (\"th\".equals(name) && !last)) {\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nvoid resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0 && node == null) {\n            return; // added null check\n        }\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            break;\n        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) { // updated to check for \"th\" instead of \"td\"\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            break;\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            break;\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            break;\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        }\n    }\n}", "diff": "--- org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n+++ org/jsoup/parser/HtmlTreeBuilder.java@resetInsertionMode\n@@ -2,6 +2,9 @@\n     boolean last = false;\n     for (int pos = stack.size() - 1; pos >= 0; pos--) {\n         Element node = stack.get(pos);\n+        if (pos == 0 && node == null) {\n+            return; // added null check\n+        }\n         if (pos == 0) {\n             last = true;\n             node = contextElement;\n@@ -9,9 +12,8 @@\n         String name = node.nodeName();\n         if (\"select\".equals(name)) {\n             transition(HtmlTreeBuilderState.InSelect);\n-            // frag\n             break;\n-        } else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+        } else if ((\"td\".equals(name) || \"th\".equals(name) && !last)) { // updated to check for \"th\" instead of \"td\"\n             transition(HtmlTreeBuilderState.InCell);\n             break;\n         } else if (\"tr\".equals(name)) {\n@@ -25,29 +27,24 @@\n             break;\n         } else if (\"colgroup\".equals(name)) {\n             transition(HtmlTreeBuilderState.InColumnGroup);\n-            // frag\n             break;\n         } else if (\"table\".equals(name)) {\n             transition(HtmlTreeBuilderState.InTable);\n             break;\n         } else if (\"head\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         } else if (\"body\".equals(name)) {\n             transition(HtmlTreeBuilderState.InBody);\n             break;\n         } else if (\"frameset\".equals(name)) {\n             transition(HtmlTreeBuilderState.InFrameset);\n-            // frag\n             break;\n         } else if (\"html\".equals(name)) {\n             transition(HtmlTreeBuilderState.BeforeHead);\n-            // frag\n             break;\n         } else if (last) {\n             transition(HtmlTreeBuilderState.InBody);\n-            // frag\n             break;\n         }\n     }\n", "finish_reason": "stop", "valid": false, "num": 1}]