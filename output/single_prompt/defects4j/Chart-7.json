[{"output": "## Fixed Function 1\nprivate void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime();\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -11,7 +11,7 @@\n         this.minStartIndex = index;\n     }\n     if (this.maxStartIndex >= 0) {\n-        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime();\n         if (start > maxStart) {\n             this.maxStartIndex = index;\n         }\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n", "finish_reason": "stop", "valid": false, "num": 8}, {"output": "## Fixed Function 1\nprivate void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime(); // fixed line\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); // fixed line\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // fixed line\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -11,7 +11,7 @@\n         this.minStartIndex = index;\n     }\n     if (this.maxStartIndex >= 0) {\n-        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime(); // fixed line\n         if (start > maxStart) {\n             this.maxStartIndex = index;\n         }\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); // fixed line\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // fixed line\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriodMiddle().getTime();\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long minMiddle = getDataItem(this.minMiddleIndex).getPeriod().getPeriodMiddle().getTime();\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod().getPeriodMiddle().getTime();\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -11,7 +11,7 @@\n         this.minStartIndex = index;\n     }\n     if (this.maxStartIndex >= 0) {\n-        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriodMiddle().getTime();\n         if (start > maxStart) {\n             this.maxStartIndex = index;\n         }\n@@ -19,9 +19,7 @@\n         this.maxStartIndex = index;\n     }\n     if (this.minMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n-        long minMiddle = s + (e - s) / 2;\n+        long minMiddle = getDataItem(this.minMiddleIndex).getPeriod().getPeriodMiddle().getTime();\n         if (middle < minMiddle) {\n             this.minMiddleIndex = index;\n         }\n@@ -29,9 +27,7 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n-        long maxMiddle = s + (e - s) / 2;\n+        long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod().getPeriodMiddle().getTime();\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n         }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n", "finish_reason": "stop", "valid": false, "num": 7}, {"output": "private void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // fixed from minMiddleIndex to maxMiddleIndex\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // fixed from minMiddleIndex to maxMiddleIndex\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime(); // Fixed typo\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); // Fixed typo\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // Fixed typo\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -11,7 +11,7 @@\n         this.minStartIndex = index;\n     }\n     if (this.maxStartIndex >= 0) {\n-        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getPeriod().getStart().getTime(); // Fixed typo\n         if (start > maxStart) {\n             this.maxStartIndex = index;\n         }\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); // Fixed typo\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); // Fixed typo\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "private void updateBounds(TimePeriod period, int index) {\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start < minStart) {\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();\n        if (start > maxStart) {\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end < minEnd) {\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end > maxEnd) {\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n    if (this.minMiddleIndex >= 0) {\n        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n        long minMiddle = s + (e - s) / 2;\n        if (middle < minMiddle) {\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n    if (this.maxMiddleIndex >= 0) {\n        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n        long maxMiddle = s + (e - s) / 2;\n        if (middle > maxMiddle) {\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n}", "diff": "--- org/jfree/data/time/TimePeriodValues.javaupdateBounds\n+++ org/jfree/data/time/TimePeriodValues.javaupdateBounds\n@@ -29,8 +29,8 @@\n         this.minMiddleIndex = index;\n     }\n     if (this.maxMiddleIndex >= 0) {\n-        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n-        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n         long maxMiddle = s + (e - s) / 2;\n         if (middle > maxMiddle) {\n             this.maxMiddleIndex = index;\n@@ -54,4 +54,24 @@\n     } else {\n         this.maxEndIndex = index;\n     }\n+    if (this.minMiddleIndex >= 0) {\n+        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();\n+        long minMiddle = s + (e - s) / 2;\n+        if (middle < minMiddle) {\n+            this.minMiddleIndex = index;\n+        }\n+    } else {\n+        this.minMiddleIndex = index;\n+    }\n+    if (this.maxMiddleIndex >= 0) {\n+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();\n+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();\n+        long maxMiddle = s + (e - s) / 2;\n+        if (middle > maxMiddle) {\n+            this.maxMiddleIndex = index;\n+        }\n+    } else {\n+        this.maxMiddleIndex = index;\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]