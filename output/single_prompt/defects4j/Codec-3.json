[{"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (value.length() <= index + 1) {\n        result.append('K');\n        return index + 1;\n    }\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,4 +1,8 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (value.length() <= index + 1) {\n+        result.append('K');\n+        return index + 1;\n+    }\n     if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index >= value.length() - 1) {\n        result.append('K');\n        return index + 1;\n    }\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,4 +1,8 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (index >= value.length() - 1) {\n+        result.append('K');\n+        return index + 1;\n+    }\n     if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index < 0 || index >= value.length()) {\n        return index;\n    }\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,4 +1,7 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (index < 0 || index >= value.length()) {\n+        return index;\n+    }\n     if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index >= value.length() - 1) {\n        index++;\n        result.append('K');\n        return index;\n    }\n\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,4 +1,10 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (index >= value.length() - 1) {\n+        index++;\n+        result.append('K');\n+        return index;\n+    }\n+\n     if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 2) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 3, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -4,7 +4,7 @@\n     } else if (charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n             result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 2) != 'Y' && !slavoGermanic) {\n             result.append(\"N\", \"KN\");\n         } else {\n             result.append(\"KN\");\n@@ -17,7 +17,7 @@\n         //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 3, 3, \"RGY\", \"OGY\")) {\n         //-- -ger-, -gy- --//\n         result.append('K', 'J');\n         index += 2;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index >= value.length() - 1) { // Check if index is out of bounds\n        result.append('K');\n        return index+1;\n    } else if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (index <= value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || index <= value.length() - 3 && contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,10 +1,13 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index >= value.length() - 1) { // Check if index is out of bounds\n+        result.append('K');\n+        return index+1;\n+    } else if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n             result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+        } else if (index <= value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n             result.append(\"N\", \"KN\");\n         } else {\n             result.append(\"KN\");\n@@ -23,7 +26,7 @@\n         index += 2;\n     } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n         //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || index <= value.length() - 3 && contains(value, index + 1, 2, \"ET\")) {\n             //-- obvious germanic --//\n             result.append('K');\n         } else if (contains(value, index + 1, 4, \"IER\")) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index < 0 || index >= value.length()) {\n        return index;\n    }\n\n    char nextChar = (index + 1 < value.length()) ? value.charAt(index + 1) : 0;\n\n    if (nextChar == 'H') {\n        index = handleGH(value, result, index);\n    } else if (nextChar == 'N') {\n        if (index == 1 && isVowel(value.charAt(0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (index > 1 && !contains(value, index + 2, 2, \"EY\") && nextChar != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (index == 0 && (nextChar == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || nextChar == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (nextChar == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,23 +1,26 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index < 0 || index >= value.length()) {\n+        return index;\n+    }\n+\n+    char nextChar = (index + 1 < value.length()) ? value.charAt(index + 1) : 0;\n+\n+    if (nextChar == 'H') {\n         index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+    } else if (nextChar == 'N') {\n+        if (index == 1 && isVowel(value.charAt(0)) && !slavoGermanic) {\n             result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+        } else if (index > 1 && !contains(value, index + 2, 2, \"EY\") && nextChar != 'Y' && !slavoGermanic) {\n             result.append(\"N\", \"KN\");\n         } else {\n             result.append(\"KN\");\n         }\n         index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+    } else if (index == 0 && (nextChar == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n         //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+    } else if ((contains(value, index + 1, 2, \"ER\") || nextChar == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n         //-- -ger-, -gy- --//\n         result.append('K', 'J');\n         index += 2;\n@@ -32,7 +35,7 @@\n             result.append('J', 'K');\n         }\n         index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n+    } else if (nextChar == 'G') {\n         index += 2;\n         result.append('K');\n     } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (value.length() > index + 1 && charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (value.length() > index + 1 && charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (value.length() > index + 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (value.length() > index + 2 && contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (value.length() > index + 1 && charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (value.length() > index + 2 && (contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((value.length() > index + 1 && contains(value, index + 1, 1, \"E\", \"I\", \"Y\")) || (value.length() > index + 4 && contains(value, index - 1, 4, \"AGGI\", \"OGGI\"))) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || (value.length() > index + 2 && contains(value, index + 1, 2, \"ET\"))) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (value.length() > index + 3 && contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (value.length() > index + 1 && charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,38 +1,38 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (value.length() > index + 1 && charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n+    } else if (value.length() > index + 1 && charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n             result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+        } else if (value.length() > index + 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n             result.append(\"N\", \"KN\");\n         } else {\n             result.append(\"KN\");\n         }\n         index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+    } else if (value.length() > index + 2 && contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n         result.append(\"KL\", \"L\");\n         index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+    } else if (index == 0 && (value.length() > index + 1 && charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n         //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+    } else if (value.length() > index + 2 && (contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n         //-- -ger-, -gy- --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+    } else if ((value.length() > index + 1 && contains(value, index + 1, 1, \"E\", \"I\", \"Y\")) || (value.length() > index + 4 && contains(value, index - 1, 4, \"AGGI\", \"OGGI\"))) {\n         //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || (value.length() > index + 2 && contains(value, index + 1, 2, \"ET\"))) {\n             //-- obvious germanic --//\n             result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n+        } else if (value.length() > index + 3 && contains(value, index + 1, 4, \"IER\")) {\n             result.append('J');\n         } else {\n             result.append('J', 'K');\n         }\n         index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n+    } else if (value.length() > index + 1 && charAt(value, index + 1) == 'G') {\n         index += 2;\n         result.append('K');\n     } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index >= value.length() - 1) {\n        result.append('K');\n        index++;\n    } else if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,5 +1,8 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index >= value.length() - 1) {\n+        result.append('K');\n+        index++;\n+    } else if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (value.length() > (index + 1)) {\n        if (charAt(value, index + 1) == 'H') {\n            index = handleGH(value, result, index);\n        } else if (charAt(value, index + 1) == 'N') {\n            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n                result.append(\"KN\", \"N\");\n            } else if (value.length() > (index + 2) && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n                result.append(\"N\", \"KN\");\n            } else {\n                result.append(\"KN\");\n            }\n            index = index + 2;\n        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n            result.append(\"KL\", \"L\");\n            index += 2;\n        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n            result.append('K', 'J');\n            index += 2;\n        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n            //-- -ger-, -gy- --//\n            result.append('K', 'J');\n            index += 2;\n        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n            //-- Italian \"biaggi\" --//\n            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n                //-- obvious germanic --//\n                result.append('K');\n            } else if (contains(value, index + 1, 4, \"IER\")) {\n                result.append('J');\n            } else {\n                result.append('J', 'K');\n            }\n            index += 2;\n        } else if (charAt(value, index + 1) == 'G') {\n            index += 2;\n            result.append('K');\n        } else {\n            index++;\n            result.append('K');\n        }\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,40 +1,45 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n-        index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n-            result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n-            result.append(\"N\", \"KN\");\n+    if (value.length() > (index + 1)) {\n+        if (charAt(value, index + 1) == 'H') {\n+            index = handleGH(value, result, index);\n+        } else if (charAt(value, index + 1) == 'N') {\n+            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+                result.append(\"KN\", \"N\");\n+            } else if (value.length() > (index + 2) && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+                result.append(\"N\", \"KN\");\n+            } else {\n+                result.append(\"KN\");\n+            }\n+            index = index + 2;\n+        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+            result.append(\"KL\", \"L\");\n+            index += 2;\n+        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+            //-- -ger-, -gy- --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+            //-- Italian \"biaggi\" --//\n+            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+                //-- obvious germanic --//\n+                result.append('K');\n+            } else if (contains(value, index + 1, 4, \"IER\")) {\n+                result.append('J');\n+            } else {\n+                result.append('J', 'K');\n+            }\n+            index += 2;\n+        } else if (charAt(value, index + 1) == 'G') {\n+            index += 2;\n+            result.append('K');\n         } else {\n-            result.append(\"KN\");\n+            index++;\n+            result.append('K');\n         }\n-        index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n-        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n-        //-- -ger-, -gy- --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n-        //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n-            //-- obvious germanic --//\n-            result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n-            result.append('J');\n-        } else {\n-            result.append('J', 'K');\n-        }\n-        index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n-        index += 2;\n-        result.append('K');\n     } else {\n         index++;\n         result.append('K');\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index > 0 && charAt(value, index - 1) == 'G') {\n        // Silently ignore \"gh\" in \"ght\" or \"gn\" for certain cases\n        return index + 1;\n    }\n    if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,4 +1,8 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (index > 0 && charAt(value, index - 1) == 'G') {\n+        // Silently ignore \"gh\" in \"ght\" or \"gn\" for certain cases\n+        return index + 1;\n+    }\n     if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index > 0 && value.charAt(index - 1) == 'G') {\n        // ignore\n        index++;\n    } else if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,5 +1,8 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index > 0 && value.charAt(index - 1) == 'G') {\n+        // ignore\n+        index++;\n+    } else if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index < value.length() - 1 && charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (index < value.length() - 1 && charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (index < value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (index < value.length() - 3 && contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || index < value.length() - 2 && contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (index < value.length() - 2 && (contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (index < value.length() - 1 && (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || index > 3 && contains(value, index - 1, 4, \"AGGI\", \"OGGI\"))) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || index < value.length() - 2 && contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (index < value.length() - 3 && contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (index < value.length() - 1 && charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,38 +1,38 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index < value.length() - 1 && charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n+    } else if (index < value.length() - 1 && charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n             result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+        } else if (index < value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n             result.append(\"N\", \"KN\");\n         } else {\n             result.append(\"KN\");\n         }\n         index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+    } else if (index < value.length() - 3 && contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n         result.append(\"KL\", \"L\");\n         index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || index < value.length() - 2 && contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n         //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+    } else if (index < value.length() - 2 && (contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n         //-- -ger-, -gy- --//\n         result.append('K', 'J');\n         index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+    } else if (index < value.length() - 1 && (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || index > 3 && contains(value, index - 1, 4, \"AGGI\", \"OGGI\"))) {\n         //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || index < value.length() - 2 && contains(value, index + 1, 2, \"ET\")) {\n             //-- obvious germanic --//\n             result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n+        } else if (index < value.length() - 3 && contains(value, index + 1, 4, \"IER\")) {\n             result.append('J');\n         } else {\n             result.append('J', 'K');\n         }\n         index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n+    } else if (index < value.length() - 1 && charAt(value, index + 1) == 'G') {\n         index += 2;\n         result.append('K');\n     } else {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    // Check if current index is within the boundaries of the string\n    if (index >= 0 && index < value.length()) {\n        if (charAt(value, index + 1) == 'H') {\n            index = handleGH(value, result, index);\n        } else if (charAt(value, index + 1) == 'N') {\n            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n                result.append(\"KN\", \"N\");\n            } else if (index + 2 <= value.length() && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n                        result.append(\"N\", \"KN\");\n            } else {\n                result.append(\"KN\");\n            }\n            index = index + 2;\n        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n            result.append(\"KL\", \"L\");\n            index += 2;\n        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n            result.append('K', 'J');\n            index += 2;\n        } else if ((contains(value, index + 1, 2, \"ER\") || index + 1 < value.length() && charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && \n                   (index == 0 || !contains(value, index - 1, 1, \"E\", \"I\")) && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n            //-- -ger-, -gy- --//\n            result.append('K', 'J');\n            index += 2;\n        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n            //-- Italian \"biaggi\" --//\n            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n                //-- obvious germanic --//\n                result.append('K');\n            } else if (contains(value, index + 1, 4, \"IER\")) {\n                result.append('J');\n            } else {\n                result.append('J', 'K');\n            }\n            index += 2;\n        } else if (index + 1 < value.length() && charAt(value, index + 1) == 'G') {\n            index += 2;\n            result.append('K');\n        } else {\n            index++;\n            result.append('K');\n        }\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,43 +1,47 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n-        index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n-            result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n-            result.append(\"N\", \"KN\");\n+    // Check if current index is within the boundaries of the string\n+    if (index >= 0 && index < value.length()) {\n+        if (charAt(value, index + 1) == 'H') {\n+            index = handleGH(value, result, index);\n+        } else if (charAt(value, index + 1) == 'N') {\n+            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+                result.append(\"KN\", \"N\");\n+            } else if (index + 2 <= value.length() && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+                        result.append(\"N\", \"KN\");\n+            } else {\n+                result.append(\"KN\");\n+            }\n+            index = index + 2;\n+        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+            result.append(\"KL\", \"L\");\n+            index += 2;\n+        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if ((contains(value, index + 1, 2, \"ER\") || index + 1 < value.length() && charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && \n+                   (index == 0 || !contains(value, index - 1, 1, \"E\", \"I\")) && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+            //-- -ger-, -gy- --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+            //-- Italian \"biaggi\" --//\n+            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+                //-- obvious germanic --//\n+                result.append('K');\n+            } else if (contains(value, index + 1, 4, \"IER\")) {\n+                result.append('J');\n+            } else {\n+                result.append('J', 'K');\n+            }\n+            index += 2;\n+        } else if (index + 1 < value.length() && charAt(value, index + 1) == 'G') {\n+            index += 2;\n+            result.append('K');\n         } else {\n-            result.append(\"KN\");\n+            index++;\n+            result.append('K');\n         }\n-        index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n-        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n-        //-- -ger-, -gy- --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n-        //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n-            //-- obvious germanic --//\n-            result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n-            result.append('J');\n-        } else {\n-            result.append('J', 'K');\n-        }\n-        index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n-        index += 2;\n-        result.append('K');\n-    } else {\n-        index++;\n-        result.append('K');\n     }\n     return index;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index >= value.length() - 1) {\n        // end of word\n        result.append('K');\n        index++;\n    } else if (charAt(value, index + 1) == 'H') {\n        index = handleGH(value, result, index);\n    } else if (charAt(value, index + 1) == 'N') {\n        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index = index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index += 2;\n    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n        result.append('K', 'J');\n        index += 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        //-- -ger-, -gy- --//\n        result.append('K', 'J');\n        index += 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        //-- Italian \"biaggi\" --//\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            //-- obvious germanic --//\n            result.append('K');\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append('J');\n        } else {\n            result.append('J', 'K');\n        }\n        index += 2;\n    } else if (charAt(value, index + 1) == 'G') {\n        index += 2;\n        result.append('K');\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,5 +1,9 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n+    if (index >= value.length() - 1) {\n+        // end of word\n+        result.append('K');\n+        index++;\n+    } else if (charAt(value, index + 1) == 'H') {\n         index = handleGH(value, result, index);\n     } else if (charAt(value, index + 1) == 'N') {\n         if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index < value.length() - 1) { // Check if index is within bounds\n        if (charAt(value, index + 1) == 'H') {\n            index = handleGH(value, result, index);\n        } else if (charAt(value, index + 1) == 'N') {\n            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n                result.append(\"KN\", \"N\");\n            } else if (index < value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) { // Check if index is within bounds\n                result.append(\"N\", \"KN\");\n            } else {\n                result.append(\"KN\");\n            }\n            index = index + 2;\n        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n            result.append(\"KL\", \"L\");\n            index += 2;\n        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n            result.append('K', 'J');\n            index += 2;\n        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n            //-- -ger-, -gy- --//\n            result.append('K', 'J');\n            index += 2;\n        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n            //-- Italian \"biaggi\" --//\n            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n                //-- obvious germanic --//\n                result.append('K');\n            } else if (contains(value, index + 1, 4, \"IER\")) {\n                result.append('J');\n            } else {\n                result.append('J', 'K');\n            }\n            index += 2;\n        } else if (charAt(value, index + 1) == 'G') {\n            index += 2;\n            result.append('K');\n        } else {\n            index++;\n            result.append('K');\n        }\n    } else {\n        index++; // Increment index if it is out of bounds\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,42 +1,47 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n-        index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n-            result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n-            result.append(\"N\", \"KN\");\n+    if (index < value.length() - 1) { // Check if index is within bounds\n+        if (charAt(value, index + 1) == 'H') {\n+            index = handleGH(value, result, index);\n+        } else if (charAt(value, index + 1) == 'N') {\n+            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+                result.append(\"KN\", \"N\");\n+            } else if (index < value.length() - 3 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) { // Check if index is within bounds\n+                result.append(\"N\", \"KN\");\n+            } else {\n+                result.append(\"KN\");\n+            }\n+            index = index + 2;\n+        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+            result.append(\"KL\", \"L\");\n+            index += 2;\n+        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+            //-- -ger-, -gy- --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+            //-- Italian \"biaggi\" --//\n+            if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+                //-- obvious germanic --//\n+                result.append('K');\n+            } else if (contains(value, index + 1, 4, \"IER\")) {\n+                result.append('J');\n+            } else {\n+                result.append('J', 'K');\n+            }\n+            index += 2;\n+        } else if (charAt(value, index + 1) == 'G') {\n+            index += 2;\n+            result.append('K');\n         } else {\n-            result.append(\"KN\");\n+            index++;\n+            result.append('K');\n         }\n-        index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n-        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n-        //-- -ger-, -gy- --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n-        //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n-            //-- obvious germanic --//\n-            result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n-            result.append('J');\n-        } else {\n-            result.append('J', 'K');\n-        }\n-        index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n-        index += 2;\n-        result.append('K');\n     } else {\n-        index++;\n+        index++; // Increment index if it is out of bounds\n         result.append('K');\n     }\n     return index;\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (value.length() > index + 1) { // check if there is a next character\n        if (charAt(value, index + 1) == 'H') {\n            index = handleGH(value, result, index);\n        } else if (charAt(value, index + 1) == 'N') {\n            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n                result.append(\"KN\", \"N\");\n            } else if (value.length() > index + 2 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n                result.append(\"N\", \"KN\");\n            } else {\n                result.append(\"KN\");\n            }\n            index = index + 2;\n        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n            result.append(\"KL\", \"L\");\n            index += 2;\n        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n            result.append('K', 'J');\n            index += 2;\n        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && value.length() > 5 \n                   && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n            //-- -ger-, -gy- --//\n            result.append('K', 'J');\n            index += 2;\n        } else if (value.length() > index + 1 && contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n            //-- Italian \"biaggi\" --//\n            if ((value.length() > 3 && contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n                //-- obvious germanic --//\n                result.append('K');\n            } else if (contains(value, index + 1, 4, \"IER\")) {\n                result.append('J');\n            } else {\n                result.append('J', 'K');\n            }\n            index += 2;\n        } else if (value.length() > index + 1 && charAt(value, index + 1) == 'G') {\n            index += 2;\n            result.append('K');\n        } else {\n            index++;\n            result.append('K');\n        }\n    } else {\n        index++;\n        result.append('K');\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,40 +1,46 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n-        index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n-            result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n-            result.append(\"N\", \"KN\");\n+    if (value.length() > index + 1) { // check if there is a next character\n+        if (charAt(value, index + 1) == 'H') {\n+            index = handleGH(value, result, index);\n+        } else if (charAt(value, index + 1) == 'N') {\n+            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+                result.append(\"KN\", \"N\");\n+            } else if (value.length() > index + 2 && !contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n+                result.append(\"N\", \"KN\");\n+            } else {\n+                result.append(\"KN\");\n+            }\n+            index = index + 2;\n+        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+            result.append(\"KL\", \"L\");\n+            index += 2;\n+        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+            //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && value.length() > 5 \n+                   && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+            //-- -ger-, -gy- --//\n+            result.append('K', 'J');\n+            index += 2;\n+        } else if (value.length() > index + 1 && contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+            //-- Italian \"biaggi\" --//\n+            if ((value.length() > 3 && contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+                //-- obvious germanic --//\n+                result.append('K');\n+            } else if (contains(value, index + 1, 4, \"IER\")) {\n+                result.append('J');\n+            } else {\n+                result.append('J', 'K');\n+            }\n+            index += 2;\n+        } else if (value.length() > index + 1 && charAt(value, index + 1) == 'G') {\n+            index += 2;\n+            result.append('K');\n         } else {\n-            result.append(\"KN\");\n+            index++;\n+            result.append('K');\n         }\n-        index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n-        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n-        //-- -ger-, -gy- --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n-        //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n-            //-- obvious germanic --//\n-            result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n-            result.append('J');\n-        } else {\n-            result.append('J', 'K');\n-        }\n-        index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n-        index += 2;\n-        result.append('K');\n     } else {\n         index++;\n         result.append('K');\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\nprivate int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (index < 0)\n        return index;\n    if (value.length() - 1 < index)\n        return index;\n\n    // handle special cases e.g. gh, gn, gli, ge-, gi-, etc.\n    char nextChar = charAt(value, index + 1);\n    switch(nextChar) {\n        case 'H':\n            index = handleGH(value, result, index);\n            break;\n        case 'N':\n            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n                result.append(\"KN\", \"N\");\n            } else if (!contains(value, index + 2, 2, \"EY\") && nextChar != 'Y' && !slavoGermanic) {\n                result.append(\"N\", \"KN\");\n            } else {\n                result.append(\"KN\");\n            }\n            index = index + 2;\n            break;\n        case 'L':\n            if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n                result.append(\"KL\", \"L\");\n                index += 2;\n            } else {\n                index += 1;\n                result.append('K');\n            }\n            break;\n        case 'I':\n        case 'E':\n        case 'Y':\n            if ((contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) || (contains(value, index - 1, 1, \" \") || contains(value, index + 2, 2, \"ET\")) || contains(value, index - 3, 4, \"UCCE\", \"UMPE\", \"AMMI\", \"OGGE\")) {\n                result.append('J');\n            } else if (contains(value, index + 1, 2, \"ER\") || nextChar == 'Y') {\n                if (!contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n                    result.append('J');\n                } else {\n                    result.append('K');\n                }\n                index += 2;\n            } else if (charAt(value, index + 1) == 'G') {\n                // e.g. \"aggro\"\n                result.append('K');\n                index += 2;\n            } else {\n                // e.g. \"g\", \"google\"\n                result.append('K');\n                index++;\n            }\n            break;\n        default:\n            result.append('K');\n            index++;\n            break;\n    }\n    return index;\n}", "diff": "--- org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n+++ org/apache/commons/codec/language/DoubleMetaphone.java@handleG\n@@ -1,43 +1,60 @@\n private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n-    if (charAt(value, index + 1) == 'H') {\n-        index = handleGH(value, result, index);\n-    } else if (charAt(value, index + 1) == 'N') {\n-        if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n-            result.append(\"KN\", \"N\");\n-        } else if (!contains(value, index + 2, 2, \"EY\") && charAt(value, index + 1) != 'Y' && !slavoGermanic) {\n-            result.append(\"N\", \"KN\");\n-        } else {\n-            result.append(\"KN\");\n-        }\n-        index = index + 2;\n-    } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n-        result.append(\"KL\", \"L\");\n-        index += 2;\n-    } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n-        //-- -ges-, -gep-, -gel-, -gie- at beginning --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n-        //-- -ger-, -gy- --//\n-        result.append('K', 'J');\n-        index += 2;\n-    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n-        //-- Italian \"biaggi\" --//\n-        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n-            //-- obvious germanic --//\n+    if (index < 0)\n+        return index;\n+    if (value.length() - 1 < index)\n+        return index;\n+\n+    // handle special cases e.g. gh, gn, gli, ge-, gi-, etc.\n+    char nextChar = charAt(value, index + 1);\n+    switch(nextChar) {\n+        case 'H':\n+            index = handleGH(value, result, index);\n+            break;\n+        case 'N':\n+            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n+                result.append(\"KN\", \"N\");\n+            } else if (!contains(value, index + 2, 2, \"EY\") && nextChar != 'Y' && !slavoGermanic) {\n+                result.append(\"N\", \"KN\");\n+            } else {\n+                result.append(\"KN\");\n+            }\n+            index = index + 2;\n+            break;\n+        case 'L':\n+            if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n+                result.append(\"KL\", \"L\");\n+                index += 2;\n+            } else {\n+                index += 1;\n+                result.append('K');\n+            }\n+            break;\n+        case 'I':\n+        case 'E':\n+        case 'Y':\n+            if ((contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) || (contains(value, index - 1, 1, \" \") || contains(value, index + 2, 2, \"ET\")) || contains(value, index - 3, 4, \"UCCE\", \"UMPE\", \"AMMI\", \"OGGE\")) {\n+                result.append('J');\n+            } else if (contains(value, index + 1, 2, \"ER\") || nextChar == 'Y') {\n+                if (!contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") && !contains(value, index - 1, 1, \"E\", \"I\") && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+                    result.append('J');\n+                } else {\n+                    result.append('K');\n+                }\n+                index += 2;\n+            } else if (charAt(value, index + 1) == 'G') {\n+                // e.g. \"aggro\"\n+                result.append('K');\n+                index += 2;\n+            } else {\n+                // e.g. \"g\", \"google\"\n+                result.append('K');\n+                index++;\n+            }\n+            break;\n+        default:\n             result.append('K');\n-        } else if (contains(value, index + 1, 4, \"IER\")) {\n-            result.append('J');\n-        } else {\n-            result.append('J', 'K');\n-        }\n-        index += 2;\n-    } else if (charAt(value, index + 1) == 'G') {\n-        index += 2;\n-        result.append('K');\n-    } else {\n-        index++;\n-        result.append('K');\n+            index++;\n+            break;\n     }\n     return index;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}]