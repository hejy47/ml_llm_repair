--- org/apache/commons/math/linear/EigenDecompositionImpl.java@flipIfWarranted
+++ org/apache/commons/math/linear/EigenDecompositionImpl.java@flipIfWarranted
@@ -1,15 +1,18 @@
 private boolean flipIfWarranted(final int n, final int step) {
-    if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
+    double[] currentWork = work[pingPong];
+    double[] newWork = work[1 - pingPong];
+    if (1.5 * currentWork[n - 1] < currentWork[4 * n - 1]) {
         // flip array
         int j = 4 * n - 1;
-        for (int i = 0; i < j; i += 4) {
+        for (int i = 0; i <= j; i += 4) {
             for (int k = 0; k < 4; k += step) {
-                final double tmp = work[i + k];
-                work[i + k] = work[j - k];
-                work[j - k] = tmp;
+                final double tmp = currentWork[i + k];
+                newWork[j - i + k] = tmp;
             }
-            j -= 4;
         }
+        work[pingPong] = newWork;
+        work[1 - pingPong] = currentWork;
+        pingPong = 1 - pingPong;
         return true;
     }
     return false;
