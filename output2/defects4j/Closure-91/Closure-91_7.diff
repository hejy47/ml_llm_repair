--- com/google/javascript/jscomp/CheckGlobalThis.java@shouldTraverse
+++ com/google/javascript/jscomp/CheckGlobalThis.java@shouldTraverse
@@ -12,33 +12,33 @@
         // function a() {} // or
         // a.x = function() {}; // or
         // var a = {x: function() {}};
-        int pType = parent.getType();
+        int pType = parent != null ? parent.getType() : -1;
         if (!(pType == Token.BLOCK || pType == Token.SCRIPT || pType == Token.NAME || pType == Token.ASSIGN || // object literal keys
         pType == Token.STRING || pType == Token.NUMBER)) {
             return false;
         }
         // Don't traverse functions that are getting lent to a prototype.
-    }
-    if (parent != null && parent.getType() == Token.ASSIGN) {
-        Node lhs = parent.getFirstChild();
-        Node rhs = lhs.getNext();
-        if (n == lhs) {
-            // Always traverse the left side of the assignment. To handle
-            // nested assignments properly (e.g., (a = this).property = c;),
-            // assignLhsChild should not be overridden.
-            if (assignLhsChild == null) {
-                assignLhsChild = lhs;
-            }
-        } else {
-            // Only traverse the right side if it's not an assignment to a prototype
-            // property or subproperty.
-            if (NodeUtil.isGet(lhs)) {
-                if (lhs.getType() == Token.GETPROP && lhs.getLastChild().getString().equals("prototype")) {
-                    return false;
+        if (parent != null && parent.getType() == Token.ASSIGN) {
+            Node lhs = parent.getFirstChild();
+            Node rhs = lhs.getNext();
+            if (n == lhs) {
+                // Always traverse the left side of the assignment. To handle
+                // nested assignments properly (e.g., (a = this).property = c;),
+                // assignLhsChild should not be overridden.
+                if (assignLhsChild == null) {
+                    assignLhsChild = lhs;
                 }
-                Node llhs = lhs.getFirstChild();
-                if (llhs.getType() == Token.GETPROP && llhs.getLastChild().getString().equals("prototype")) {
-                    return false;
+            } else {
+                // Only traverse the right side if it's not an assignment to a prototype
+                // property or subproperty.
+                if (NodeUtil.isGet(lhs)) {
+                    if (lhs.getType() == Token.GETPROP && lhs.getLastChild().getString().equals("prototype")) {
+                        return false;
+                    }
+                    Node llhs = lhs.getFirstChild();
+                    if (llhs.getType() == Token.GETPROP && llhs.getLastChild().getString().equals("prototype")) {
+                        return false;
+                    }
                 }
             }
         }
