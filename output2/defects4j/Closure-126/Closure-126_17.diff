--- com/google/javascript/jscomp/MinimizeExitPoints.java@tryMinimizeExits
+++ com/google/javascript/jscomp/MinimizeExitPoints.java@tryMinimizeExits
@@ -1,13 +1,13 @@
 void tryMinimizeExits(Node n, int exitType, String labelName) {
     // Just an 'exit'.
     if (matchingExitNode(n, exitType, labelName)) {
-        NodeUtil.removeChild(n.getParent(), n);
+        n.detach();
         compiler.reportCodeChange();
         return;
     }
     // Just an 'if'.
     if (n.isIf()) {
-        Node ifBlock = n.getFirstChild().getNext();
+        Node ifBlock = n.getSecondChild();
         tryMinimizeExits(ifBlock, exitType, labelName);
         Node elseBlock = ifBlock.getNext();
         if (elseBlock != null) {
@@ -26,7 +26,7 @@
             Node catchCodeBlock = catchNode.getLastChild();
             tryMinimizeExits(catchCodeBlock, exitType, labelName);
         }
-                if (NodeUtil.hasFinally(n)) {
+        if (NodeUtil.hasFinally(n)) {
             Node finallyBlock = n.getLastChild();
             tryMinimizeExits(finallyBlock, exitType, labelName);
         }
@@ -51,12 +51,12 @@
             Node ifTree = c;
             Node trueBlock, falseBlock;
             // First, the true condition block.
-            trueBlock = ifTree.getFirstChild().getNext();
+            trueBlock = ifTree.getSecondChild();
             falseBlock = trueBlock.getNext();
             tryMinimizeIfBlockExits(trueBlock, falseBlock, ifTree, exitType, labelName);
             // Now the else block.
             // The if blocks may have changed, get them again.
-            trueBlock = ifTree.getFirstChild().getNext();
+            trueBlock = ifTree.getSecondChild();
             falseBlock = trueBlock.getNext();
             if (falseBlock != null) {
                 tryMinimizeIfBlockExits(falseBlock, trueBlock, ifTree, exitType, labelName);
