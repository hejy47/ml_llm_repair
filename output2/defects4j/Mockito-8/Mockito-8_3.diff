--- org/mockito/internal/util/reflection/GenericMetadataSupport.java@registerTypeVariablesOn
+++ org/mockito/internal/util/reflection/GenericMetadataSupport.java@registerTypeVariablesOn
@@ -3,16 +3,18 @@
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-    TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-    for (int i = 0; i < actualTypeArguments.length; i++) {
-        TypeVariable typeParameter = typeParameters[i];
-        Type actualTypeArgument = actualTypeArguments[i];
-        if (actualTypeArgument instanceof WildcardType) {
-            contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-        } else {
-            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+    Type rawType = parameterizedType.getRawType();
+    if (rawType instanceof Class) {
+        TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
+        for (int i = 0; i < actualTypeArguments.length; i++) {
+            TypeVariable<?> typeParameter = typeParameters[i];
+            Type actualTypeArgument = actualTypeArguments[i];
+            if (actualTypeArgument instanceof WildcardType) {
+                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+            } else {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         }
-        // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
