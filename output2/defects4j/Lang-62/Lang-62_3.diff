--- org/apache/commons/lang/Entities.java@unescape
+++ org/apache/commons/lang/Entities.java@unescape
@@ -3,20 +3,20 @@
     if (firstAmp < 0) {
         return str;
     }
-    StringBuffer buf = new StringBuffer(str.length());
-    buf.append(str.substring(0, firstAmp));
-    for (int i = firstAmp; i < str.length(); ++i) {
-        char ch = str.charAt(i);
-        if (ch == '&') {
+    StringBuilder buf = new StringBuilder(str.length());
+    buf.append(str, 0, firstAmp);
+    for (int i = firstAmp; i < str.length();) {
+        if (str.charAt(i) == '&') {
             int semi = str.indexOf(';', i + 1);
             if (semi == -1) {
-                buf.append(ch);
+                buf.append('&');
+                i++;
                 continue;
             }
             int amph = str.indexOf('&', i + 1);
             if (amph != -1 && amph < semi) {
-                // Then the text looks like &...&...;
-                buf.append(ch);
+                buf.append('&');
+                i++;
                 continue;
             }
             String entityName = str.substring(i + 1, semi);
@@ -48,9 +48,9 @@
             } else {
                 buf.append((char) (entityValue));
             }
-            i = semi;
+            i = semi + 1;
         } else {
-            buf.append(ch);
+            buf.append(str.charAt(i++));
         }
     }
     return buf.toString();
--- org/apache/commons/lang/Entities.java@unescape1
+++ org/apache/commons/lang/Entities.java@unescape1
@@ -6,19 +6,20 @@
     }
     writer.write(string, 0, firstAmp);
     int len = string.length();
-    for (int i = firstAmp; i < len; i++) {
+    for (int i = firstAmp; i < len;) {
         char c = string.charAt(i);
         if (c == '&') {
             int nextIdx = i + 1;
             int semiColonIdx = string.indexOf(';', nextIdx);
             if (semiColonIdx == -1) {
                 writer.write(c);
+                i++;
                 continue;
             }
             int amphersandIdx = string.indexOf('&', i + 1);
             if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {
-                // Then the text looks like &...&...;
                 writer.write(c);
+                i++;
                 continue;
             }
             String entityContent = string.substring(nextIdx, semiColonIdx);
@@ -26,22 +27,23 @@
             int entityContentLen = entityContent.length();
             if (entityContentLen > 0) {
                 if (entityContent.charAt(0) == '#') {
-                    //escaped value content is an integer (decimal or hexidecimal)
+                    //escaped value content is an integer (decimal or hexadecimal)
                     if (entityContentLen > 1) {
                         char isHexChar = entityContent.charAt(1);
                         try {
-                            switch(isHexChar) {
+                            switch (isHexChar) {
                                 case 'X':
-                                case 'x':
-                                    {
-                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);
-                                    }
-                                default:
-                                    {
-                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);
-                                    }
+                                case 'x': {
+                                    entityValue = Integer.parseInt(entityContent.substring(2), 16);
+                                    break;
+                                }
+                                default: {
+                                    entityValue = Integer.parseInt(entityContent.substring(1), 10);
+                                    break;
+                                }
                             }
                         } catch (NumberFormatException e) {
+                            entityValue = -1;
                         }
                     }
                 } else {
@@ -56,10 +58,10 @@
             } else {
                 writer.write(entityValue);
             }
-            //move index up to the semi-colon
-            i = semiColonIdx;
+            i = semiColonIdx + 1;
         } else {
             writer.write(c);
+            i++;
         }
     }
 }
