--- org/apache/commons/lang/Entities.java@unescape
+++ org/apache/commons/lang/Entities.java@unescape
@@ -3,7 +3,7 @@
     if (firstAmp < 0) {
         return str;
     }
-    StringBuffer buf = new StringBuffer(str.length());
+    StringBuilder buf = new StringBuilder(str.length());
     buf.append(str.substring(0, firstAmp));
     for (int i = firstAmp; i < str.length(); ++i) {
         char ch = str.charAt(i);
@@ -20,7 +20,7 @@
                 continue;
             }
             String entityName = str.substring(i + 1, semi);
-            int entityValue;
+            int entityValue = -1;
             if (entityName.length() == 0) {
                 entityValue = -1;
             } else if (entityName.charAt(0) == '#') {
@@ -30,7 +30,7 @@
                     char charAt1 = entityName.charAt(1);
                     try {
                         if (charAt1 == 'x' || charAt1 == 'X') {
-                            entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();
+                            entityValue = Integer.parseInt(entityName.substring(2), 16);
                         } else {
                             entityValue = Integer.parseInt(entityName.substring(1));
                         }
@@ -46,7 +46,7 @@
                 buf.append(entityName);
                 buf.append(';');
             } else {
-                buf.append((char) (entityValue));
+                buf.append((char) entityValue);
             }
             i = semi;
         } else {
--- org/apache/commons/lang/Entities.java@unescape1
+++ org/apache/commons/lang/Entities.java@unescape1
@@ -26,20 +26,18 @@
             int entityContentLen = entityContent.length();
             if (entityContentLen > 0) {
                 if (entityContent.charAt(0) == '#') {
-                    //escaped value content is an integer (decimal or hexidecimal)
+                    //escaped value content is an integer (decimal or hexadecimal)
                     if (entityContentLen > 1) {
                         char isHexChar = entityContent.charAt(1);
                         try {
-                            switch(isHexChar) {
+                            switch (isHexChar) {
                                 case 'X':
                                 case 'x':
-                                    {
-                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);
-                                    }
+                                    entityValue = Integer.parseInt(entityContent.substring(2), 16);
+                                    break;
                                 default:
-                                    {
-                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);
-                                    }
+                                    entityValue = Integer.parseInt(entityContent.substring(1), 10);
+                                    break;
                             }
                         } catch (NumberFormatException e) {
                         }
