--- org/apache/commons/lang/Entities.java@unescape
+++ org/apache/commons/lang/Entities.java@unescape
@@ -3,20 +3,23 @@
     if (firstAmp < 0) {
         return str;
     }
-    StringBuffer buf = new StringBuffer(str.length());
-    buf.append(str.substring(0, firstAmp));
-    for (int i = firstAmp; i < str.length(); ++i) {
+    StringBuilder buf = new StringBuilder(str.length());
+    buf.append(str, 0, firstAmp);
+    int i = firstAmp;
+    while (i < str.length()) {
         char ch = str.charAt(i);
         if (ch == '&') {
             int semi = str.indexOf(';', i + 1);
             if (semi == -1) {
                 buf.append(ch);
+                i++;
                 continue;
             }
             int amph = str.indexOf('&', i + 1);
             if (amph != -1 && amph < semi) {
                 // Then the text looks like &...&...;
                 buf.append(ch);
+                i++;
                 continue;
             }
             String entityName = str.substring(i + 1, semi);
@@ -30,7 +33,7 @@
                     char charAt1 = entityName.charAt(1);
                     try {
                         if (charAt1 == 'x' || charAt1 == 'X') {
-                            entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();
+                            entityValue = Integer.valueOf(entityName.substring(2), 16);
                         } else {
                             entityValue = Integer.parseInt(entityName.substring(1));
                         }
@@ -48,9 +51,10 @@
             } else {
                 buf.append((char) (entityValue));
             }
-            i = semi;
+            i = semi + 1;
         } else {
             buf.append(ch);
+            i++;
         }
     }
     return buf.toString();
--- org/apache/commons/lang/Entities.java@unescape1
+++ org/apache/commons/lang/Entities.java@unescape1
@@ -6,19 +6,22 @@
     }
     writer.write(string, 0, firstAmp);
     int len = string.length();
-    for (int i = firstAmp; i < len; i++) {
+    int i = firstAmp;
+    while (i < len) {
         char c = string.charAt(i);
         if (c == '&') {
             int nextIdx = i + 1;
             int semiColonIdx = string.indexOf(';', nextIdx);
             if (semiColonIdx == -1) {
                 writer.write(c);
+                i++;
                 continue;
             }
-            int amphersandIdx = string.indexOf('&', i + 1);
-            if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {
+            int ampersandIdx = string.indexOf('&', i + 1);
+            if (ampersandIdx != -1 && ampersandIdx < semiColonIdx) {
                 // Then the text looks like &...&...;
                 writer.write(c);
+                i++;
                 continue;
             }
             String entityContent = string.substring(nextIdx, semiColonIdx);
@@ -35,10 +38,12 @@
                                 case 'x':
                                     {
                                         entityValue = Integer.parseInt(entityContent.substring(2), 16);
+                                        break;
                                     }
                                 default:
                                     {
                                         entityValue = Integer.parseInt(entityContent.substring(1), 10);
+                                        break;
                                     }
                             }
                         } catch (NumberFormatException e) {
@@ -57,9 +62,10 @@
                 writer.write(entityValue);
             }
             //move index up to the semi-colon
-            i = semiColonIdx;
+            i = semiColonIdx + 1;
         } else {
             writer.write(c);
+            i++;
         }
     }
 }
