--- com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@isFoldableExpressBlock
+++ com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@isFoldableExpressBlock
@@ -6,11 +6,14 @@
             // their return value is used vs. when their return value is in
             // an EXPR_RESULT. It's pretty freaking weird. See:
             // http://code.google.com/p/closure-compiler/issues/detail?id=291
-            // We try to detect this case, and not fold EXPR_RESULTs
-            // into other expressions.
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-            return NodeUtil.isExpressionNode(maybeExpr);
+            // We try to detect this case, and not fold EXPR_RESULTs 
+
+            if (NodeUtil.isExpressionNode(maybeExpr)) {
+                Node parent = maybeExpr.getParent();
+                if (parent == null || parent.isExprResult()) {
+                    return true;
+                }
+            }
         }
     }
     return false;
