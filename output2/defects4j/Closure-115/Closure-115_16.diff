--- com/google/javascript/jscomp/FunctionInjector.java@canInlineReferenceDirectly
+++ com/google/javascript/jscomp/FunctionInjector.java@canInlineReferenceDirectly
@@ -40,8 +40,10 @@
                 // Check for arguments that are evaluated more than once.
                 // Note: Unlike block inlining, there it is not possible that a
                 // parameter reference will be in a loop.
-                if (NodeUtil.mayEffectMutableState(cArg, compiler) && NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1) {
-                    return CanInlineResult.NO;
+                if (NodeUtil.getNameReferenceCount(block, fnParam.getString()) > 1) {
+                    if (NodeUtil.mayEffectMutableState(cArg, compiler)) {
+                        return CanInlineResult.NO;
+                    }
                 }
             }
             // Move to the next name.
