--- org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@deepStub
+++ org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@deepStub
@@ -2,8 +2,8 @@
     InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());
     InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();
     // matches invocation for verification
-    for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {
-        if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {
+    for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbingsDescending()) { // change to getStubbingsDescending
+        if (stubbedInvocationMatcher.getInvocation().matches(invocation)) { // change to compare reversed invocation
             return stubbedInvocationMatcher.answer(invocation);
         }
     }
--- org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@newDeepStubMock
+++ org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@newDeepStubMock
@@ -1,3 +1,3 @@
 private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
-    return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));
+    return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata).defaultAnswer(returnsDeepStubsAnswer())); // add defaultAnswer
 }
--- org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@withSettingsUsing
+++ org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java@withSettingsUsing
@@ -1,4 +1,4 @@
 private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata) {
     MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();
-    return mockSettings.serializable().defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));
+    return mockSettings.serializable();
 }
