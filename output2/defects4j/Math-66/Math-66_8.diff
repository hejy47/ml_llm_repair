--- org/apache/commons/math/optimization/univariate/BrentOptimizer.java@optimize
+++ org/apache/commons/math/optimization/univariate/BrentOptimizer.java@optimize
@@ -1,4 +1,4 @@
 public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
     clearResult();
-    return localMin(getGoalType() == GoalType.MINIMIZE, f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy());
+    return localMin(goalType == GoalType.MINIMIZE, f, goalType, min, startValue, max, getRelativeAccuracy(), getAbsoluteAccuracy());
 }
--- org/apache/commons/math/optimization/univariate/BrentOptimizer.java@localMin
+++ org/apache/commons/math/optimization/univariate/BrentOptimizer.java@localMin
@@ -25,7 +25,7 @@
     double fv = fx;
     double fw = fx;
     int count = 0;
-    while (count < maximalIterationCount) {
+    while (count < getMaximalIterationCount()) {
         double m = 0.5 * (a + b);
         final double tol1 = eps * Math.abs(x) + t;
         final double tol2 = 2 * tol1;
@@ -128,5 +128,5 @@
         }
         ++count;
     }
-    throw new MaxIterationsExceededException(maximalIterationCount);
+    throw new MaxIterationsExceededException(getMaximalIterationCount());
 }
