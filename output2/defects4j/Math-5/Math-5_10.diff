--- org/apache/commons/math3/complex/Complex.java@reciprocal
+++ org/apache/commons/math3/complex/Complex.java@reciprocal
@@ -1,20 +1,10 @@
 public Complex reciprocal() {
-    if (isNaN) {
+    if (isNaN() || isInfinite()) {
         return NaN;
     }
     if (real == 0.0 && imaginary == 0.0) {
         return NaN;
     }
-    if (isInfinite) {
-        return ZERO;
-    }
-    if (FastMath.abs(real) < FastMath.abs(imaginary)) {
-        double q = real / imaginary;
-        double scale = 1. / (real * q + imaginary);
-        return createComplex(scale * q, -scale);
-    } else {
-        double q = imaginary / real;
-        double scale = 1. / (imaginary * q + real);
-        return createComplex(scale, -scale * q);
-    }
+    double scale = 1. / (real * real + imaginary * imaginary);
+    return createComplex(real * scale, -imaginary * scale);
 }
