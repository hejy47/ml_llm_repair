--- com/google/javascript/jscomp/PeepholeFoldConstants.java@tryFoldShift
+++ com/google/javascript/jscomp/PeepholeFoldConstants.java@tryFoldShift
@@ -11,7 +11,7 @@
         }
         // only the lower 5 bits are used when shifting, so don't do anything
         // if the shift amount is outside [0,32)
-        if (!(rval >= 0 && rval < 32)) {
+        if (!(rval >= 0 && rval < 32 && rval == (int)rval)) {
             error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
             return n;
         }
@@ -21,11 +21,7 @@
             error(FRACTIONAL_BITWISE_OPERAND, left);
             return n;
         }
-        int rvalInt = (int) rval;
-        if (rvalInt != rval) {
-            error(FRACTIONAL_BITWISE_OPERAND, right);
-            return n;
-        }
+        int rvalInt = (int) rval;        
         switch(n.getType()) {
             case Token.LSH:
                 result = lvalInt << rvalInt;
