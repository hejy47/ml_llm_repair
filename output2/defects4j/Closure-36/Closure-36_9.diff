--- com/google/javascript/jscomp/InlineVariables.java@canInline
+++ com/google/javascript/jscomp/InlineVariables.java@canInline
@@ -23,22 +23,27 @@
     //   f(a)
     // is ok.
     Node value = initialization.getAssignedValue();
-    Preconditions.checkState(value != null);
+    Preconditions.checkNotNull(value);
     if (value.isGetProp() && reference.getParent().isCall() && reference.getParent().getFirstChild() == reference.getNode()) {
         return false;
     }
     if (value.isFunction()) {
         Node callNode = reference.getParent();
-        if (reference.getParent().isCall()) {
+        if (callNode != null && callNode.isCall()) {
             CodingConvention convention = compiler.getCodingConvention();
             // Bug 2388531: Don't inline subclass definitions into class defining
             // calls as this confused class removing logic.
-            SubclassRelationship relationship = convention.getClassesDefinedByCall(callNode);
+            // Fixed: Check if convention is null before using it
+            SubclassRelationship relationship = convention != null ? convention.getClassesDefinedByCall(callNode) : null;
             if (relationship != null) {
                 return false;
             }
             // issue 668: Don't inline singleton getter methods
             // calls as this confused class removing logic.
+            // Fixed: Add missing check if convention is null before using it
+            if (convention != null && convention.isSingletonGetterCall(value, callNode)) {
+                return false;
+            }
         }
     }
     return canMoveAggressively(value) || canMoveModerately(initialization, reference);
