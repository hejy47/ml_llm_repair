--- org/apache/commons/math/linear/CholeskyDecompositionImpl.java@CholeskyDecompositionImpl
+++ org/apache/commons/math/linear/CholeskyDecompositionImpl.java@CholeskyDecompositionImpl
@@ -9,7 +9,7 @@
     // check the matrix before transformation
     for (int i = 0; i < order; ++i) {
         final double[] lI = lTData[i];
-        if (lTData[i][i] < absolutePositivityThreshold) {
+        if (lI[i] < absolutePositivityThreshold) {
             throw new NotPositiveDefiniteMatrixException();
         }
         // check off-diagonal elements (and reset them to 0)
@@ -27,8 +27,12 @@
     // transform the matrix
     for (int i = 0; i < order; ++i) {
         final double[] ltI = lTData[i];
+        double diag = ltI[i];
         // check diagonal element
-        ltI[i] = Math.sqrt(ltI[i]);
+        if (diag <= 0) {
+            throw new NotPositiveDefiniteMatrixException();
+        }
+        ltI[i] = Math.sqrt(diag);
         final double inverse = 1.0 / ltI[i];
         for (int q = order - 1; q > i; --q) {
             ltI[q] *= inverse;
