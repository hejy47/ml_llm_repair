--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add
+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add
@@ -14,20 +14,12 @@
     if (item.getMaxOutlier() != null) {
         maxval = item.getMaxOutlier().doubleValue();
     }
-    if (Double.isNaN(this.maximumRangeValue)) {
-        this.maximumRangeValue = maxval;
-        this.maximumRangeValueRow = r;
-        this.maximumRangeValueColumn = c;
-    } else if (maxval > this.maximumRangeValue) {
+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {
         this.maximumRangeValue = maxval;
         this.maximumRangeValueRow = r;
         this.maximumRangeValueColumn = c;
     }
-    if (Double.isNaN(this.minimumRangeValue)) {
-        this.minimumRangeValue = minval;
-        this.minimumRangeValueRow = r;
-        this.minimumRangeValueColumn = c;
-    } else if (minval < this.minimumRangeValue) {
+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {
         this.minimumRangeValue = minval;
         this.minimumRangeValueRow = r;
         this.minimumRangeValueColumn = c;
--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds
+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds
@@ -1,4 +1,23 @@
 private void updateBounds() {
-    this.minimumRangeValue = Double.NaN;
-    this.maximumRangeValue = Double.NaN;
+    this.minimumRangeValue = Double.POSITIVE_INFINITY;
+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;
+    for (int r = 0; r < data.getRowCount(); r++) {
+        for (int c = 0; c < data.getColumnCount(); c++) {
+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) data.getObject(r, c);
+            if (item != null) {
+                Number min = item.getMinOutlier();
+                Number max = item.getMaxOutlier();
+                if (min != null && min.doubleValue() < this.minimumRangeValue) {
+                    this.minimumRangeValue = min.doubleValue();
+                    this.minimumRangeValueRow = r;
+                    this.minimumRangeValueColumn = c;
+                }
+                if (max != null && max.doubleValue() > this.maximumRangeValue) {
+                    this.maximumRangeValue = max.doubleValue();
+                    this.maximumRangeValueRow = r;
+                    this.maximumRangeValueColumn = c;
+                }
+            }
+        }
+    }
 }
