--- org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java@RectangularCholeskyDecomposition
+++ org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java@RectangularCholeskyDecomposition
@@ -13,7 +13,7 @@
         swap[r] = r;
         for (int i = r + 1; i < order; ++i) {
             int ii = index[i];
-            int isi = index[swap[i]];
+            int isi = index[swap[r]];
             if (c[ii][ii] > c[isi][isi]) {
                 swap[r] = i;
             }
@@ -35,7 +35,7 @@
                 if (c[index[i]][index[i]] < -small) {
                     // there is at least one sufficiently negative diagonal element,
                     // the symmetric positive semidefinite matrix is wrong
-                    throw new NonPositiveDefiniteMatrixException(c[index[i]][index[i]], i, small);
+                    throw new NonPositiveDefiniteMatrixException(c[index[i]][index[i]], index[i], small);
                 }
             }
             // all remaining diagonal elements are close to zero, we consider we have
