--- org/apache/commons/math/estimation/AbstractEstimator.java@getCovariances
+++ org/apache/commons/math/estimation/AbstractEstimator.java@getCovariances
@@ -18,8 +18,8 @@
     }
     try {
         // compute the covariances matrix
-        return new RealMatrixImpl(jTj).inverse().getData();
-    } catch (InvalidMatrixException ime) {
+        return new QRDecomposition(new Array2DRowRealMatrix(jTj)).getSolver().getInverse().getData();
+    } catch (SingularMatrixException ime) {
         throw new EstimationException("unable to compute covariances: singular problem", new Object[0]);
     }
 }
--- org/apache/commons/math/estimation/AbstractEstimator.java@guessParametersErrors
+++ org/apache/commons/math/estimation/AbstractEstimator.java@guessParametersErrors
@@ -7,8 +7,9 @@
     double[] errors = new double[problem.getAllParameters().length];
     final double c = Math.sqrt(getChiSquare(problem) / (m - p));
     double[][] covar = getCovariances(problem);
+    EigenDecomposition eig = new EigenDecomposition(new Array2DRowRealMatrix(covar));
     for (int i = 0; i < errors.length; ++i) {
-        errors[i] = Math.sqrt(covar[i][i]) * c;
+        errors[i] = Math.sqrt(eig.getRealEigenvalue(i)) * c;
     }
     return errors;
 }
