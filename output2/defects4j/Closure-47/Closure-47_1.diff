--- com/google/debugging/sourcemap/SourceMapConsumerV3.java@getOriginalMappingForEntry
+++ com/google/debugging/sourcemap/SourceMapConsumerV3.java@getOriginalMappingForEntry
@@ -3,7 +3,7 @@
         return null;
     } else {
         // Adjust the line/column here to be start at 1.
-        Builder x = OriginalMapping.newBuilder().setOriginalFile(sources[entry.getSourceFileId()]).setLineNumber(entry.getSourceLine()).setColumnPosition(entry.getSourceColumn());
+        OriginalMapping.Builder x = OriginalMapping.newBuilder().setOriginalFile(sources[entry.getSourceFileId()]).setLineNumber(entry.getSourceLine() + 1).setColumnPosition(entry.getSourceColumn() + 1);
         if (entry.getNameId() != UNMAPPED) {
             x.setIdentifier(names[entry.getNameId()]);
         }
--- com/google/javascript/jscomp/SourceMap.java@addMapping
+++ com/google/javascript/jscomp/SourceMap.java@addMapping
@@ -8,9 +8,15 @@
     }
     sourceFile = fixupSourceLocation(sourceFile);
     String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);
+    int startLine = node.getLineno();
+    int startColumn = node.getCharno();
     // Strangely, Rhino source lines are one based but columns are
     // zero based.
     // We don't change this for the v1 or v2 source maps but for
     // v3 we make them both 0 based.
-    generator.addMapping(sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition);
+    if (generator.getSourceMapFormat() == SourceFile.Generator.V3) {
+        startLine--;
+        startColumn--;
+    }
+    generator.addMapping(sourceFile, originalName, new FilePosition(startLine, startColumn), outputStartPosition, outputEndPosition);
 }
