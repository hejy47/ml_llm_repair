--- com/google/debugging/sourcemap/SourceMapConsumerV3.java@getOriginalMappingForEntry
+++ com/google/debugging/sourcemap/SourceMapConsumerV3.java@getOriginalMappingForEntry
@@ -3,7 +3,7 @@
         return null;
     } else {
         // Adjust the line/column here to be start at 1.
-        Builder x = OriginalMapping.newBuilder().setOriginalFile(sources[entry.getSourceFileId()]).setLineNumber(entry.getSourceLine()).setColumnPosition(entry.getSourceColumn());
+        OriginalMapping.Builder x = OriginalMapping.newBuilder().setOriginalFile(sources[entry.getSourceFileId()]).setLineNumber(entry.getSourceLine() + 1).setColumnPosition(entry.getSourceColumn() + 1);
         if (entry.getNameId() != UNMAPPED) {
             x.setIdentifier(names[entry.getNameId()]);
         }
--- com/google/javascript/jscomp/SourceMap.java@addMapping
+++ com/google/javascript/jscomp/SourceMap.java@addMapping
@@ -3,7 +3,7 @@
     // If the node does not have an associated source file or
     // its line number is -1, then the node does not have sufficient
     // information for a mapping to be useful.
-    if (sourceFile == null || node.getLineno() < 0) {
+    if (sourceFile == null || node.getLineno() < 1) { // Check for line number being less than 1
         return;
     }
     sourceFile = fixupSourceLocation(sourceFile);
@@ -12,5 +12,5 @@
     // zero based.
     // We don't change this for the v1 or v2 source maps but for
     // v3 we make them both 0 based.
-    generator.addMapping(sourceFile, originalName, new FilePosition(node.getLineno(), node.getCharno()), outputStartPosition, outputEndPosition);
+    generator.addMapping(sourceFile, originalName, new FilePosition(node.getLineno() - 1, node.getCharno()), outputStartPosition, outputEndPosition); // Subtract 1 from the line number
 }
