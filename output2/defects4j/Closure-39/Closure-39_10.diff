--- com/google/javascript/rhino/jstype/PrototypeObjectType.java@toStringHelper
+++ com/google/javascript/rhino/jstype/PrototypeObjectType.java@toStringHelper
@@ -7,8 +7,17 @@
         prettyPrint = false;
         // Use a tree set so that the properties are sorted.
         Set<String> propertyNames = Sets.newTreeSet();
-        for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) {
-            propertyNames.addAll(current.getOwnPropertyNames());
+        int count = 0;  // to keep track of the number of properties added
+        for (ObjectType current = this; current != null && !current.isNativeObjectType() && count <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) {
+            for (String property : current.getOwnPropertyNames()) {
+                if (!propertyNames.contains(property)) {  // add only unique properties
+                    propertyNames.add(property);
+                    count++;
+                    if (count > MAX_PRETTY_PRINTED_PROPERTIES) {
+                        break;
+                    }
+                }
+            }
         }
         StringBuilder sb = new StringBuilder();
         sb.append("{");
@@ -20,7 +29,7 @@
             sb.append(property);
             sb.append(": ");
             sb.append(getPropertyType(property).toString());
-            ++i;
+            i++;
             if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
                 sb.append(", ...");
                 break;
