--- org/joda/time/chrono/GJChronology.java@getInstance
+++ org/joda/time/chrono/GJChronology.java@getInstance
@@ -24,7 +24,7 @@
             chrono = new GJChronology(JulianChronology.getInstance(zone, minDaysInFirstWeek), GregorianChronology.getInstance(zone, minDaysInFirstWeek), cutoverInstant);
         } else {
             chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);
-            chrono = new GJChronology(ZonedChronology.getInstance(chrono, zone), chrono.iJulianChronology, chrono.iGregorianChronology, chrono.iCutoverInstant);
+            chrono = new GJChronology(ZonedChronology.getInstance(chrono, zone), chrono.getJulianChronology(), chrono.getGregorianChronology(), chrono.getCutoverInstant());
         }
         chronos.add(chrono);
     }
--- org/joda/time/chrono/GJChronology.java@add
+++ org/joda/time/chrono/GJChronology.java@add
@@ -1,17 +1,31 @@
 public long add(long instant, int value) {
-    if (instant >= iCutover) {
-        instant = iGregorianField.add(instant, value);
-        if (instant < iCutover) {
-            // Only adjust if gap fully crossed.
-            if (instant + iGapDuration < iCutover) {
-                instant = gregorianToJulian(instant);
+    if (instant >= iCutoverInstant) {
+        try {
+            instant = iGregorianField.add(instant, value);
+            if (instant < iCutoverInstant) {
+                // Only adjust if gap fully crossed.
+                if (instant + iGapDuration < iCutoverInstant) {
+                    instant = gregorianToJulian(instant);
+                }
             }
+        } catch (IllegalFieldValueException e) {
+            if (e.getIllegalFieldIndex() != DateTimeFieldType.year()) {
+                throw e;
+            }
+            // This field is potentially out of range. Go to the cutover to handle.
+            instant = iGregorianField.add(iCutoverInstant - iGapDuration, value);
+            long end = getJulianDayNumber(instant);
+            if (end < iCutoverJulianDay) {
+                end = iCutoverJulianDay;
+            }
+            instant = iJulianField.setExtended(instant, end);
+            instant = iGregorianField.add(instant, value);
         }
     } else {
         instant = iJulianField.add(instant, value);
-        if (instant >= iCutover) {
+        if (instant >= iCutoverInstant) {
             // Only adjust if gap fully crossed.
-            if (instant - iGapDuration >= iCutover) {
+            if (instant - iGapDuration >= iCutoverInstant) {
                 // no special handling for year zero as cutover always after year zero
                 instant = julianToGregorian(instant);
             }
--- org/joda/time/chrono/GJChronology.java@add2
+++ org/joda/time/chrono/GJChronology.java@add2
@@ -1,17 +1,31 @@
 public long add(long instant, long value) {
-    if (instant >= iCutover) {
-        instant = iGregorianField.add(instant, value);
-        if (instant < iCutover) {
-            // Only adjust if gap fully crossed.
-            if (instant + iGapDuration < iCutover) {
-                instant = gregorianToJulian(instant);
+    if (instant >= iCutoverInstant) {
+        try {
+            instant = iGregorianField.add(instant, value);
+            if (instant < iCutoverInstant) {
+                // Only adjust if gap fully crossed.
+                if (instant + iGapDuration < iCutoverInstant) {
+                    instant = gregorianToJulian(instant);
+                }
             }
+        } catch (IllegalFieldValueException e) {
+            if (e.getIllegalFieldIndex() != DateTimeFieldType.year()) {
+                throw e;
+            }
+            // This field is potentially out of range. Go to the cutover to handle.
+            instant = iGregorianField.add(iCutoverInstant - iGapDuration, value);
+            long end = getJulianDayNumber(instant);
+            if (end < iCutoverJulianDay) {
+                end = iCutoverJulianDay;
+            }
+            instant = iJulianField.setExtended(instant, end);
+            instant = iGregorianField.add(instant, value);
         }
     } else {
         instant = iJulianField.add(instant, value);
-        if (instant >= iCutover) {
+        if (instant >= iCutoverInstant) {
             // Only adjust if gap fully crossed.
-            if (instant - iGapDuration >= iCutover) {
+            if (instant - iGapDuration >= iCutoverInstant) {
                 // no special handling for year zero as cutover always after year zero
                 instant = julianToGregorian(instant);
             }
