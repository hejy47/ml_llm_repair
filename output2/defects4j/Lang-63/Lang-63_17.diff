--- org/apache/commons/lang/time/DurationFormatUtils.java@formatPeriod
+++ org/apache/commons/lang/time/DurationFormatUtils.java@formatPeriod
@@ -36,12 +36,8 @@
         days -= 1;
     }
     while (days < 0) {
-        days += 31;
-        //days += 31; // TODO: Need tests to show this is bad and the new code is good.
-        // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is
-        // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
-        // Also it's contextual - if asked for no M in the format then I should probably
-        // be doing no calculating here.
+        int maxDaysInMonth = end.getActualMaximum(Calendar.DAY_OF_MONTH);
+        days += maxDaysInMonth;
         months -= 1;
     }
     while (months < 0) {
@@ -69,7 +65,8 @@
         }
     }
     if (!Token.containsTokenWithValue(tokens, M)) {
-        days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);
+        int maxDaysInMonth = end.getActualMaximum(Calendar.DAY_OF_MONTH);
+        days += maxDaysInMonth - start.get(Calendar.DAY_OF_MONTH) + 1;
         months = 0;
     }
     if (!Token.containsTokenWithValue(tokens, d)) {
--- org/apache/commons/lang/time/DurationFormatUtils.java@reduceAndCorrect
+++ org/apache/commons/lang/time/DurationFormatUtils.java@reduceAndCorrect
@@ -1,10 +1,19 @@
 static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-    end.add(field, -1 * difference);
+    end.add(field, -difference);
     int endValue = end.get(field);
     int startValue = start.get(field);
     if (endValue < startValue) {
         int newdiff = startValue - endValue;
-        end.add(field, newdiff);
+        if (field == Calendar.MONTH) {
+            end.add(Calendar.MONTH, newdiff);
+            if (end.get(Calendar.MONTH) < start.get(Calendar.MONTH)) {
+                int days = end.getActualMaximum(Calendar.DAY_OF_MONTH);
+                end.set(Calendar.DAY_OF_MONTH, days);
+                return newdiff - 1;
+            }
+        } else {
+            end.add(field, newdiff);
+        }
         return newdiff;
     } else {
         return 0;
