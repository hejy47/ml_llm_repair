--- org/jfree/chart/axis/Axis.java@drawLabel
+++ org/jfree/chart/axis/Axis.java@drawLabel
@@ -13,51 +13,35 @@
     FontMetrics fm = g2.getFontMetrics();
     Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);
     Shape hotspot = null;
+    double labelx = 0, labely = 0, angle = 0;
     if (edge == RectangleEdge.TOP) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) dataArea.getCenterX();
-        float labely = (float) (state.getCursor() - insets.getBottom() - h / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
+        angle = -getLabelAngle();
+        labelx = dataArea.getCenterX();
+        labely = state.getCursor() - insets.getBottom() - labelBounds.getHeight() / 2.0;
+        hotspot = new Rectangle2D.Double(labelx - labelBounds.getWidth() / 2.0, labely - labelBounds.getHeight() / 2.0, labelBounds.getWidth(), labelBounds.getHeight());
         state.cursorUp(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
     } else if (edge == RectangleEdge.BOTTOM) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) dataArea.getCenterX();
-        float labely = (float) (state.getCursor() + insets.getTop() + h / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
+        angle = getLabelAngle();
+        labelx = dataArea.getCenterX();
+        labely = state.getCursor() + insets.getTop() + labelBounds.getHeight() / 2.0;
+        hotspot = new Rectangle2D.Double(labelx - labelBounds.getWidth() / 2.0, labely - labelBounds.getHeight() / 2.0, labelBounds.getWidth(), labelBounds.getHeight());
         state.cursorDown(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
     } else if (edge == RectangleEdge.LEFT) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) (state.getCursor() - insets.getRight() - w / 2.0);
-        float labely = (float) dataArea.getCenterY();
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
+        angle = -getLabelAngle() - Math.PI / 2.0;
+        labelx = state.getCursor() - insets.getRight() - labelBounds.getWidth() / 2.0;
+        labely = dataArea.getCenterY();
+        hotspot = new Rectangle2D.Double(labelx - labelBounds.getWidth() / 2.0, labely - labelBounds.getHeight() / 2.0, labelBounds.getWidth(), labelBounds.getHeight());
         state.cursorLeft(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
     } else if (edge == RectangleEdge.RIGHT) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() + Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) (state.getCursor() + insets.getLeft() + w / 2.0);
-        float labely = (float) (dataArea.getY() + dataArea.getHeight() / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
+        angle = getLabelAngle() + Math.PI / 2.0;
+        labelx = state.getCursor() + insets.getLeft() + labelBounds.getWidth() / 2.0;
+        labely = dataArea.getCenterY();
+        hotspot = new Rectangle2D.Double(labelx - labelBounds.getWidth() / 2.0, labely - labelBounds.getHeight() / 2.0, labelBounds.getWidth(), labelBounds.getHeight());
         state.cursorRight(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
     }
+    AffineTransform t = AffineTransform.getRotateInstance(angle, labelx, labely);
+    Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
+    TextUtilities.drawRotatedString(label, g2, (float) rotatedLabelBounds.getBounds2D().getCenterX(), (float) rotatedLabelBounds.getBounds2D().getCenterY(), TextAnchor.CENTER, angle, TextAnchor.CENTER);
     if (plotState != null && hotspot != null) {
         ChartRenderingInfo owner = plotState.getOwner();
         EntityCollection entities = owner.getEntityCollection();
