--- com/google/javascript/jscomp/CheckSideEffects.java@visit
+++ com/google/javascript/jscomp/CheckSideEffects.java@visit
@@ -43,18 +43,31 @@
             return;
         }
     }
-    if ((isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-        String msg = "This code lacks side-effects. Is there a bug?";
-        if (n.isString()) {
-            msg = "Is there a missing '+' on the previous line?";
-        } else if (isSimpleOp) {
-            msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator is not being used.";
-        }
-        t.getCompiler().report(t.makeError(n, level, USELESS_CODE_ERROR, msg));
-        // TODO(johnlenz): determine if it is necessary to
-        // try to protect side-effect free statements as well.
-        if (!NodeUtil.isStatement(n)) {
-            problemNodes.add(n);
+    if (!NodeUtil.mayHaveSideEffects(n, t.getCompiler())) {
+        // The statement is side-effect free.
+        // Check if it's a variable declaration.
+        boolean isVarDecl = n.isName() && parent.isVar();
+        // Check if it's an object literal or an array literal.
+        boolean isObjectLiteral = n.isObjectLit();
+        boolean isArrayLiteral = n.isArrayLit();
+        // Check if it's an empty statement.
+        boolean isEmptyStatement = n.isEmpty();
+        // Check if it's a function declaration.
+        boolean isFuncDecl = n.isFunction();
+        // If it's not any of the above, then we assume it's a useless non-side-effect-free statement.
+        if (!isVarDecl && !isObjectLiteral && !isArrayLiteral && !isEmptyStatement && !isFuncDecl) {
+            String msg = "This code lacks side-effects. Is there a bug?";
+            if (n.isString()) {
+                msg = "Is there a missing '+' on the previous line?";
+            } else if (isSimpleOp) {
+                msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator is not being used.";
+            }
+            t.getCompiler().report(t.makeError(n, level, USELESS_CODE_ERROR, msg));
+            // TODO(johnlenz): determine if it is necessary to
+            // try to protect side-effect free statements as well.
+            if (!NodeUtil.isStatement(n)) {
+                problemNodes.add(n);
+            }
         }
     }
 }
