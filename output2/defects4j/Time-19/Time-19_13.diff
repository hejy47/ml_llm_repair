--- org/joda/time/DateTimeZone.java@getOffsetFromLocal
+++ org/joda/time/DateTimeZone.java@getOffsetFromLocal
@@ -1,25 +1,17 @@
 public int getOffsetFromLocal(long instantLocal) {
-    // get the offset at instantLocal (first estimate)
     final int offsetLocal = getOffset(instantLocal);
-    // adjust instantLocal using the estimate and recalc the offset
     final long instantAdjusted = instantLocal - offsetLocal;
     final int offsetAdjusted = getOffset(instantAdjusted);
-    // if the offsets differ, we must be near a DST boundary
     if (offsetLocal != offsetAdjusted) {
-        // we need to ensure that time is always after the DST gap
-        // this happens naturally for positive offsets, but not for negative
         if ((offsetLocal - offsetAdjusted) < 0) {
-            // if we just return offsetAdjusted then the time is pushed
-            // back before the transition, whereas it should be
-            // on or after the transition
             long nextLocal = nextTransition(instantAdjusted);
-            long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
+            long nextAdjusted = nextTransition(instantLocal - offsetLocal + 1);
             if (nextLocal != nextAdjusted) {
                 return offsetLocal;
             }
         }
     } else if (offsetLocal > 0) {
-        long prev = previousTransition(instantAdjusted);
+        long prev = previousTransition(instantAdjusted - 1);
         if (prev < instantAdjusted) {
             int offsetPrev = getOffset(prev);
             int diff = offsetPrev - offsetLocal;
