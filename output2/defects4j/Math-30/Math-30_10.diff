--- org/apache/commons/math3/stat/inference/MannWhitneyUTest.java@calculateAsymptoticPValue
+++ org/apache/commons/math3/stat/inference/MannWhitneyUTest.java@calculateAsymptoticPValue
@@ -1,9 +1,13 @@
 private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException {
     final int n1n2prod = n1 * n2;
+    // make sure n1n2prod is greater than zero
+    if (n1n2prod <= 0) {
+        throw new IllegalArgumentException("n1 * n2 must be a positive number");
+    }
     // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
-    final NormalDistribution standardNormal = new NormalDistribution(0, 1);
-    return 2 * standardNormal.cumulativeProbability(z);
+    final NormalDistribution standardNormal = new NormalDistribution();
+    return 2 * standardNormal.cumulativeProbability(-FastMath.abs(z));
 }
