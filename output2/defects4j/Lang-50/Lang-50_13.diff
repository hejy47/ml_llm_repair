--- org/apache/commons/lang/time/FastDateFormat.java@getDateInstance
+++ org/apache/commons/lang/time/FastDateFormat.java@getDateInstance
@@ -1,21 +1,19 @@
 public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale) {
-    Object key = new Integer(style);
-    if (timeZone != null) {
-        key = new Pair(key, timeZone);
-    }
-    if (locale != null) {
-        key = new Pair(key, locale);
-    }
+    Object key = new Object[]{style, timeZone, locale};
     FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
     if (format == null) {
         if (locale == null) {
             locale = Locale.getDefault();
         }
         try {
-            SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
-            String pattern = formatter.toPattern();
-            format = getInstance(pattern, timeZone, locale);
-            cDateInstanceCache.put(key, format);
+            DateFormat formatter = DateFormat.getDateInstance(style, locale);
+            if (formatter instanceof SimpleDateFormat) {
+                String pattern = ((SimpleDateFormat) formatter).toPattern();
+                format = getInstance(pattern, timeZone, locale);
+                cDateInstanceCache.put(key, format);
+            } else {
+                throw new IllegalArgumentException("No date pattern for locale: " + locale);
+            }
         } catch (ClassCastException ex) {
             throw new IllegalArgumentException("No date pattern for locale: " + locale);
         }
--- org/apache/commons/lang/time/FastDateFormat.java@getDateTimeInstance
+++ org/apache/commons/lang/time/FastDateFormat.java@getDateTimeInstance
@@ -1,21 +1,19 @@
 public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale) {
-    Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
-    if (timeZone != null) {
-        key = new Pair(key, timeZone);
-    }
-    if (locale != null) {
-        key = new Pair(key, locale);
-    }
+    Object key = new Object[]{dateStyle, timeStyle, timeZone, locale};
     FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
     if (format == null) {
         if (locale == null) {
             locale = Locale.getDefault();
         }
         try {
-            SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);
-            String pattern = formatter.toPattern();
-            format = getInstance(pattern, timeZone, locale);
-            cDateTimeInstanceCache.put(key, format);
+            DateFormat formatter = DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);
+            if (formatter instanceof SimpleDateFormat) {
+                String pattern = ((SimpleDateFormat) formatter).toPattern();
+                format = getInstance(pattern, timeZone, locale);
+                cDateTimeInstanceCache.put(key, format);
+            } else {
+                throw new IllegalArgumentException("No date time pattern for locale: " + locale);
+            }
         } catch (ClassCastException ex) {
             throw new IllegalArgumentException("No date time pattern for locale: " + locale);
         }
