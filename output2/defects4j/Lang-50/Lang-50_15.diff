--- org/apache/commons/lang/time/FastDateFormat.java@getDateInstance
+++ org/apache/commons/lang/time/FastDateFormat.java@getDateInstance
@@ -8,16 +8,21 @@
     }
     FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
     if (format == null) {
-        if (locale == null) {
-            locale = Locale.getDefault();
-        }
-        try {
-            SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
-            String pattern = formatter.toPattern();
-            format = getInstance(pattern, timeZone, locale);
-            cDateInstanceCache.put(key, format);
-        } catch (ClassCastException ex) {
-            throw new IllegalArgumentException("No date pattern for locale: " + locale);
+        synchronized(FastDateFormat.class) { // synchronize on class object
+            format = (FastDateFormat) cDateInstanceCache.get(key); // re-check format after acquiring lock
+            if (format == null) { // if format is still null, create new instance
+                if (locale == null) {
+                    locale = Locale.getDefault();
+                }
+                try {
+                    SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
+                    String pattern = formatter.toPattern();
+                    format = getInstance(pattern, timeZone, locale);
+                    cDateInstanceCache.put(key, format);
+                } catch (ClassCastException ex) {
+                    throw new IllegalArgumentException("No date pattern for locale: " + locale);
+                }
+            }
         }
     }
     return format;
--- org/apache/commons/lang/time/FastDateFormat.java@getDateTimeInstance
+++ org/apache/commons/lang/time/FastDateFormat.java@getDateTimeInstance
@@ -8,16 +8,21 @@
     }
     FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
     if (format == null) {
-        if (locale == null) {
-            locale = Locale.getDefault();
-        }
-        try {
-            SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);
-            String pattern = formatter.toPattern();
-            format = getInstance(pattern, timeZone, locale);
-            cDateTimeInstanceCache.put(key, format);
-        } catch (ClassCastException ex) {
-            throw new IllegalArgumentException("No date time pattern for locale: " + locale);
+        synchronized(FastDateFormat.class) { // synchronize on class object
+            format = (FastDateFormat) cDateTimeInstanceCache.get(key); // re-check format after acquiring lock
+            if (format == null) { // if format is still null, create new instance
+                if (locale == null) {
+                    locale = Locale.getDefault();
+                }
+                try {
+                    SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);
+                    String pattern = formatter.toPattern();
+                    format = getInstance(pattern, timeZone, locale);
+                    cDateTimeInstanceCache.put(key, format);
+                } catch (ClassCastException ex) {
+                    throw new IllegalArgumentException("No date time pattern for locale: " + locale);
+                }
+            }
         }
     }
     return format;
