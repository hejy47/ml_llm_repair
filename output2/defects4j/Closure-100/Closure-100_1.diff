--- com/google/javascript/jscomp/CheckGlobalThis.java@shouldTraverse
+++ com/google/javascript/jscomp/CheckGlobalThis.java@shouldTraverse
@@ -11,7 +11,30 @@
         // var a = function() { }; // or
         // function a() {} // or
         // a.x = function() {};
+        if (n.getFirstChild().isName() || n.getFirstChild().isFunction()) {
+            return true;
+        }
+        if (n.getFirstChild().isGetProp()) {
+            Node target = n.getFirstChild().getFirstChild();
+            // Check if the target is an object-literal.
+            if (target != null && target.isObjectLit()) {
+                return true;
+            }
+            // Check if the target is a function call that returns
+            // an object-literal.
+            if (target != null && target.isCall()) {
+                Node functionNode = target.getFirstChild();
+                if (functionNode != null && functionNode.isName()) {
+                    String functionName = functionNode.getString();
+                    if (isCreateObject(functionName)) {
+                        return true;
+                    }
+                }
+            }
+        }
+        return false;
     }
+
     if (parent != null && parent.getType() == Token.ASSIGN) {
         Node lhs = parent.getFirstChild();
         Node rhs = lhs.getNext();
--- com/google/javascript/jscomp/CheckGlobalThis.java@shouldReportThis
+++ com/google/javascript/jscomp/CheckGlobalThis.java@shouldReportThis
@@ -1,8 +1,19 @@
 private boolean shouldReportThis(Node n, Node parent) {
-    if (assignLhsChild != null) {
-        // Always report a THIS on the left side of an assign.
-        return true;
+    if (n.isThis()) {
+        if (assignLhsChild != null && !NodeUtil.isLValue(n)) {
+            return true;
+        }
+        if (NodeUtil.isGetProp(n.getParent())) {
+            Node target = n.getParent().getFirstChild();
+            if (target.getType() == Token.THIS) {
+                // report this.someProp
+                return true;
+            }
+            if (target.isName() && isCreateObject(target.getString())) {
+                // report goog.createInstance().someProp
+                return true;
+            }
+        }
     }
-    // Also report a THIS with a property access.
     return false;
 }
