--- org/joda/time/field/UnsupportedDurationField.java@compareTo
+++ org/joda/time/field/UnsupportedDurationField.java@compareTo
@@ -1,6 +1,6 @@
 public int compareTo(DurationField durationField) {
-    if (durationField.isSupported()) {
-        return 1;
+    if (durationField == null || !durationField.isSupported()) {
+        return -1;
     }
     return 0;
 }
--- org/joda/time/Partial.java@Partial
+++ org/joda/time/Partial.java@Partial
@@ -26,8 +26,8 @@
         DateTimeFieldType loopType = types[i];
         DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
         if (i > 0) {
-            int compare = lastUnitField.compareTo(loopUnitField);
-            if (compare < 0) {
+            int compare = loopUnitField.compareTo(lastUnitField);
+            if (compare > 0) {
                 throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
             } else if (compare == 0) {
                 if (types[i - 1].getRangeDurationType() == null) {
@@ -40,7 +40,7 @@
                     }
                     DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);
                     DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
-                    if (lastRangeField.compareTo(loopRangeField) < 0) {
+                    if (lastRangeField.compareTo(loopRangeField) > 0) {
                         throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
                     }
                     if (lastRangeField.compareTo(loopRangeField) == 0) {
