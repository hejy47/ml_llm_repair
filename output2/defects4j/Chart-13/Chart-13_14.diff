--- org/jfree/chart/block/BorderArrangement.java@arrangeFF
+++ org/jfree/chart/block/BorderArrangement.java@arrangeFF
@@ -15,18 +15,18 @@
     }
     h[2] = constraint.getHeight() - h[1] - h[0];
     if (this.leftBlock != null) {
-        RectangleConstraint c3 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth()), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);
+        RectangleConstraint c3 = new RectangleConstraint(0.0, new Range(0.0, w[0] - w[4]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);
         Size2D size = this.leftBlock.arrange(g2, c3);
         w[2] = size.width;
     }
     h[3] = h[2];
     if (this.rightBlock != null) {
-        RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);
+        RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, w[0] - w[4] - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);
         Size2D size = this.rightBlock.arrange(g2, c4);
         w[3] = size.width;
     }
     h[4] = h[2];
-    w[4] = constraint.getWidth() - w[3] - w[2];
+    w[4] = w[0] - w[3] - w[2];
     RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
     if (this.centerBlock != null) {
         this.centerBlock.arrange(g2, c5);
