--- com/google/javascript/jscomp/PeepholeOptimizationsPass.java@traverse
+++ com/google/javascript/jscomp/PeepholeOptimizationsPass.java@traverse
@@ -3,11 +3,8 @@
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
-    if (!shouldVisit(node)) {
-        return;
-    }
     int visits = 0;
-    do {
+    while (shouldVisit(node) && shouldRetraverse(node)) {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
@@ -16,7 +13,7 @@
         }
         visit(node);
         visits++;
-        Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+        Preconditions.checkState(visits < 10000, "too many iterations");
+    }
     exitNode(node);
 }
