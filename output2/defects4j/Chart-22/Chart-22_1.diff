--- org/jfree/data/KeyedObjects2D.java@getObject
+++ org/jfree/data/KeyedObjects2D.java@getObject
@@ -13,7 +13,7 @@
     if (column < 0) {
         throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
     }
-    if (row >= 0) {
+    if (column >= 0) {  // fix: check column index instead of row index
         KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
         return rowData.getObject(columnKey);
     } else {
--- org/jfree/data/KeyedObjects2D.java@removeObject
+++ org/jfree/data/KeyedObjects2D.java@removeObject
@@ -13,6 +13,22 @@
     if (allNull) {
         this.rowKeys.remove(rowIndex);
         this.rows.remove(rowIndex);
+        rowIndex--; // fix: decrement row index after removing row
     }
     // 2. check whether the column is now empty.
+    boolean allNull2 = true; // fix: add this boolean to track if column is all null
+    for (int i = 0; i < this.rows.size(); i++) {
+        KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+        if (rowData.getObject(columnKey) != null) {
+            allNull2 = false;
+            break;
+        }
+    }
+    if (allNull2) {
+        this.columnKeys.remove(columnKey);
+        for (int i = 0; i < this.rows.size(); i++) {
+            KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+            rowData.removeValue(columnKey);
+        }
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeRow
+++ org/jfree/data/KeyedObjects2D.java@removeRow
@@ -1,4 +1,6 @@
 public void removeRow(Comparable rowKey) {
     int index = getRowIndex(rowKey);
-    removeRow(index);
+    if (index >= 0) { // fix: check if index is >= 0 before removing row
+        removeRow(index);
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeColumn
+++ org/jfree/data/KeyedObjects2D.java@removeColumn
@@ -1,12 +1,13 @@
 public void removeColumn(Comparable columnKey) {
     int index = getColumnIndex(columnKey);
-    if (index < 0) {
+    if (index >= 0) { // fix: check if index is >= 0 before removing column
+        Iterator iterator = this.rows.iterator();
+        while (iterator.hasNext()) {
+            KeyedObjects rowData = (KeyedObjects) iterator.next();
+            rowData.removeValue(columnKey);
+        }
+        this.columnKeys.remove(columnKey);
+    } else {
         throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
     }
-    Iterator iterator = this.rows.iterator();
-    while (iterator.hasNext()) {
-        KeyedObjects rowData = (KeyedObjects) iterator.next();
-        rowData.removeValue(columnKey);
-    }
-    this.columnKeys.remove(columnKey);
 }
