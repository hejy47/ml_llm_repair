--- org/jfree/data/KeyedObjects2D.java@getObject
+++ org/jfree/data/KeyedObjects2D.java@getObject
@@ -13,7 +13,7 @@
     if (column < 0) {
         throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
     }
-    if (row >= 0) {
+    if (column >= 0) { // fix: check column index instead of row index
         KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
         return rowData.getObject(columnKey);
     } else {
--- org/jfree/data/KeyedObjects2D.java@removeObject
+++ org/jfree/data/KeyedObjects2D.java@removeObject
@@ -1,8 +1,11 @@
 public void removeObject(Comparable rowKey, Comparable columnKey) {
+    int rowIndex = getRowIndex(rowKey);
+    if (rowIndex < 0) { // fix: check if rowKey is valid
+        return;
+    }
     setObject(null, rowKey, columnKey);
     // 1. check whether the row is now empty.
     boolean allNull = true;
-    int rowIndex = getRowIndex(rowKey);
     KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);
     for (int item = 0, itemCount = row.getItemCount(); item < itemCount; item++) {
         if (row.getObject(item) != null) {
@@ -15,4 +18,23 @@
         this.rows.remove(rowIndex);
     }
     // 2. check whether the column is now empty.
+    int columnIndex = getColumnIndex(columnKey);
+    if (columnIndex < 0) { // fix: check if columnKey is valid
+        return;
+    }
+    allNull = true;
+    for (int i = 0, rowCount = this.getRowCount(); i < rowCount; i++) {
+        KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+        if (rowData.getObject(columnKey) != null) {
+            allNull = false;
+            break;
+        }
+    }
+    if (allNull) {
+        for (int i = 0, rowCount = this.getRowCount(); i < rowCount; i++) {
+            KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+            rowData.removeValue(columnKey);
+        }
+        this.columnKeys.remove(columnIndex);
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeRow
+++ org/jfree/data/KeyedObjects2D.java@removeRow
@@ -1,4 +1,7 @@
 public void removeRow(Comparable rowKey) {
     int index = getRowIndex(rowKey);
-    removeRow(index);
+    if (index >= 0) { // fix: check if rowKey is valid
+        this.rowKeys.remove(index);
+        this.rows.remove(index);
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeColumn
+++ org/jfree/data/KeyedObjects2D.java@removeColumn
@@ -8,5 +8,5 @@
         KeyedObjects rowData = (KeyedObjects) iterator.next();
         rowData.removeValue(columnKey);
     }
-    this.columnKeys.remove(columnKey);
+    this.columnKeys.remove(index); // fix: remove by index instead of key
 }
