--- org/apache/commons/math/complex/Complex.java@divide
+++ org/apache/commons/math/complex/Complex.java@divide
@@ -4,10 +4,9 @@
         return NaN;
     }
     if (divisor.isZero) {
-        // return isZero ? NaN : INF; // See MATH-657
         return isZero ? NaN : INF;
     }
-    if (divisor.isInfinite() && !isInfinite()) {
+    if (divisor.isInfinite() && !isInfinite() && !isZero) {
         return ZERO;
     }
     final double c = divisor.getReal();
--- org/apache/commons/math/complex/Complex.java@divide1
+++ org/apache/commons/math/complex/Complex.java@divide1
@@ -3,7 +3,6 @@
         return NaN;
     }
     if (divisor == 0d) {
-        // return isZero ? NaN : INF; // See MATH-657
         return isZero ? NaN : INF;
     }
     if (Double.isInfinite(divisor)) {
