--- com/google/javascript/jscomp/NodeUtil.java@getStringNumberValue
+++ com/google/javascript/jscomp/NodeUtil.java@getStringNumberValue
@@ -1,7 +1,6 @@
 static Double getStringNumberValue(String rawJsString) {
     // vertical tab is not always whitespace
     String s = trimJsWhiteSpace(rawJsString);
-    // return ScriptRuntime.toNumber(s);
     if (s.length() == 0) {
         return 0.0;
     }
@@ -15,12 +14,12 @@
     }
     if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {
         // hex numbers with explicit signs vary between browsers.
-        return null;
+        return Double.NaN;
     }
     // FireFox and IE treat the "Infinity" differently. FireFox is case
     // insensitive, but IE treats "infinity" as NaN.  So leave it alone.
-    if (s.equals("infinity") || s.equals("-infinity") || s.equals("+infinity")) {
-        return null;
+    if (s.equalsIgnoreCase("infinity") || s.equalsIgnoreCase("-infinity") || s.equalsIgnoreCase("+infinity")) {
+        return Double.NaN;
     }
     try {
         return Double.parseDouble(s);
--- com/google/javascript/jscomp/NodeUtil.java@isStrWhiteSpaceChar
+++ com/google/javascript/jscomp/NodeUtil.java@isStrWhiteSpaceChar
@@ -23,6 +23,6 @@
         '\uFEFF':
             return TernaryValue.TRUE;
         default:
-            return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;
+            return (Character.getType(c) == Character.SPACE_SEPARATOR || Character.isWhitespace(c)) ? TernaryValue.TRUE : TernaryValue.FALSE;
     }
 }
