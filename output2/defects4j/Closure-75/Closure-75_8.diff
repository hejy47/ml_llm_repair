--- com/google/javascript/jscomp/NodeUtil.java@getStringNumberValue
+++ com/google/javascript/jscomp/NodeUtil.java@getStringNumberValue
@@ -10,6 +10,8 @@
         try {
             return Double.valueOf(Integer.parseInt(s.substring(2), 16));
         } catch (NumberFormatException e) {
+            return Double.NaN;
+        } catch (NullPointerException e) { // add this catch for cases where s is null
             return Double.NaN;
         }
     }
@@ -26,5 +28,7 @@
         return Double.parseDouble(s);
     } catch (NumberFormatException e) {
         return Double.NaN;
+    } catch (NullPointerException e) { // add this catch for cases where s is null
+        return Double.NaN;
     }
 }
--- com/google/javascript/jscomp/NodeUtil.java@isStrWhiteSpaceChar
+++ com/google/javascript/jscomp/NodeUtil.java@isStrWhiteSpaceChar
@@ -1,27 +1,32 @@
 static TernaryValue isStrWhiteSpaceChar(int c) {
     switch(c) {
-        case // <VT>
-        '\u000B':
+        case '\u0009': // <TAB>
+        case '\u000B': // <VT>
+        case '\u000C': // <FF>
+        case '\u0020': // <SP>
+        case '\u00A0': // <NBSP>
+        case '\u1680': // <OGHAM SPACE MARK>
+        case '\u180E': // <MONGOLIAN VOWEL SEPARATOR>
+        case '\u2000': // <EN QUAD>
+        case '\u2001': // <EM QUAD>
+        case '\u2002': // <EN SPACE>
+        case '\u2003': // <EM SPACE>
+        case '\u2004': // <THREE-PER-EM SPACE>
+        case '\u2005': // <FOUR-PER-EM SPACE>
+        case '\u2006': // <SIX-PER-EM SPACE>
+        case '\u2007': // <FIGURE SPACE>
+        case '\u2008': // <PUNCTUATION SPACE>
+        case '\u2009': // <THIN SPACE>
+        case '\u200A': // <HAIR SPACE>
+        case '\u202F': // <NARROW NO-BREAK SPACE>
+        case '\u205F': // <MEDIUM MATHEMATICAL SPACE>
+        case '\u3000': // <IDEOGRAPHIC SPACE>
             return TernaryValue.TRUE;
-        // <SP>
-        case ' ':
-        // <LF>
-        case '\n':
-        // <CR>
-        case '\r':
-        // <TAB>
-        case '\t':
-        // <NBSP>
-        case '\u00A0':
-        // <FF>
-        case '\u000C':
-        // <LS>
-        case '\u2028':
-        // <PS>
-        case '\u2029':
-        case // <BOM>
-        '\uFEFF':
-            return TernaryValue.TRUE;
+        case '\u000A': // <LF>
+        case '\u000D': // <CR>
+        case '\u2028': // <LS>
+        case '\u2029': // <PS>
+            return TernaryValue.LINEBREAK;
         default:
             return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;
     }
