--- org/apache/commons/math/linear/SingularValueDecompositionImpl.java@getU
+++ org/apache/commons/math/linear/SingularValueDecompositionImpl.java@getU
@@ -15,7 +15,8 @@
                 ei1 = eData[i + 1];
                 final double si = secondaryBidiagonal[i];
                 for (int j = 0; j < p; ++j) {
-                    wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j];
+                    // Fixed division by zero by checking singularValues[j] != 0
+                    wi[j] = singularValues[j] != 0 ? (mi * ei0[j] + si * ei1[j]) / singularValues[j] : 0;
                 }
             }
             for (int j = 0; j < p; ++j) {
--- org/apache/commons/math/linear/SingularValueDecompositionImpl.java@getV
+++ org/apache/commons/math/linear/SingularValueDecompositionImpl.java@getV
@@ -19,7 +19,8 @@
                 ei1 = eData[i + 1];
                 final double si = secondaryBidiagonal[i];
                 for (int j = 0; j < p; ++j) {
-                    wi[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j];
+                    // Fixed division by zero by checking singularValues[j] != 0
+                    wi[j] = singularValues[j] != 0 ? (mi * ei0[j] + si * ei1[j]) / singularValues[j] : 0;
                 }
             }
             for (int j = 0; j < p; ++j) {
