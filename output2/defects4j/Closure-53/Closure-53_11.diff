--- com/google/javascript/jscomp/InlineObjectLiterals.java@replaceAssignmentExpression
+++ com/google/javascript/jscomp/InlineObjectLiterals.java@replaceAssignmentExpression
@@ -7,7 +7,7 @@
     Set<String> all = Sets.newLinkedHashSet(varmap.keySet());
     for (Node key = val.getFirstChild(); key != null; key = key.getNext()) {
         String var = key.getString();
-        Node value = key.removeFirstChild();
+        Node value = key.getLastChild();
         // TODO(user): Copy type information.
         nodes.add(new Node(Token.ASSIGN, Node.newString(Token.NAME, varmap.get(var)), value));
         all.remove(var);
@@ -27,14 +27,13 @@
     replacement = new Node(Token.COMMA);
     Node cur = replacement;
     int i;
-    for (i = 0; i < nodes.size() - 2; i++) {
+    for (i = 0; i < nodes.size() - 1; i++) {
         cur.addChildToFront(nodes.get(i));
         Node t = new Node(Token.COMMA);
-        cur.addChildToFront(t);
+        cur.addChildToBack(t);
         cur = t;
     }
     cur.addChildToFront(nodes.get(i));
-    cur.addChildToFront(nodes.get(i + 1));
     Node replace = ref.getParent();
     replacement.copyInformationFromForTree(replace);
     if (replace.getType() == Token.VAR) {
