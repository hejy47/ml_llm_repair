--- org/apache/commons/lang3/text/translate/LookupTranslator.java@LookupTranslator
+++ org/apache/commons/lang3/text/translate/LookupTranslator.java@LookupTranslator
@@ -4,13 +4,15 @@
     int _longest = 0;
     if (lookup != null) {
         for (final CharSequence[] seq : lookup) {
-            this.lookupMap.put(seq[0], seq[1]);
-            final int sz = seq[0].length();
-            if (sz < _shortest) {
-                _shortest = sz;
-            }
-            if (sz > _longest) {
-                _longest = sz;
+            if(seq != null && seq.length == 2) { // Check if seq is valid
+                this.lookupMap.put(seq[0], seq[1]);
+                final int sz = seq[0].length();
+                if (sz < _shortest) {
+                    _shortest = sz;
+                }
+                if (sz > _longest) {
+                    _longest = sz;
+                }
             }
         }
     }
--- org/apache/commons/lang3/text/translate/LookupTranslator.java@translate
+++ org/apache/commons/lang3/text/translate/LookupTranslator.java@translate
@@ -6,6 +6,9 @@
     }
     // descend so as to get a greedy algorithm
     for (int i = max; i >= shortest; i--) {
+        if (index + i > input.length()) { // Check if the index is out of bounds
+            continue;
+        }
         final CharSequence subSeq = input.subSequence(index, index + i);
         final CharSequence result = lookupMap.get(subSeq);
         if (result != null) {
