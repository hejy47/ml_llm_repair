--- org/joda/time/field/UnsupportedDurationField.java@compareTo
+++ org/joda/time/field/UnsupportedDurationField.java@compareTo
@@ -1,3 +1,12 @@
 public int compareTo(DurationField durationField) {
-    return 0;
+    if (durationField == null) {
+        throw new NullPointerException("The duration field must not be null");
+    }
+    if (getUnitMillis() < durationField.getUnitMillis()) {
+        return -1;
+    } else if (getUnitMillis() > durationField.getUnitMillis()) {
+        return 1;
+    } else {
+        return 0;
+    }
 }
--- org/joda/time/Partial.java@Partial
+++ org/joda/time/Partial.java@Partial
@@ -25,9 +25,12 @@
     for (int i = 0; i < types.length; i++) {
         DateTimeFieldType loopType = types[i];
         DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
+        if (!loopUnitField.isSupported()) {
+            throw new IllegalArgumentException("Field '" + loopType + "' is not supported");
+        }
         if (i > 0) {
             int compare = lastUnitField.compareTo(loopUnitField);
-            if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
+            if (compare < 0) {
                 throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
             } else if (compare == 0) {
                 if (types[i - 1].getRangeDurationType() == null) {
--- org/joda/time/Partial.java@with
+++ org/joda/time/Partial.java@with
@@ -19,6 +19,12 @@
                     if (compare > 0) {
                         break;
                     } else if (compare == 0) {
+                        if (fieldType.getRangeDurationType() == null) {
+                            throw new IllegalArgumentException("Field '" + fieldType + "' does not have a range");
+                        }
+                        if (loopType.getRangeDurationType() == null) {
+                            throw new IllegalArgumentException("Field '" + loopType + "' does not have a range");
+                        }
                         DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);
                         DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
                         if (rangeField.compareTo(loopRangeField) > 0) {
