--- org/apache/commons/math3/fraction/Fraction.java@Fraction
+++ org/apache/commons/math3/fraction/Fraction.java@Fraction
@@ -1,5 +1,5 @@
 private Fraction(double value, double epsilon, int maxDenominator, int maxIterations) throws FractionConversionException {
-    long overflow = Integer.MAX_VALUE;
+    long overflow = (long) Integer.MAX_VALUE;
     double r0 = value;
     long a0 = (long) FastMath.floor(r0);
     if (a0 > overflow) {
@@ -24,9 +24,9 @@
         ++n;
         double r1 = 1.0 / (r0 - a0);
         long a1 = (long) FastMath.floor(r1);
-        p2 = (a1 * p1) + p0;
-        q2 = (a1 * q1) + q0;
-        if ((p2 > overflow) || (q2 > overflow)) {
+        p2 = a1 * p1 + p0;
+        q2 = a1 * q1 + q0;
+        if (q2 > overflow) {
             throw new FractionConversionException(value, p2, q2);
         }
         double convergent = (double) p2 / (double) q2;
