--- org/apache/commons/math3/fraction/Fraction.java@Fraction
+++ org/apache/commons/math3/fraction/Fraction.java@Fraction
@@ -24,9 +24,9 @@
         ++n;
         double r1 = 1.0 / (r0 - a0);
         long a1 = (long) FastMath.floor(r1);
-        p2 = (a1 * p1) + p0;
-        q2 = (a1 * q1) + q0;
-        if ((p2 > overflow) || (q2 > overflow)) {
+        p2 = a1 * p1 + p0;
+        q2 = a1 * q1 + q0;
+        if (q2 <= 0 || q2 > maxDenominator || p2 > overflow) {
             throw new FractionConversionException(value, p2, q2);
         }
         double convergent = (double) p2 / (double) q2;
@@ -44,11 +44,6 @@
     if (n >= maxIterations) {
         throw new FractionConversionException(value, maxIterations);
     }
-    if (q2 < maxDenominator) {
-        this.numerator = (int) p2;
-        this.denominator = (int) q2;
-    } else {
-        this.numerator = (int) p1;
-        this.denominator = (int) q1;
-    }
+    this.numerator = (int) p2;
+    this.denominator = (int) q2;
 }
