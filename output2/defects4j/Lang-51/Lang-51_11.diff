--- org/apache/commons/lang/BooleanUtils.java@toBoolean
+++ org/apache/commons/lang/BooleanUtils.java@toBoolean
@@ -1,45 +1,19 @@
 // String to boolean methods
 //-----------------------------------------------------------------------
 public static boolean toBoolean(String str) {
-    // Previously used equalsIgnoreCase, which was fast for interned 'true'.
-    // Non interned 'true' matched 15 times slower.
-    //
-    // Optimisation provides same performance as before for interned 'true'.
-    // Similar performance for null, 'false', and other strings not length 2/3/4.
-    // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
-    if (str == "true") {
-        return true;
-    }
+    // Use equals() instead of == for comparing strings
+    // Use Boolean.parseBoolean() for performance improvement
+    // Simplify the case statements
     if (str == null) {
         return false;
     }
-    switch(str.length()) {
-        case 2:
-            {
-                char ch0 = str.charAt(0);
-                char ch1 = str.charAt(1);
-                return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');
-            }
-        case 3:
-            {
-                char ch = str.charAt(0);
-                if (ch == 'y') {
-                    return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');
-                }
-                if (ch == 'Y') {
-                    return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');
-                }
-            }
-        case 4:
-            {
-                char ch = str.charAt(0);
-                if (ch == 't') {
-                    return (str.charAt(1) == 'r' || str.charAt(1) == 'R') && (str.charAt(2) == 'u' || str.charAt(2) == 'U') && (str.charAt(3) == 'e' || str.charAt(3) == 'E');
-                }
-                if (ch == 'T') {
-                    return (str.charAt(1) == 'R' || str.charAt(1) == 'r') && (str.charAt(2) == 'U' || str.charAt(2) == 'u') && (str.charAt(3) == 'E' || str.charAt(3) == 'e');
-                }
-            }
+    String lowerCase = str.toLowerCase();
+    switch(lowerCase) {
+        case "true":
+        case "yes":
+        case "on":
+            return true;
+        default:
+            return Boolean.parseBoolean(lowerCase);
     }
-    return false;
 }
