--- com/google/javascript/jscomp/NodeUtil.java@isValidDefineValue
+++ com/google/javascript/jscomp/NodeUtil.java@isValidDefineValue
@@ -10,16 +10,21 @@
         case Token.BITNOT:
         case Token.BITOR:
         case Token.BITXOR:
+            // Check if both children are valid
+            return isValidDefineValue(val.getFirstChild(), defines)
+                    && isValidDefineValue(val.getLastChild(), defines);
         // Uniary operators are valid if the child is valid.
         case Token.NOT:
         case Token.NEG:
             return isValidDefineValue(val.getFirstChild(), defines);
         // Names are valid if and only if they are defines themselves.
         case Token.NAME:
-        case Token.GETPROP:
-            if (val.isQualifiedName()) {
-                return defines.contains(val.getQualifiedName());
+            if (val.isName()) {
+                return defines.contains(val.getString());
+            } else if (val.isGetProp()) {
+                return defines.contains(val.getFirstChild().getQualifiedName());
             }
+            break;
     }
     return false;
 }
