--- com/google/javascript/jscomp/InlineObjectLiterals.java@isInlinableObject
+++ com/google/javascript/jscomp/InlineObjectLiterals.java@isInlinableObject
@@ -1,6 +1,5 @@
 private boolean isInlinableObject(List<Reference> refs) {
-    boolean ret = false;
-    Set<String> validProperties = Sets.newHashSet();
+    Set<String> validProperties = new HashSet<>();
     for (Reference ref : refs) {
         Node name = ref.getNode();
         Node parent = ref.getParent();
@@ -55,6 +54,7 @@
         // but x = {a: 1, b: x.a} is.
         //
         // Also, ES5 getters/setters aren't handled by this pass.
+        Set<Node> seen = new HashSet<>();
         for (Node child = val.getFirstChild(); child != null; child = child.getNext()) {
             if (child.isGetterDef() || child.isSetterDef()) {
                 // ES5 get/set not supported.
@@ -65,21 +65,22 @@
             // Check if childVal is the parent of any of the passed in
             // references, as that is how self-referential assignments
             // will happen.
-            for (Reference t : refs) {
-                Node refNode = t.getParent();
-                while (!NodeUtil.isStatementBlock(refNode)) {
-                    if (refNode == childVal) {
-                        // There's a self-referential assignment
-                        return false;
-                    }
-                    refNode = refNode.getParent();
+            Queue<Node> q = new LinkedList<>();
+            q.add(childVal);
+            while (!q.isEmpty()) {
+                Node node = q.remove();
+                if (parentOfReferences(refs, node)) {
+                    return false;
+                }
+                for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+                    seen.add(c);
+                    q.add(c);
                 }
             }
         }
         // We have found an acceptable object literal assignment. As
         // long as there are no other assignments that mess things up,
         // we can inline.
-        ret = true;
     }
-    return ret;
+    return true;
 }
