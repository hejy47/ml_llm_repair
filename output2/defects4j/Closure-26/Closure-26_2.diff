--- com/google/javascript/jscomp/ProcessCommonJSModules.java@emitOptionalModuleExportsOverride
+++ com/google/javascript/jscomp/ProcessCommonJSModules.java@emitOptionalModuleExportsOverride
@@ -1,4 +1,21 @@
 private void emitOptionalModuleExportsOverride(Node script, String moduleName) {
-    Node moduleExportsProp = IR.getprop(IR.name(moduleName), IR.string("module$exports"));
-    script.addChildToBack(IR.ifNode(moduleExportsProp, IR.block(IR.exprResult(IR.assign(IR.name(moduleName), moduleExportsProp.cloneTree())))).copyInformationFromForTree(script));
+     Node moduleExportsProp = IR.getprop(IR.name(moduleName), IR.string("module$exports"));
+     Node ifNode = IR.ifNode(moduleExportsProp.cloneTree(), IR.block(IR.exprResult(IR.assign(IR.name(moduleName), moduleExportsProp))));
+     ifNode.copyInformationFrom(script);
+     script.addChildToBack(ifNode);
+ }
+
+## Fixed Function 2
+/**
+ * Visits the module.exports statement and sets the node's original name and string value.
+ * @param prop The node representing the module.exports statement.
+ */
+private void visitModuleExports(Node prop) {
+    String moduleName = guessCJSModuleName(prop.getSourceFileName());
+    Node module = prop.getFirstChild();
+    module.putProp(Node.ORIGINALNAME_PROP, "module");
+    module.setString(moduleName);
+    Node exports = module.getNext();
+    exports.putProp(Node.ORIGINALNAME_PROP, "exports");
+    exports.setString("module$exports");
 }
--- com/google/javascript/jscomp/ProcessCommonJSModules.java@visitModuleExports
+++ com/google/javascript/jscomp/ProcessCommonJSModules.java@visitModuleExports
@@ -1,9 +1,9 @@
 private void visitModuleExports(Node prop) {
     String moduleName = guessCJSModuleName(prop.getSourceFileName());
-    Node module = prop.getChildAtIndex(0);
+    Node module = prop.getFirstChild();
     module.putProp(Node.ORIGINALNAME_PROP, "module");
     module.setString(moduleName);
-    Node exports = prop.getChildAtIndex(1);
+    Node exports = module.getNext();
     exports.putProp(Node.ORIGINALNAME_PROP, "exports");
     exports.setString("module$exports");
 }
