--- com/google/javascript/jscomp/NameAnalyzer.java@visit
+++ com/google/javascript/jscomp/NameAnalyzer.java@visit
@@ -1,9 +1,9 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
     // Record global variable and function declarations
-    if (t.inGlobalScope()) {
+    if (t.inGlobalScope() && NodeUtil.isDeclaration(n)) {
         if (NodeUtil.isVarDeclaration(n)) {
-            NameInformation ns = createNameInformation(t, n, parent);
+            NameInformation ns = createNameInformation(t, n.getFirstChild(), parent);
             Preconditions.checkNotNull(ns);
             recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
@@ -13,11 +13,14 @@
                 JsName nameInfo = getName(nameNode.getString(), true);
                 recordSet(nameInfo.name, nameNode);
             }
-        } else if (NodeUtil.isObjectLitKey(n, parent)) {
-            NameInformation ns = createNameInformation(t, n, parent);
+        } else if (NodeUtil.isClassDeclaration(n)) {
+            Node nameNode = n.getFirstChild();
+            NameInformation ns = createNameInformation(t, nameNode, n);
             if (ns != null) {
-                recordSet(ns.name, n);
+                JsName nameInfo = getName(nameNode.getString(), true);
+                recordSet(nameInfo.name, nameNode);
             }
+            refNodes.add(new ClassDefiningFunctionNode(getName(ns.name, false), n, parent, parent.getParent()));
         }
     }
     // Record assignments and call sites
