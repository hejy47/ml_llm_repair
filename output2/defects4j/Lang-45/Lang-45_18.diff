--- org/apache/commons/lang/WordUtils.java@abbreviate
+++ org/apache/commons/lang/WordUtils.java@abbreviate
@@ -1,10 +1,10 @@
 //-----------------------------------------------------------------------
-public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
+public static String abbreviateWithEllipsis(String str, int lower, int upper, String ellipsis) {
     // initial parameter checks
     if (str == null) {
         return null;
     }
-    if (str.length() == 0) {
+    if (str.isEmpty()) {
         return StringUtils.EMPTY;
     }
     // if the lower value is greater than the length of the string,
@@ -19,19 +19,19 @@
         upper = lower;
     }
     StringBuffer result = new StringBuffer();
-    int index = StringUtils.indexOf(str, " ", lower);
+    int index = StringUtils.indexOf(str, StringUtils.SPACE, lower);
     if (index == -1) {
-        result.append(str.substring(0, upper));
-        // only if abbreviation has occured do we append the appendToEnd value
+        result.append(str.substring(lower));
+        // only if abbreviation has occurred do we append the ellipsis value
         if (upper != str.length()) {
-            result.append(StringUtils.defaultString(appendToEnd));
+            result.append(StringUtils.defaultString(ellipsis));
         }
     } else if (index > upper) {
-        result.append(str.substring(0, upper));
-        result.append(StringUtils.defaultString(appendToEnd));
+        result.append(str.substring(lower, upper));
+        result.append(StringUtils.defaultString(ellipsis));
     } else {
-        result.append(str.substring(0, index));
-        result.append(StringUtils.defaultString(appendToEnd));
+        result.append(str.substring(lower, index));
+        result.append(StringUtils.defaultString(ellipsis));
     }
     return result.toString();
 }
