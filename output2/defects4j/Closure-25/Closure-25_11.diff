--- com/google/javascript/jscomp/TypeInference.java@traverseNew
+++ com/google/javascript/jscomp/TypeInference.java@traverseNew
@@ -8,15 +8,9 @@
         if (constructorType.isUnknownType()) {
             type = getNativeType(UNKNOWN_TYPE);
         } else {
-            FunctionType ct = constructorType.toMaybeFunctionType();
-            if (ct == null && constructorType instanceof FunctionType) {
-                // If constructorType is a NoObjectType, then toMaybeFunctionType will
-                // return null. But NoObjectType implements the FunctionType
-                // interface, precisely because it can validly construct objects.
-                ct = (FunctionType) constructorType;
-            }
-            if (ct != null && ct.isConstructor()) {
-                type = ct.getInstanceType();
+            ObjectType ct = constructorType.autobox().toMaybeObjectType();
+            if (ct != null && ct.getConstructor() != null) {
+                type = ct.getConstructor().getInstanceType();
             }
         }
     }
