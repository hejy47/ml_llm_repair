--- com/google/javascript/jscomp/TypeInference.java@traverseNew
+++ com/google/javascript/jscomp/TypeInference.java@traverseNew
@@ -9,11 +9,11 @@
             type = getNativeType(UNKNOWN_TYPE);
         } else {
             FunctionType ct = constructorType.toMaybeFunctionType();
-            if (ct == null && constructorType instanceof FunctionType) {
+            if (ct == null && constructorType.isSubtype(getNativeType(FUNCTION_TYPE_STRING))) {
                 // If constructorType is a NoObjectType, then toMaybeFunctionType will
                 // return null. But NoObjectType implements the FunctionType
                 // interface, precisely because it can validly construct objects.
-                ct = (FunctionType) constructorType;
+                ct = constructorType.toMaybeFunctionType();
             }
             if (ct != null && ct.isConstructor()) {
                 type = ct.getInstanceType();
