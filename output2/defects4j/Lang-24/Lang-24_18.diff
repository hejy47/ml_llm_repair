--- org/apache/commons/lang3/math/NumberUtils.java@isNumber
+++ org/apache/commons/lang3/math/NumberUtils.java@isNumber
@@ -6,13 +6,13 @@
     int sz = chars.length;
     boolean hasExp = false;
     boolean hasDecPoint = false;
-    boolean allowSigns = false;
+    boolean allowSigns = true; // fixing this to true, since we want to handle signs as well
     boolean foundDigit = false;
     // deal with any possible sign up front
-    int start = (chars[0] == '-') ? 1 : 0;
-    if (sz > start + 1) {
-        if (chars[start] == '0' && chars[start + 1] == 'x') {
-            int i = start + 2;
+    int start = 0; // fixing this to always start from 0, since negative sign is already handled
+    if (sz > 1) {
+        if (chars[0] == '0' && chars[1] == 'x') {
+            int i = 2;
             if (i == sz) {
                 // str == "0x"
                 return false;
@@ -26,7 +26,7 @@
             return true;
         }
     }
-    // don't want to loop to the last char, check it afterwords
+    // don't want to loop to the last char, check it afterwards
     sz--;
     // for type qualifiers
     int i = start;
