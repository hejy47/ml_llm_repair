--- com/google/javascript/jscomp/parsing/JsDocInfoParser.java@extractMultilineTextualBlock
+++ com/google/javascript/jscomp/parsing/JsDocInfoParser.java@extractMultilineTextualBlock
@@ -24,20 +24,25 @@
             case STAR:
                 if (ignoreStar) {
                     // Mark the position after the star as the new start of the line.
-                } else {
-                    // The star is part of the comment.
                     if (builder.length() > 0) {
                         builder.append(' ');
                     }
                     builder.append('*');
+                } else {
+                    // The star is part of the comment.
+                    if (builder.length() > 0 && !builder.toString().endsWith(" ")) {
+                        builder.append(' ');
+                    }
+                    builder.append('*');
                 }
+                ignoreStar = true;
                 token = next();
                 continue;
             case EOL:
                 if (option != WhitespaceOption.SINGLE_LINE) {
                     builder.append("\n");
                 }
-                ignoreStar = true;
+                ignoreStar = false;
                 token = next();
                 continue;
             default:
@@ -58,7 +63,7 @@
                     }
                     return new ExtractionInfo(multilineText, token);
                 }
-                if (builder.length() > 0) {
+                if (builder.length() > 0 && !builder.toString().endsWith(" ")) {
                     builder.append(' ');
                 }
                 builder.append(toString(token));
