--- com/google/javascript/jscomp/parsing/IRFactory.java@processForInLoop
+++ com/google/javascript/jscomp/parsing/IRFactory.java@processForInLoop
@@ -1,5 +1,10 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
     // Return the bare minimum to put the AST in a valid state.
-    return newNode(Token.FOR, transform(loopNode.getIterator()), transform(loopNode.getIteratedObject()), transformBlock(loopNode.getBody()));
+    // Call the appropriate method for transforming the loop node body based on the type of loop
+    if (loopNode.getBody().getType() == Token.BLOCK) {
+        return newNode(Token.FOR_IN, transform(loopNode.getIterator()), transform(loopNode.getIteratedObject()), transformBlock(loopNode.getBody()));
+    } else {
+        return newNode(Token.FOR_IN, transform(loopNode.getIterator()), transform(loopNode.getIteratedObject()), transform(loopNode.getBody()));
+    }
 }
