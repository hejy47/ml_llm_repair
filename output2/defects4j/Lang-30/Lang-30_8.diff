--- org/apache/commons/lang3/StringUtils.java@indexOfAny
+++ org/apache/commons/lang3/StringUtils.java@indexOfAny
@@ -10,7 +10,6 @@
         char ch = cs.charAt(i);
         for (int j = 0; j < searchLen; j++) {
             if (searchChars[j] == ch) {
-                // ch is a supplementary character
                 return i;
             }
         }
--- org/apache/commons/lang3/StringUtils.java@containsAny
+++ org/apache/commons/lang3/StringUtils.java@containsAny
@@ -12,7 +12,7 @@
         char ch = cs.charAt(i);
         for (int j = 0; j < searchLength; j++) {
             if (searchChars[j] == ch) {
-                if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {
+                if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                     // missing low surrogate, fine, like String.indexOf(String)
                     if (searchChars[j + 1] == cs.charAt(i + 1)) {
                         return true;
--- org/apache/commons/lang3/StringUtils.java@containsNone
+++ org/apache/commons/lang3/StringUtils.java@containsNone
@@ -11,8 +11,18 @@
         for (int j = 0; j < searchLen; j++) {
             if (searchChars[j] == ch) {
                 // missing low surrogate, fine, like String.indexOf(String)
-                // ch is in the Basic Multilingual Plane
-                return false;
+                if (Character.isHighSurrogate(ch)) {
+                    // missing low surrogate, fine, like String.indexOf(String)
+                    if (j == searchLen - 1) {
+                        return true;
+                    }
+                    if (i < csLen - 1 && searchChars[j + 1] == cs.charAt(i + 1)) {
+                        return true;
+                    }
+                } else {
+                    // ch is in the Basic Multilingual Plane
+                    return false;
+                }
             }
         }
     }
