--- com/google/javascript/jscomp/RemoveUnusedVars.java@removeUnreferencedFunctionArgs
+++ com/google/javascript/jscomp/RemoveUnusedVars.java@removeUnreferencedFunctionArgs
@@ -9,7 +9,8 @@
     //
     // See http://code.google.com/p/closure-compiler/issues/detail?id=253
     Node function = fnScope.getRootNode();
-    Preconditions.checkState(function.isFunction());
+    Preconditions.checkState(NodeUtil.isFunctionExpression(function) || NodeUtil.isArrowFunctionExpression(function)
+        || NodeUtil.isFunctionDeclaration(function));
     if (NodeUtil.isGetOrSetKey(function.getParent())) {
         // The parameters object literal setters can not be removed.
         return;
@@ -20,6 +21,10 @@
         // Strip unreferenced args off the end of the function declaration.
         Node lastArg;
         while ((lastArg = argList.getLastChild()) != null) {
+            if (lastArg.isDefaultValue() || lastArg.isRest()) {
+                // Unreferenced default parameters and rest parameters can't be stripped.
+                break;
+            }
             Var var = fnScope.getVar(lastArg.getString());
             if (!referenced.contains(var)) {
                 argList.removeChild(lastArg);
