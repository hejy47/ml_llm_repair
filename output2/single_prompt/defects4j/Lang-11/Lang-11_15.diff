--- org/apache/commons/lang3/RandomStringUtils.java@random
+++ org/apache/commons/lang3/RandomStringUtils.java@random
@@ -20,7 +20,7 @@
         }
     }
     char[] buffer = new char[count];
-    int gap = end - start;
+    int gap = end - start + 1; // add 1 to include end character
     while (count-- != 0) {
         char ch;
         if (chars == null) {
@@ -29,27 +29,14 @@
             ch = chars[random.nextInt(gap) + start];
         }
         if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) {
-            if (ch >= 56320 && ch <= 57343) {
-                if (count == 0) {
-                    count++;
-                } else {
-                    // low surrogate, insert high surrogate after putting it in
+            if (ch >= 55296 && ch <= 57343) {
+                if (ch < 56320 && count != 0) { // check for high surrogate
                     buffer[count] = ch;
                     count--;
-                    buffer[count] = (char) (55296 + random.nextInt(128));
+                    buffer[count] = (char) (ch + 1);
+                } else {
+                    count++;
                 }
-            } else if (ch >= 55296 && ch <= 56191) {
-                if (count == 0) {
-                    count++;
-                } else {
-                    // high surrogate, insert low surrogate before putting it in
-                    buffer[count] = (char) (56320 + random.nextInt(128));
-                    count--;
-                    buffer[count] = ch;
-                }
-            } else if (ch >= 56192 && ch <= 56319) {
-                // private high surrogate, no effing clue, so skip it
-                count++;
             } else {
                 buffer[count] = ch;
             }
