--- org/jfree/chart/axis/Axis.java@drawLabel
+++ org/jfree/chart/axis/Axis.java@drawLabel
@@ -13,56 +13,53 @@
     FontMetrics fm = g2.getFontMetrics();
     Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);
     Shape hotspot = null;
-    if (edge == RectangleEdge.TOP) {
+    double labelx, labely;
+
+    if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {
         AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
         Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
         labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) dataArea.getCenterX();
-        float labely = (float) (state.getCursor() - insets.getBottom() - h / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorUp(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
-    } else if (edge == RectangleEdge.BOTTOM) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
+        double w = labelBounds.getWidth();
+        double h = labelBounds.getHeight();
+
+        labelx = dataArea.getCenterX();
+        if (edge == RectangleEdge.TOP) {
+            labely = state.getCursor() - insets.getBottom() - h / 2.0;
+            state.cursorUp(insets.getTop() + h + insets.getBottom());
+        } else { // BOTTOM
+            labely = state.getCursor() + insets.getTop() + h / 2.0;
+            state.cursorDown(insets.getTop() + h + insets.getBottom());
+        }
+
+        hotspot = new Rectangle2D.Double(labelx - w / 2.0, labely - h / 2.0, w, h);
+        TextUtilities.drawRotatedString(label, g2, (float) labelx, (float) labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
+    } else if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {
+        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() - (Math.PI / 2.0), labelBounds.getCenterX(), labelBounds.getCenterY());
         Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
         labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) dataArea.getCenterX();
-        float labely = (float) (state.getCursor() + insets.getTop() + h / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorDown(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
-    } else if (edge == RectangleEdge.LEFT) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) (state.getCursor() - insets.getRight() - w / 2.0);
-        float labely = (float) dataArea.getCenterY();
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorLeft(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
-    } else if (edge == RectangleEdge.RIGHT) {
-        AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() + Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
-        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-        labelBounds = rotatedLabelBounds.getBounds2D();
-        float w = (float) labelBounds.getWidth();
-        float h = (float) labelBounds.getHeight();
-        float labelx = (float) (state.getCursor() + insets.getLeft() + w / 2.0);
-        float labely = (float) (dataArea.getY() + dataArea.getHeight() / 2.0);
-        TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, TextAnchor.CENTER);
-        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorRight(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
+        double w = labelBounds.getWidth();
+        double h = labelBounds.getHeight();
+
+        labely = dataArea.getCenterY();
+        if (edge == RectangleEdge.LEFT) {
+            labelx = state.getCursor() - insets.getRight() - w / 2.0;
+            state.cursorLeft(insets.getLeft() + w + insets.getRight());
+        } else { // RIGHT
+            labelx = state.getCursor() + insets.getLeft() + w / 2.0;
+            state.cursorRight(insets.getLeft() + w + insets.getRight());
+        }
+
+        hotspot = new Rectangle2D.Double(labelx - w / 2.0, labely - h / 2.0, w, h);
+        TextUtilities.drawRotatedString(label, g2, (float) labelx, (float) labely, TextAnchor.CENTER, getLabelAngle() - (Math.PI / 2.0), TextAnchor.CENTER);
     }
+
     if (plotState != null && hotspot != null) {
         ChartRenderingInfo owner = plotState.getOwner();
-        EntityCollection entities = owner.getEntityCollection();
-        if (entities != null) {
-            entities.add(new AxisLabelEntity(this, hotspot, this.labelToolTip, this.labelURL));
+        if (owner != null) {
+            EntityCollection entities = owner.getEntityCollection();
+            if (entities != null) {
+                entities.add(new AxisLabelEntity(hotspot, this.labelToolTip, this.labelURL));
+            }
         }
     }
     return state;
