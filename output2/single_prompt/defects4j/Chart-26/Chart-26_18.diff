--- org/jfree/chart/axis/Axis.java@drawLabel
+++ org/jfree/chart/axis/Axis.java@drawLabel
@@ -23,7 +23,7 @@
         float labely = (float) (state.getCursor() - insets.getBottom() - h / 2.0);
         TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
         hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorUp(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
+        state.cursorUp(insets.getTop() + h + insets.getBottom()); // Fixes issue with incorrect cursor positioning
     } else if (edge == RectangleEdge.BOTTOM) {
         AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
         Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
@@ -34,7 +34,7 @@
         float labely = (float) (state.getCursor() + insets.getTop() + h / 2.0);
         TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
         hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorDown(insets.getTop() + labelBounds.getHeight() + insets.getBottom());
+        state.cursorDown(insets.getTop() + h + insets.getBottom()); // Fixes issue with incorrect cursor positioning
     } else if (edge == RectangleEdge.LEFT) {
         AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
         Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
@@ -45,7 +45,7 @@
         float labely = (float) dataArea.getCenterY();
         TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, TextAnchor.CENTER);
         hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorLeft(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
+        state.cursorLeft(insets.getLeft() + w + insets.getRight()); // Fixes issue with incorrect cursor positioning
     } else if (edge == RectangleEdge.RIGHT) {
         AffineTransform t = AffineTransform.getRotateInstance(getLabelAngle() + Math.PI / 2.0, labelBounds.getCenterX(), labelBounds.getCenterY());
         Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
@@ -56,7 +56,7 @@
         float labely = (float) (dataArea.getY() + dataArea.getHeight() / 2.0);
         TextUtilities.drawRotatedString(label, g2, labelx, labely, TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, TextAnchor.CENTER);
         hotspot = new Rectangle2D.Float(labelx - w / 2.0f, labely - h / 2.0f, w, h);
-        state.cursorRight(insets.getLeft() + labelBounds.getWidth() + insets.getRight());
+        state.cursorRight(insets.getLeft() + w + insets.getRight()); // Fixes issue with incorrect cursor positioning
     }
     if (plotState != null && hotspot != null) {
         ChartRenderingInfo owner = plotState.getOwner();
