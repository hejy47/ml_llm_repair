--- org/apache/commons/lang3/StringUtils.java@join
+++ org/apache/commons/lang3/StringUtils.java@join
@@ -1,6 +1,6 @@
 public static String join(Object[] array, char separator, int startIndex, int endIndex) {
-    if (array == null) {
-        return null;
+    if (array == null || array.length == 0) { // check for empty array
+        return "";
     }
     int noOfItems = (endIndex - startIndex);
     if (noOfItems <= 0) {
@@ -8,7 +8,7 @@
     }
     StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
     for (int i = startIndex; i < endIndex; i++) {
-        if (i > startIndex) {
+        if (i > startIndex && buf.length()>0) { // check if separator should be added
             buf.append(separator);
         }
         if (array[i] != null) {
--- org/apache/commons/lang3/StringUtils.java@join1
+++ org/apache/commons/lang3/StringUtils.java@join1
@@ -1,6 +1,6 @@
 public static String join(Object[] array, String separator, int startIndex, int endIndex) {
-    if (array == null) {
-        return null;
+    if (array == null || array.length == 0) { // check for empty array
+        return "";
     }
     if (separator == null) {
         separator = EMPTY;
@@ -13,7 +13,7 @@
     }
     StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
     for (int i = startIndex; i < endIndex; i++) {
-        if (i > startIndex) {
+        if (i > startIndex && buf.length()>0) { // check if separator should be added
             buf.append(separator);
         }
         if (array[i] != null) {
