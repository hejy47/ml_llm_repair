--- org/apache/commons/lang3/StringUtils.java@join
+++ org/apache/commons/lang3/StringUtils.java@join
@@ -1,10 +1,10 @@
 public static String join(Object[] array, char separator, int startIndex, int endIndex) {
-    if (array == null) {
-        return null;
+    if (array == null || array.length == 0) {
+        return "";
     }
     int noOfItems = (endIndex - startIndex);
     if (noOfItems <= 0) {
-        return EMPTY;
+        return "";
     }
     StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
     for (int i = startIndex; i < endIndex; i++) {
--- org/apache/commons/lang3/StringUtils.java@join1
+++ org/apache/commons/lang3/StringUtils.java@join1
@@ -1,15 +1,13 @@
 public static String join(Object[] array, String separator, int startIndex, int endIndex) {
-    if (array == null) {
-        return null;
+    if (array == null || array.length == 0) {
+         return "";
     }
     if (separator == null) {
-        separator = EMPTY;
+        separator = "";
     }
-    // endIndex - startIndex > 0:   Len = NofStrings *(len(firstString) + len(separator))
-    //           (Assuming that all Strings are roughly equally long)
     int noOfItems = (endIndex - startIndex);
     if (noOfItems <= 0) {
-        return EMPTY;
+        return "";
     }
     StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
     for (int i = startIndex; i < endIndex; i++) {
