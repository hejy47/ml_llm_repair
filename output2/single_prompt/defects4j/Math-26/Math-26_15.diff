--- org/apache/commons/math3/fraction/Fraction.java@Fraction
+++ org/apache/commons/math3/fraction/Fraction.java@Fraction
@@ -24,9 +24,17 @@
         ++n;
         double r1 = 1.0 / (r0 - a0);
         long a1 = (long) FastMath.floor(r1);
-        p2 = (a1 * p1) + p0;
-        q2 = (a1 * q1) + q0;
-        if ((p2 > overflow) || (q2 > overflow)) {
+        if (a1 > overflow) {
+            throw new FractionConversionException(value, a0, 1L);
+        }
+        p2 = a1 * p1 + p0;
+        q2 = a1 * q1 + q0;
+        if (p2 > overflow || q2 > overflow) {
+            if (epsilon == 0.0 && FastMath.abs(value - (double) p1 / (double) q1) <= FastMath.abs(value - (double) p2 / (double) q2)) {
+                this.numerator = (int) p1;
+                this.denominator = (int) q1;
+                return;
+            }
             throw new FractionConversionException(value, p2, q2);
         }
         double convergent = (double) p2 / (double) q2;
