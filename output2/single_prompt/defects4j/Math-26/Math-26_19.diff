--- org/apache/commons/math3/fraction/Fraction.java@Fraction
+++ org/apache/commons/math3/fraction/Fraction.java@Fraction
@@ -30,25 +30,22 @@
             throw new FractionConversionException(value, p2, q2);
         }
         double convergent = (double) p2 / (double) q2;
-        if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) {
+        // Changed the order of this if statement to check denominator first
+        if (q2 >= maxDenominator || FastMath.abs(convergent - value) < epsilon || n >= maxIterations) {
+            stop = true;
+        } else {
             p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
             a0 = a1;
             r0 = r1;
-        } else {
-            stop = true;
         }
     } while (!stop);
     if (n >= maxIterations) {
         throw new FractionConversionException(value, maxIterations);
-    }
-    if (q2 < maxDenominator) {
+    } else {
         this.numerator = (int) p2;
         this.denominator = (int) q2;
-    } else {
-        this.numerator = (int) p1;
-        this.denominator = (int) q1;
     }
 }
