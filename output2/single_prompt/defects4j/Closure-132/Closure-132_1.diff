--- com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@tryMinimizeIf
+++ com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@tryMinimizeIf
@@ -1,7 +1,7 @@
 private Node tryMinimizeIf(Node n) {
     Node parent = n.getParent();
     Node cond = n.getFirstChild();
-        if (NodeUtil.isLiteralValue(cond, true)) {
+    if (NodeUtil.isLiteralValue(cond, true)) {
         return n;
     }
     Node thenBranch = cond.getNext();
@@ -60,10 +60,10 @@
                     }
                 }
             }
-        }
-        return n;
+            return n;  // Moved return statement to prevent further execution of function
+        }          
     }
-        tryRemoveRepeatedStatements(n);
+    tryRemoveRepeatedStatements(n);
     // if(!x)foo();else bar(); -> if(x)bar();else foo();
     // An additional set of curly braces isn't worth it.
     if (cond.isNot() && !consumesDanglingElse(elseBranch)) {
