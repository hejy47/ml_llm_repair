--- org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java@createMock
+++ org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java@createMock
@@ -2,7 +2,7 @@
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
-    Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(settings.getTypeToMock(), settings.getExtraInterfaces());
+    Class<?> mockedProxyType = cachingMockBytecodeGenerator.get(settings.getTypeToMock(), settings.getExtraInterfaces());
     T mockInstance = null;
     try {
         mockInstance = classInstantiator.instantiate(mockedProxyType);
@@ -13,5 +13,7 @@
         throw new MockitoException(join("ClassCastException occurred while creating the mockito mock :", "  class to mock : " + describeClass(mockedProxyType), "  created class : " + describeClass(settings.getTypeToMock()), "  proxy instance class : " + describeClass(mockInstance), "  instance creation by : " + classInstantiator.getClass().getSimpleName(), "", "You might experience classloading issues, please ask the mockito mailing-list.", ""), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
         throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+    } catch (InstantiationException e) {
+        throw new MockitoException("Unable to create mock instance", e);
     }
 }
