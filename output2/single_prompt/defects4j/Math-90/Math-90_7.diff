--- org/apache/commons/math/stat/Frequency.java@addValue
+++ org/apache/commons/math/stat/Frequency.java@addValue
@@ -1,18 +1,18 @@
 @Deprecated
 public void addValue(Object v) {
-        Object obj = v;
-    if (v instanceof Integer) {
-        obj = Long.valueOf(((Integer) v).longValue());
-    }
-    try {
-        Long count = (Long) freqTable.get(obj);
-        if (count == null) {
-            freqTable.put(obj, Long.valueOf(1));
-        } else {
-            freqTable.put(obj, Long.valueOf(count.longValue() + 1));
+    if (v instanceof Comparable) { // Check if v is comparable
+        Comparable obj = (Comparable) v;
+        try {
+            Long count = (Long) freqTable.get(obj);
+            if (count == null) {
+                freqTable.put(obj, Long.valueOf(1));
+            } else {
+                freqTable.put(obj, Long.valueOf(count.longValue() + 1));
+            }
+        } catch (ClassCastException ex) {
+            throw new IllegalArgumentException("Value not comparable to existing values.");
         }
-    } catch (ClassCastException ex) {
-        //TreeMap will throw ClassCastException if v is not comparable
-        throw new IllegalArgumentException("Value not comparable to existing values.");
+    } else {
+        throw new IllegalArgumentException("Value not comparable to existing values."); // Throw exception if v is not comparable
     }
 }
