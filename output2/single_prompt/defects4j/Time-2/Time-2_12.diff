--- org/joda/time/field/UnsupportedDurationField.java@compareTo
+++ org/joda/time/field/UnsupportedDurationField.java@compareTo
@@ -1,3 +1,7 @@
 public int compareTo(DurationField durationField) {
-    return 0;
+    if (durationField == this) {
+        return 0;
+    } else {
+        return getUnitMillis() - durationField.getUnitMillis();
+    }
 }
--- org/joda/time/Partial.java@Partial
+++ org/joda/time/Partial.java@Partial
@@ -27,7 +27,7 @@
         DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
         if (i > 0) {
             int compare = lastUnitField.compareTo(loopUnitField);
-            if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
+            if (compare > 0 || (compare == 0 && loopUnitField.isSupported() == false)) {
                 throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
             } else if (compare == 0) {
                 if (types[i - 1].getRangeDurationType() == null) {
@@ -40,7 +40,7 @@
                     }
                     DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);
                     DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
-                    if (lastRangeField.compareTo(loopRangeField) < 0) {
+                    if (lastRangeField.compareTo(loopRangeField) > 0) {
                         throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
                     }
                     if (lastRangeField.compareTo(loopRangeField) == 0) {
--- org/joda/time/Partial.java@with
+++ org/joda/time/Partial.java@with
@@ -16,12 +16,12 @@
                 DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
                 if (loopUnitField.isSupported()) {
                     int compare = unitField.compareTo(loopUnitField);
-                    if (compare > 0) {
+                    if (compare < 0) {
                         break;
                     } else if (compare == 0) {
                         DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);
                         DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
-                        if (rangeField.compareTo(loopRangeField) > 0) {
+                        if (rangeField.compareTo(loopRangeField) < 0) {
                             break;
                         }
                     }
