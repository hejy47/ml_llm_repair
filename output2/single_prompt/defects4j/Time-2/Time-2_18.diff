--- org/joda/time/field/UnsupportedDurationField.java@compareTo
+++ org/joda/time/field/UnsupportedDurationField.java@compareTo
@@ -1,3 +1,8 @@
 public int compareTo(DurationField durationField) {
-    return 0;
+    if (durationField == null) {
+        throw new NullPointerException("The DurationField must not be null");
+    }
+    long thisMillis = getUnitMillis();
+    long otherMillis = durationField.getUnitMillis();
+    return (thisMillis < otherMillis ? -1 : (thisMillis == otherMillis ? 0 : 1));
 }
--- org/joda/time/Partial.java@Partial
+++ org/joda/time/Partial.java@Partial
@@ -26,8 +26,8 @@
         DateTimeFieldType loopType = types[i];
         DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
         if (i > 0) {
-            int compare = lastUnitField.compareTo(loopUnitField);
-            if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
+            int compare = loopUnitField.compareTo(lastUnitField);
+            if (compare < 0 || (compare == 0 && !loopUnitField.isSupported())) {
                 throw new IllegalArgumentException("Types array must be in order largest-smallest: " + types[i - 1].getName() + " < " + loopType.getName());
             } else if (compare == 0) {
                 if (types[i - 1].getRangeDurationType() == null) {
@@ -51,7 +51,7 @@
         }
         lastUnitField = loopUnitField;
     }
-    iTypes = (DateTimeFieldType[]) types.clone();
+    iTypes = types.clone();
     chronology.validate(this, values);
-    iValues = (int[]) values.clone();
+    iValues = values.clone();
 }
--- org/joda/time/Partial.java@with
+++ org/joda/time/Partial.java@with
@@ -15,13 +15,13 @@
                 DateTimeFieldType loopType = iTypes[i];
                 DurationField loopUnitField = loopType.getDurationType().getField(iChronology);
                 if (loopUnitField.isSupported()) {
-                    int compare = unitField.compareTo(loopUnitField);
-                    if (compare > 0) {
+                    int compare = loopUnitField.compareTo(unitField);
+                    if (compare < 0) {
                         break;
                     } else if (compare == 0) {
                         DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);
                         DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);
-                        if (rangeField.compareTo(loopRangeField) > 0) {
+                        if (rangeField.compareTo(loopRangeField) < 0) {
                             break;
                         }
                     }
