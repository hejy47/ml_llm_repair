--- com/google/javascript/jscomp/CheckAccessControls.java@checkPropertyVisibility
+++ com/google/javascript/jscomp/CheckAccessControls.java@checkPropertyVisibility
@@ -35,7 +35,7 @@
             if (visibility == Visibility.PRIVATE && !sameInput) {
                 compiler.report(t.makeError(getprop, PRIVATE_OVERRIDE, objectType.toString()));
             } else if (overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility) {
-                compiler.report(t.makeError(getprop, VISIBILITY_MISMATCH, visibility.name(), objectType.toString(), overridingVisibility.name()));
+                compiler.report(t.makeError(getprop, VISIBILITY_MISMATCH, objectType.toString(), propertyName, visibility.name(), overridingVisibility.name()));
             }
         } else {
             if (sameInput) {
@@ -47,7 +47,7 @@
                 }
                 // private access is not allowed outside the file from a different
                 // enclosing class.
-                compiler.report(t.makeError(getprop, BAD_PRIVATE_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName(getprop.getFirstChild(), true)));
+                compiler.report(t.makeError(getprop, BAD_PRIVATE_PROPERTY_ACCESS, validator.getReadableJSTypeName(getprop.getFirstChild(), true), propertyName));
             } else if (visibility == Visibility.PROTECTED) {
                 // There are 3 types of legal accesses of a protected property:
                 // 1) Accesses in the same file
@@ -55,7 +55,7 @@
                 // 3) Accessing the property from inside a subclass
                 // The first two have already been checked for.
                 if (currentClass == null || !currentClass.isSubtype(ownerType)) {
-                    compiler.report(t.makeError(getprop, BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName(getprop.getFirstChild(), true)));
+                    compiler.report(t.makeError(getprop, BAD_PROTECTED_PROPERTY_ACCESS, validator.getReadableJSTypeName(getprop.getFirstChild(), true), propertyName));
                 }
             }
         }
