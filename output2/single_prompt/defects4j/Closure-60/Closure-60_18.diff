--- com/google/javascript/jscomp/NodeUtil.java@getImpureBooleanValue
+++ com/google/javascript/jscomp/NodeUtil.java@getImpureBooleanValue
@@ -23,7 +23,8 @@
             {
                 TernaryValue trueValue = getImpureBooleanValue(n.getFirstChild().getNext());
                 TernaryValue falseValue = getImpureBooleanValue(n.getLastChild());
-                if (trueValue.equals(falseValue)) {
+                if (trueValue == falseValue) {
+                    // changed from equals() to ==
                     return trueValue;
                 } else {
                     return TernaryValue.UNKNOWN;
--- com/google/javascript/jscomp/NodeUtil.java@getPureBooleanValue
+++ com/google/javascript/jscomp/NodeUtil.java@getPureBooleanValue
@@ -1,7 +1,7 @@
 static TernaryValue getPureBooleanValue(Node n) {
     switch(n.getType()) {
         case Token.STRING:
-            return TernaryValue.forBoolean(n.getString().length() > 0);
+            return TernaryValue.forBoolean(n.getString() != null && !n.getString().isEmpty()); // added null check
         case Token.NUMBER:
             return TernaryValue.forBoolean(n.getDouble() != 0);
         case Token.NOT:
@@ -13,7 +13,7 @@
             return TernaryValue.FALSE;
         case Token.NAME:
             String name = n.getString();
-            if ("undefined".equals(name) || "NaN".equals(name)) {
+            if (name != null && ("undefined".equals(name) || "NaN".equals(name))) { // added null and name check
                 // We assume here that programs don't change the value of the keyword
                 // undefined to something other than the value undefined.
                 return TernaryValue.FALSE;
