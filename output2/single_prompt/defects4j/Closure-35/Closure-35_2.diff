--- com/google/javascript/jscomp/TypeInference.java@inferPropertyTypesToMatchConstraint
+++ com/google/javascript/jscomp/TypeInference.java@inferPropertyTypesToMatchConstraint
@@ -11,7 +11,13 @@
                 if (!objType.isPropertyTypeDeclared(prop)) {
                     JSType typeToInfer = propType;
                     if (!objType.hasProperty(prop)) {
-                        typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);
+                        // Check if the propertyType is a function type, assign unknown return type if it is
+                        if (propType.isFunctionType()) {
+                            // The unknown return type should be declared as a "var"
+                            typeToInfer = getNativeType(UNKNOWN_TYPE).withTypeVariable("var");
+                        } else {
+                            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);
+                        }
                     }
                     objType.defineInferredProperty(prop, typeToInfer, null);
                 }
