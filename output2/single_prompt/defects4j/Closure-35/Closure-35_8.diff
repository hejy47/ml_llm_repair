--- com/google/javascript/jscomp/TypeInference.java@inferPropertyTypesToMatchConstraint
+++ com/google/javascript/jscomp/TypeInference.java@inferPropertyTypesToMatchConstraint
@@ -11,7 +11,14 @@
                 if (!objType.isPropertyTypeDeclared(prop)) {
                     JSType typeToInfer = propType;
                     if (!objType.hasProperty(prop)) {
-                        typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);
+                        // check if propType is a function type
+                        if (propType.isFunctionType()) {
+                            // if so, use the VOID_RETURN_TYPE as the inferred type to handle optional/missing parameters
+                            typeToInfer = getNativeType(VOID_RETURN_TYPE);
+                        } else {
+                            // if not, use the propType as the inferred type
+                            typeToInfer = propType;
+                        }
                     }
                     objType.defineInferredProperty(prop, typeToInfer, null);
                 }
