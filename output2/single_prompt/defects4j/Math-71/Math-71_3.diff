--- org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java@integrate
+++ org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java@integrate
@@ -60,7 +60,7 @@
             interpolator.storeTime(stepStart + stepSize);
             if (manager.evaluateStep(interpolator)) {
                 final double dt = manager.getEventTime() - stepStart;
-                if (Math.abs(dt) <= Math.ulp(stepStart)) {
+                if (Math.abs(dt) <= Math.ulp(Math.max(Math.abs(stepStart), Math.abs(stepStart + stepSize)))) {
                     // we cannot simply truncate the step, reject the current computation
                     // and let the loop compute another state with the truncated step.
                     // it is so small (much probably exactly 0 due to limited accuracy)
