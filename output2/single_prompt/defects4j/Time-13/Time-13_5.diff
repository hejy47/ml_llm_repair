--- org/joda/time/format/PeriodFormatterBuilder.java@calculatePrintedLength
+++ org/joda/time/format/PeriodFormatterBuilder.java@calculatePrintedLength
@@ -6,15 +6,15 @@
     int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);
     if (iFieldType >= SECONDS_MILLIS) {
         // valueLong contains the seconds and millis fields
-        // the minimum output is 0.000, which is 4 or 5 digits with a negative
-        sum = Math.max(sum, 4);
+        // the minimum output is 0.000, which is 4 or 5 digits with a decimal point
+        sum = Math.max(sum, 5);
         // plus one for the decimal point
         sum++;
         if (iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0) {
             // remove three digits and decimal point
             sum -= 4;
         }
-        // reset valueLong to refer to the seconds part for the prefic/suffix calculation
+        // reset valueLong to refer to the seconds part for the prefix/suffix calculation
         valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;
     }
     int value = (int) valueLong;
--- org/joda/time/format/PeriodFormatterBuilder.java@printTo
+++ org/joda/time/format/PeriodFormatterBuilder.java@printTo
@@ -4,13 +4,13 @@
         return;
     }
     int value = (int) valueLong;
+    int minDigits = iMinPrintedDigits;
     if (iFieldType >= SECONDS_MILLIS) {
         value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);
     }
     if (iPrefix != null) {
         iPrefix.printTo(buf, value);
     }
-    int minDigits = iMinPrintedDigits;
     if (minDigits <= 1) {
         FormatUtils.appendUnpaddedInteger(buf, value);
     } else {
