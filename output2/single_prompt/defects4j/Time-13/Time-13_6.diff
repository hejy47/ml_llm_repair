--- org/joda/time/format/PeriodFormatterBuilder.java@calculatePrintedLength
+++ org/joda/time/format/PeriodFormatterBuilder.java@calculatePrintedLength
@@ -3,7 +3,16 @@
     if (valueLong == Long.MAX_VALUE) {
         return 0;
     }
-    int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);
+    // use DecimalFormat to get the correct length for the value
+    DecimalFormat decimalFormat = new DecimalFormat();
+    decimalFormat.setGroupingUsed(false);
+    decimalFormat.setDecimalSeparatorAlwaysShown(false);
+    decimalFormat.setMinimumFractionDigits(0);
+    decimalFormat.setMaximumFractionDigits(0);
+    decimalFormat.setMinimumIntegerDigits(iMinPrintedDigits);
+    String valueString = decimalFormat.format(valueLong);
+    int sum = valueString.length();
+
     if (iFieldType >= SECONDS_MILLIS) {
         // valueLong contains the seconds and millis fields
         // the minimum output is 0.000, which is 4 or 5 digits with a negative
@@ -17,12 +26,11 @@
         // reset valueLong to refer to the seconds part for the prefic/suffix calculation
         valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;
     }
-    int value = (int) valueLong;
     if (iPrefix != null) {
-        sum += iPrefix.calculatePrintedLength(value);
+        sum += iPrefix.calculatePrintedLength(valueLong);
     }
     if (iSuffix != null) {
-        sum += iSuffix.calculatePrintedLength(value);
+        sum += iSuffix.calculatePrintedLength(valueLong);
     }
     return sum;
 }
--- org/joda/time/format/PeriodFormatterBuilder.java@printTo
+++ org/joda/time/format/PeriodFormatterBuilder.java@printTo
@@ -3,19 +3,23 @@
     if (valueLong == Long.MAX_VALUE) {
         return;
     }
-    int value = (int) valueLong;
+    // use DecimalFormat to print the value correctly
+    DecimalFormat decimalFormat = new DecimalFormat();
+    decimalFormat.setGroupingUsed(false);
+    decimalFormat.setDecimalSeparatorAlwaysShown(false);
+    decimalFormat.setMinimumFractionDigits(0);
+    decimalFormat.setMaximumFractionDigits(0);
+    decimalFormat.setMinimumIntegerDigits(iMinPrintedDigits);
+    String valueString = decimalFormat.format(valueLong);
+    int value = Integer.parseInt(valueString);
+
     if (iFieldType >= SECONDS_MILLIS) {
         value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);
     }
     if (iPrefix != null) {
         iPrefix.printTo(buf, value);
     }
-    int minDigits = iMinPrintedDigits;
-    if (minDigits <= 1) {
-        FormatUtils.appendUnpaddedInteger(buf, value);
-    } else {
-        FormatUtils.appendPaddedInteger(buf, value, minDigits);
-    }
+    buf.append(valueString); // print the valueString instead of formatting it again
     if (iFieldType >= SECONDS_MILLIS) {
         int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);
         if (iFieldType == SECONDS_MILLIS || dp > 0) {
