--- com/google/javascript/jscomp/TypedScopeCreator.java@maybeDeclareQualifiedName
+++ com/google/javascript/jscomp/TypedScopeCreator.java@maybeDeclareQualifiedName
@@ -52,7 +52,7 @@
         }
     }
     if (valueType == null) {
-        if (parent.isExprResult()) {
+        if (parent.isExprResult() && !qName.startsWith("goog.")) {
             stubDeclarations.add(new StubDeclaration(n, t.getInput() != null && t.getInput().isExtern(), ownerName));
         }
         return;
@@ -63,12 +63,14 @@
     // The problem is that there are two (equally valid) coding styles:
     //
     // (function() {
-    //       //   goog.bar = function() {};
+    //   /* The authoritative definition of goog.bar. */
+    //   goog.bar = function() {};
     // })();
     //
     // function f() {
     //   goog.bar();
-    //       //   goog.bar = function() {};
+    //   /* Reset goog.bar to a no-op. */
+    //   goog.bar = function() {};
     // }
     //
     // In a dynamic language with first-class functions, it's very difficult
@@ -95,8 +97,10 @@
             // declared yet.
             boolean isExtern = t.getInput() != null && t.getInput().isExtern();
             if ((!ownerType.hasOwnProperty(propName) || ownerType.isPropertyTypeInferred(propName)) && ((isExtern && !ownerType.isNativeObjectType()) || !ownerType.isInstanceType())) {
-                // If the property is undeclared or inferred, declare it now.
-                ownerType.defineDeclaredProperty(propName, valueType, n);
+                if (!qName.startsWith("goog.")) {
+                    // If the property is undeclared or inferred, declare it now.
+                    ownerType.defineDeclaredProperty(propName, valueType, n);
+                }
             }
         }
         // If the property is already declared, the error will be
