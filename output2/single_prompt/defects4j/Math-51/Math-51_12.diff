--- org/apache/commons/math/analysis/solvers/BaseSecantSolver.java@doSolve
+++ org/apache/commons/math/analysis/solvers/BaseSecantSolver.java@doSolve
@@ -46,11 +46,15 @@
                     f0 *= 0.5;
                     break;
                 case PEGASUS:
-                    f0 *= f1 / (f1 + fx);
+                    if (f1 != f0) {  // avoid division by zero
+                        f0 *= f1 / (f1 - fx);
+                    }
                     break;
                 // Update formula cannot make any progress: Update the
                 // search interval.
                 default:
+                    x0 = x1;
+                    f0 = f1;
             }
         }
         // Update from [x0, x1] to [x0, x].
@@ -89,7 +93,7 @@
         }
         // If the current interval is within the given accuracies, we
         // are satisfied with the current approximation.
-        if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1), atol)) {
+        if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.max(FastMath.abs(x1), FastMath.abs(x0)), atol)) {
             switch(allowed) {
                 case ANY_SIDE:
                     return x1;
