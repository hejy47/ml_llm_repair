--- org/apache/commons/math3/distribution/DiscreteDistribution.java@sample
+++ org/apache/commons/math3/distribution/DiscreteDistribution.java@sample
@@ -2,8 +2,8 @@
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);
     }
-    final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
-    for (int i = 0; i < sampleSize; i++) {
+    final T[] out = Arrays.copyOf(singletonList.toArray(), sampleSize);
+    for (int i = singletonList.size(); i < sampleSize; i++) {
         out[i] = sample();
     }
     return out;
