--- com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableReadBeforeKill
+++ com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableReadBeforeKill
@@ -11,8 +11,8 @@
     }
     // Expressions are evaluated left-right, depth first.
     for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
-        if (!ControlFlowGraph.isEnteringNewCfgNode(child)) {
-            // Not a FUNCTION
+        if (!ControlFlowGraph.isEnteringNewCfgNode(child) && child.isBlock()) {
+            // Not a FUNCTION and only check block nodes.
             VariableLiveness state = isVariableReadBeforeKill(child, variable);
             if (state != VariableLiveness.MAYBE_LIVE) {
                 return state;
