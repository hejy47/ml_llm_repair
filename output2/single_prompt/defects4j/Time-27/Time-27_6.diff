--- org/joda/time/format/PeriodFormatterBuilder.java@toFormatter
+++ org/joda/time/format/PeriodFormatterBuilder.java@toFormatter
@@ -3,18 +3,19 @@
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
-    if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+    if (size >= 3 && elementPairs.get(0) instanceof Separator) { // Fix: Check if size is >= 3 instead of >=2
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
-    }
-    Object[] comp = createComposite(elementPairs);
-    if (notPrinter) {
-        return new PeriodFormatter(null, (PeriodParser) comp[1]);
-    } else if (notParser) {
-        return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
-        return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
+        Object[] comp = createComposite(elementPairs);
+        if (notPrinter) {
+            return new PeriodFormatter(null, (PeriodParser) comp[1]);
+        } else if (notParser) {
+            return new PeriodFormatter((PeriodPrinter) comp[0], null);
+        } else {
+            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
+        }
     }
 }
