--- com/google/javascript/jscomp/ProcessClosurePrimitives.java@replace
+++ com/google/javascript/jscomp/ProcessClosurePrimitives.java@replace
@@ -21,8 +21,9 @@
                 assignNode.removeChild(nameNode);
                 assignNode.removeChild(valueNode);
                 nameNode.addChildToFront(valueNode);
-                Node varNode = new Node(Token.VAR, nameNode);
+                Node varNode = new Node(Token.VAR, assignNode);
                 varNode.copyInformationFrom(candidateDefinition);
+                varNode.addChildToBack(assignNode);
                 candidateDefinition.getParent().replaceChild(candidateDefinition, varNode);
                 nameNode.setJSDocInfo(assignNode.getJSDocInfo());
                 compiler.reportCodeChange();
@@ -37,7 +38,7 @@
         } else {
             // In this case, the name was implicitly provided by two independent
             // modules. We need to move this code up to a common module.
-            int indexOfDot = namespace.indexOf('.');
+            int indexOfDot = namespace.lastIndexOf('.');
             if (indexOfDot == -1) {
                 // Any old place is fine.
                 compiler.getNodeForCodeInsertion(minimumModule).addChildToBack(replacementNode);
