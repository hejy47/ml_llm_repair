--- org/apache/commons/lang/StringEscapeUtils.java@escapeJava
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJava
@@ -1,5 +1,5 @@
 // Java and JavaScript
 //--------------------------------------------------------------------------
 public static String escapeJava(String str) {
-    return escapeJavaStyleString(str, false);
+    return escapeJavaStyleString(str, true); // changed second parameter to true
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJava1
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJava1
@@ -1,3 +1,3 @@
 public static void escapeJava(Writer out, String str) throws IOException {
-    escapeJavaStyleString(out, str, false);
+    escapeJavaStyleString(out, str, true); // changed third parameter to true
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript
@@ -1,3 +1,3 @@
 public static String escapeJavaScript(String str) {
-    return escapeJavaStyleString(str, true);
+    return escapeJavaStyleString(str, false); // changed second parameter to false
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript3
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript3
@@ -1,3 +1,3 @@
 public static void escapeJavaScript(Writer out, String str) throws IOException {
-    escapeJavaStyleString(out, str, true);
+    escapeJavaStyleString(out, str, false); // changed third parameter to false
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaStyleString5
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaStyleString5
@@ -1,4 +1,4 @@
-private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException { // renamed parameter for consistency
     if (out == null) {
         throw new IllegalArgumentException("The Writer must not be null");
     }
