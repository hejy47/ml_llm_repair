--- org/apache/commons/lang/StringEscapeUtils.java@escapeJava
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJava
@@ -1,5 +1,8 @@
 // Java and JavaScript
 //--------------------------------------------------------------------------
 public static String escapeJava(String str) {
+    if (str == null) {
+        return null;
+    }
     return escapeJavaStyleString(str, false);
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJava1
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJava1
@@ -1,3 +1,6 @@
 public static void escapeJava(Writer out, String str) throws IOException {
+    if (out == null) {
+        throw new IllegalArgumentException("The Writer must not be null");
+    }
     escapeJavaStyleString(out, str, false);
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript
@@ -1,3 +1,6 @@
 public static String escapeJavaScript(String str) {
+    if (str == null) {
+        return null;
+    }
     return escapeJavaStyleString(str, true);
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript3
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaScript3
@@ -1,3 +1,6 @@
 public static void escapeJavaScript(Writer out, String str) throws IOException {
+    if (out == null) {
+        throw new IllegalArgumentException("The Writer must not be null");
+    }
     escapeJavaStyleString(out, str, true);
 }
--- org/apache/commons/lang/StringEscapeUtils.java@escapeJavaStyleString5
+++ org/apache/commons/lang/StringEscapeUtils.java@escapeJavaStyleString5
@@ -1,7 +1,4 @@
 private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
-    if (out == null) {
-        throw new IllegalArgumentException("The Writer must not be null");
-    }
     if (str == null) {
         return;
     }
