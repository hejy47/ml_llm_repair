--- org/apache/commons/lang3/math/NumberUtils.java@isNumber
+++ org/apache/commons/lang3/math/NumberUtils.java@isNumber
@@ -26,7 +26,7 @@
             return true;
         }
     }
-    // don't want to loop to the last char, check it afterwords
+    // don't want to loop to the last char, check it afterward
     sz--;
     // for type qualifiers
     int i = start;
@@ -38,7 +38,7 @@
             allowSigns = false;
         } else if (chars[i] == '.') {
             if (hasDecPoint || hasExp) {
-                // two decimal points or dec in exponent
+                // two decimal points or decimal in exponent
                 return false;
             }
             hasDecPoint = true;
@@ -54,7 +54,7 @@
             hasExp = true;
             allowSigns = true;
         } else if (chars[i] == '+' || chars[i] == '-') {
-            if (!allowSigns) {
+            if (!allowSigns && i != start) {
                 return false;
             }
             allowSigns = false;
@@ -76,7 +76,7 @@
         }
         if (chars[i] == '.') {
             if (hasDecPoint || hasExp) {
-                // two decimal points or dec in exponent
+                // two decimal points or decimal in exponent
                 return false;
             }
             // single trailing decimal point after non-exponent is ok
@@ -87,7 +87,7 @@
         }
         if (chars[i] == 'l' || chars[i] == 'L') {
             // not allowing L with an exponent or decimal point
-            return foundDigit && !hasExp;
+            return foundDigit && !hasExp && !hasDecPoint;
         }
         // last character is illegal
         return false;
