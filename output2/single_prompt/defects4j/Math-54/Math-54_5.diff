--- org/apache/commons/math/dfp/Dfp.java@Dfp
+++ org/apache/commons/math/dfp/Dfp.java@Dfp
@@ -12,6 +12,7 @@
         // Zero or sub-normal
         if (x == 0) {
             // make sure 0 has the right sign
+            sign = (byte) 0;
             return;
         }
         exponent++;
--- org/apache/commons/math/dfp/Dfp.java@toDouble
+++ org/apache/commons/math/dfp/Dfp.java@toDouble
@@ -15,16 +15,12 @@
         y = negate();
         negate = true;
     }
-        int exponent = (int) (y.log10() * 3.32);
-    if (exponent < 0) {
-        exponent--;
-    }
+        int exponent = - (int) Math.ceil(- y.log10() * 3.32);
     Dfp tempDfp = DfpMath.pow(getTwo(), exponent);
     while (tempDfp.lessThan(y) || tempDfp.equals(y)) {
         tempDfp = tempDfp.multiply(2);
         exponent++;
     }
-    exponent--;
         y = y.divide(DfpMath.pow(getTwo(), exponent));
     if (exponent > -1023) {
         y = y.subtract(getOne());
