--- org/apache/commons/math/geometry/euclidean/threed/Rotation.java@Rotation
+++ org/apache/commons/math/geometry/euclidean/threed/Rotation.java@Rotation
@@ -12,6 +12,14 @@
     // adjust v2 in order to have (u1|u2) = (v1'|v2') and (v2'|v2') = (u2|u2)
     double u1u2 = u1.dotProduct(u2);
     double v1v2 = v1.dotProduct(v2);
+    // Ensuring that divide-by-zero errors do not occur
+    if (Double.compare(Math.abs(u1u2), u1u1) == 0 || Double.compare(Math.abs(v1v2), v1v1) == 0) {
+        q0 = 1.0;
+        q1 = 0.0;
+        q2 = 0.0;
+        q3 = 0.0;
+        return;
+    }
     double coeffU = u1u2 / u1u1;
     double coeffV = v1v2 / u1u1;
     double beta = FastMath.sqrt((u2u2 - u1u2 * coeffU) / (v2v2 - v1v2 * coeffV));
