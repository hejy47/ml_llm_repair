--- org/jfree/data/KeyedObjects2D.java@getObject
+++ org/jfree/data/KeyedObjects2D.java@getObject
@@ -8,15 +8,16 @@
     int row = this.rowKeys.indexOf(rowKey);
     if (row < 0) {
         throw new UnknownKeyException("Row key (" + rowKey + ") not recognised.");
+    } else if(row >= this.rows.size()){
+        return null;
     }
     int column = this.columnKeys.indexOf(columnKey);
     if (column < 0) {
         throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
-    }
-    if (row >= 0) {
-        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
-        return rowData.getObject(columnKey);
-    } else {
+    } else if(column >= this.columnKeys.size()){
         return null;
     }
+    KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
+    Object obj = rowData.getObject(columnKey);
+    return obj;
 }
--- org/jfree/data/KeyedObjects2D.java@removeObject
+++ org/jfree/data/KeyedObjects2D.java@removeObject
@@ -1,11 +1,19 @@
 public void removeObject(Comparable rowKey, Comparable columnKey) {
-    setObject(null, rowKey, columnKey);
+    int rowIndex = getRowIndex(rowKey);
+    if (rowIndex < 0 || rowIndex >= this.rows.size()) {
+        return;
+    }
+
+    KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);
+    if (row.getObject(columnKey) == null) {
+        return;
+    }
+    row.removeValue(columnKey);
+
     // 1. check whether the row is now empty.
     boolean allNull = true;
-    int rowIndex = getRowIndex(rowKey);
-    KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);
-    for (int item = 0, itemCount = row.getItemCount(); item < itemCount; item++) {
-        if (row.getObject(item) != null) {
+    for (int i = 0; i < row.getItemCount(); i++) {
+        if (row.getObject(i) != null) {
             allNull = false;
             break;
         }
@@ -15,4 +23,19 @@
         this.rows.remove(rowIndex);
     }
     // 2. check whether the column is now empty.
+    boolean emptyColumn = true;
+    for (int i = 0; i < this.rows.size(); i++) {
+        KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+        if (rowData.getObject(columnKey) != null) {
+            emptyColumn = false;
+            break;
+        }
+    }
+    if (emptyColumn) {
+        this.columnKeys.remove(columnKey);
+        for (int i = 0; i < this.rows.size(); i++) {
+            KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+            rowData.removeValue(columnKey);
+        }
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeRow
+++ org/jfree/data/KeyedObjects2D.java@removeRow
@@ -1,4 +1,7 @@
 public void removeRow(Comparable rowKey) {
-    int index = getRowIndex(rowKey);
-    removeRow(index);
+    int rowIndex = getRowIndex(rowKey);
+    if (rowIndex >= 0 && rowIndex < this.rows.size()) {
+        this.rowKeys.remove(rowIndex);
+        this.rows.remove(rowIndex);
+    }
 }
--- org/jfree/data/KeyedObjects2D.java@removeColumn
+++ org/jfree/data/KeyedObjects2D.java@removeColumn
@@ -2,11 +2,16 @@
     int index = getColumnIndex(columnKey);
     if (index < 0) {
         throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
+    } else if(index >= this.columnKeys.size()){
+        return;
     }
+    
     Iterator iterator = this.rows.iterator();
     while (iterator.hasNext()) {
         KeyedObjects rowData = (KeyedObjects) iterator.next();
-        rowData.removeValue(columnKey);
+        if (rowData.getObject(columnKey) != null) {
+            rowData.removeValue(columnKey);
+        }
     }
     this.columnKeys.remove(columnKey);
 }
