--- org/jfree/data/KeyedObjects2D.java@getObject
+++ org/jfree/data/KeyedObjects2D.java@getObject
@@ -1,22 +1,15 @@
 public Object getObject(Comparable rowKey, Comparable columnKey) {
-    if (rowKey == null) {
-        throw new IllegalArgumentException("Null 'rowKey' argument.");
-    }
-    if (columnKey == null) {
-        throw new IllegalArgumentException("Null 'columnKey' argument.");
-    }
-    int row = this.rowKeys.indexOf(rowKey);
-    if (row < 0) {
-        throw new UnknownKeyException("Row key (" + rowKey + ") not recognised.");
-    }
-    int column = this.columnKeys.indexOf(columnKey);
-    if (column < 0) {
-        throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
-    }
-    if (row >= 0) {
-        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
-        return rowData.getObject(columnKey);
-    } else {
-        return null;
-    }
+   if (rowKey == null) {
+      throw new IllegalArgumentException("Null 'rowKey' argument.");
+   }
+   if (columnKey == null) {
+      throw new IllegalArgumentException("Null 'columnKey' argument.");
+   }
+   int row = this.rowKeys.indexOf(rowKey);
+   int column = this.columnKeys.indexOf(columnKey);
+   if (row < 0 || column < 0) {
+      return null;
+   }
+   KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
+   return rowData.getObject(columnKey);
 }
--- org/jfree/data/KeyedObjects2D.java@removeObject
+++ org/jfree/data/KeyedObjects2D.java@removeObject
@@ -1,18 +1,9 @@
 public void removeObject(Comparable rowKey, Comparable columnKey) {
-    setObject(null, rowKey, columnKey);
-    // 1. check whether the row is now empty.
-    boolean allNull = true;
-    int rowIndex = getRowIndex(rowKey);
-    KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);
-    for (int item = 0, itemCount = row.getItemCount(); item < itemCount; item++) {
-        if (row.getObject(item) != null) {
-            allNull = false;
-            break;
-        }
-    }
-    if (allNull) {
-        this.rowKeys.remove(rowIndex);
-        this.rows.remove(rowIndex);
-    }
-    // 2. check whether the column is now empty.
+   int rowIndex = getRowIndex(rowKey);
+   KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);
+   row.removeValue(columnKey);
+   if (row.getItemCount() == 0) {
+      this.rowKeys.remove(rowIndex);
+      this.rows.remove(rowIndex);
+   }
 }
--- org/jfree/data/KeyedObjects2D.java@removeRow
+++ org/jfree/data/KeyedObjects2D.java@removeRow
@@ -1,4 +1,4 @@
 public void removeRow(Comparable rowKey) {
-    int index = getRowIndex(rowKey);
-    removeRow(index);
+   int index = getRowIndex(rowKey);
+   removeRow(index);
 }
--- org/jfree/data/KeyedObjects2D.java@removeColumn
+++ org/jfree/data/KeyedObjects2D.java@removeColumn
@@ -1,12 +1,16 @@
 public void removeColumn(Comparable columnKey) {
-    int index = getColumnIndex(columnKey);
-    if (index < 0) {
-        throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
-    }
-    Iterator iterator = this.rows.iterator();
-    while (iterator.hasNext()) {
-        KeyedObjects rowData = (KeyedObjects) iterator.next();
-        rowData.removeValue(columnKey);
-    }
-    this.columnKeys.remove(columnKey);
+   int index = getColumnIndex(columnKey);
+   if (index < 0) {
+      throw new UnknownKeyException("Column key (" + columnKey + ") not recognised.");
+   }
+   for (int i = 0; i < this.rows.size(); i++) {
+      KeyedObjects rowData = (KeyedObjects) this.rows.get(i);
+      rowData.removeValue(columnKey);
+      if (rowData.getItemCount() == 0) {
+         this.rowKeys.remove(i);
+         this.rows.remove(i);
+         i--;
+      }
+   }
+   this.columnKeys.remove(columnKey);
 }
