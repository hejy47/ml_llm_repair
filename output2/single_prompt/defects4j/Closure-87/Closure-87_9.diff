--- com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@isFoldableExpressBlock
+++ com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java@isFoldableExpressBlock
@@ -1,15 +1,13 @@
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
-        if (n.hasOneChild()) {
+        if (n.getChildCount() == 1) { //Changed to getChildCount() == 1
             Node maybeExpr = n.getFirstChild();
-            // IE has a bug where event handlers behave differently when
-            // their return value is used vs. when their return value is in
-            // an EXPR_RESULT. It's pretty freaking weird. See:
-            // http://code.google.com/p/closure-compiler/issues/detail?id=291
-            // We try to detect this case, and not fold EXPR_RESULTs
-            // into other expressions.
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
+            if (maybeExpr.getType() == Token.EXPR_RESULT) { //Added check for Token.EXPR_RESULT
+                Node maybeTarget = maybeExpr.getFirstChild();
+                if (maybeTarget.getType() == Token.GETPROP || maybeTarget.getType() == Token.NAME) {
+                    return true;
+                }
+            }
             return NodeUtil.isExpressionNode(maybeExpr);
         }
     }
