--- org/apache/commons/math/fraction/BigFraction.java@doubleValue
+++ org/apache/commons/math/fraction/BigFraction.java@doubleValue
@@ -1,7 +1,10 @@
 @Override
 public double doubleValue() {
+    if (denominator.doubleValue() == 0.0) {
+        return numerator.doubleValue() > 0 ? Double.POSITIVE_INFINITY :
+                numerator.doubleValue() < 0 ? Double.NEGATIVE_INFINITY :
+                        Double.NaN;
+    }
     double result = numerator.doubleValue() / denominator.doubleValue();
-    // Numerator and/or denominator must be out of range:
-    // Calculate how far to shift them to put them in range.
     return result;
 }
--- org/apache/commons/math/fraction/BigFraction.java@floatValue
+++ org/apache/commons/math/fraction/BigFraction.java@floatValue
@@ -1,7 +1,10 @@
 @Override
-public float floatValue() {
-    float result = numerator.floatValue() / denominator.floatValue();
-    // Numerator and/or denominator must be out of range:
-    // Calculate how far to shift them to put them in range.
+public double doubleValue() {
+    if (denominator.doubleValue() == 0.0) {
+        return numerator.doubleValue() > 0 ? Double.POSITIVE_INFINITY :
+                numerator.doubleValue() < 0 ? Double.NEGATIVE_INFINITY :
+                        Double.NaN;
+    }
+    double result = numerator.doubleValue() / denominator.doubleValue();
     return result;
 }
