--- com/google/javascript/jscomp/InlineObjectLiterals.java@replaceAssignmentExpression
+++ com/google/javascript/jscomp/InlineObjectLiterals.java@replaceAssignmentExpression
@@ -25,16 +25,17 @@
     // the parser, otherwise tree equality tests fail.
     nodes = Lists.reverse(nodes);
     replacement = new Node(Token.COMMA);
+    int i = 0;
     Node cur = replacement;
-    int i;
-    for (i = 0; i < nodes.size() - 2; i++) {
-        cur.addChildToFront(nodes.get(i));
+    int max = nodes.size() - 2;
+    while (i < max) {
+        cur.addChildToFront(nodes.get(i++));
         Node t = new Node(Token.COMMA);
         cur.addChildToFront(t);
         cur = t;
     }
+    cur.addChildToFront(nodes.get(i++));
     cur.addChildToFront(nodes.get(i));
-    cur.addChildToFront(nodes.get(i + 1));
     Node replace = ref.getParent();
     replacement.copyInformationFromForTree(replace);
     if (replace.getType() == Token.VAR) {
