--- com/google/javascript/jscomp/InlineVariables.java@inlineNonConstants
+++ com/google/javascript/jscomp/InlineVariables.java@inlineNonConstants
@@ -12,7 +12,10 @@
         } else {
             // Create a new node for variable that is never initialized.
             Node srcLocation = declaration.getNode();
-            value = NodeUtil.newUndefinedNode(srcLocation);
+            value = NodeUtil.newUndefinedNode();
+            value.setStaticSourceFile(srcLocation.getStaticSourceFile());
+            value.setLineno(srcLocation.getLineno());
+            value.setCharno(srcLocation.getCharno());
         }
         Preconditions.checkNotNull(value);
         inlineWellDefinedVariable(v, value, referenceInfo.references);
@@ -44,7 +47,7 @@
         // once is *NOT* correct. We relax the correctness requirement if
         // the variable is declared constant.
         List<Reference> refs = referenceInfo.references;
-        for (int i = 1;         i < refs.size(); i++) {
+        for (int i = 1; i < refs.size(); i++) {
             Node nameNode = refs.get(i).getNode();
             if (aliasCandidates.containsKey(nameNode)) {
                 AliasCandidate candidate = aliasCandidates.get(nameNode);
