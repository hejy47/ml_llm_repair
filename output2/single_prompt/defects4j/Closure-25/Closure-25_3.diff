--- com/google/javascript/jscomp/TypeInference.java@traverseNew
+++ com/google/javascript/jscomp/TypeInference.java@traverseNew
@@ -10,13 +10,15 @@
         } else {
             FunctionType ct = constructorType.toMaybeFunctionType();
             if (ct == null && constructorType instanceof FunctionType) {
-                // If constructorType is a NoObjectType, then toMaybeFunctionType will
-                // return null. But NoObjectType implements the FunctionType
-                // interface, precisely because it can validly construct objects.
                 ct = (FunctionType) constructorType;
             }
             if (ct != null && ct.isConstructor()) {
                 type = ct.getInstanceType();
+            } else if (constructorType instanceof ObjectType) {
+                ObjectType ot = (ObjectType) constructorType;
+                if (ot.getOwnPropertySlot("constructor") != null) {
+                    type = constructorType;
+                }
             }
         }
     }
