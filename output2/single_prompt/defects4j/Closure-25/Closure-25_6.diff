--- com/google/javascript/jscomp/TypeInference.java@traverseNew
+++ com/google/javascript/jscomp/TypeInference.java@traverseNew
@@ -9,11 +9,8 @@
             type = getNativeType(UNKNOWN_TYPE);
         } else {
             FunctionType ct = constructorType.toMaybeFunctionType();
-            if (ct == null && constructorType instanceof FunctionType) {
-                // If constructorType is a NoObjectType, then toMaybeFunctionType will
-                // return null. But NoObjectType implements the FunctionType
-                // interface, precisely because it can validly construct objects.
-                ct = (FunctionType) constructorType;
+            if (ct == null && constructorType instanceof ObjectType) { //Fix: Check if constructorType is an ObjectType instead of FunctionType
+                ct = ((ObjectType) constructorType).getConstructor(); //Fix: Get constructor function from the ObjectType
             }
             if (ct != null && ct.isConstructor()) {
                 type = ct.getInstanceType();
