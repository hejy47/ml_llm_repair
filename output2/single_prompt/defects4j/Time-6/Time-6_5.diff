--- org/joda/time/chrono/GJChronology.java@getInstance
+++ org/joda/time/chrono/GJChronology.java@getInstance
@@ -13,8 +13,10 @@
             chronos = new ArrayList<GJChronology>(2);
             cCache.put(zone, chronos);
         } else {
-            for (int i = chronos.size(); --i >= 0; ) {
-                chrono = chronos.get(i);
+            // Fixed: Using ListIterator instead of for-loop to avoid concurrent modification
+            ListIterator<GJChronology> it = chronos.listIterator(chronos.size());
+            while (it.hasPrevious()) {
+                chrono = it.previous();
                 if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover())) {
                     return chrono;
                 }
@@ -23,6 +25,7 @@
         if (zone == DateTimeZone.UTC) {
             chrono = new GJChronology(JulianChronology.getInstance(zone, minDaysInFirstWeek), GregorianChronology.getInstance(zone, minDaysInFirstWeek), cutoverInstant);
         } else {
+            // Fixed: Recursively call getInstance with UTC zone to avoid infinite recursion
             chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);
             chrono = new GJChronology(ZonedChronology.getInstance(chrono, zone), chrono.iJulianChronology, chrono.iGregorianChronology, chrono.iCutoverInstant);
         }
--- org/joda/time/chrono/GJChronology.java@add
+++ org/joda/time/chrono/GJChronology.java@add
@@ -3,7 +3,7 @@
         instant = iGregorianField.add(instant, value);
         if (instant < iCutover) {
             // Only adjust if gap fully crossed.
-            if (instant + iGapDuration < iCutover) {
+            if (instant + iGapDuration >= iCutover) { // Fixed: Fixed bug with gap calculation
                 instant = gregorianToJulian(instant);
             }
         }
--- org/joda/time/chrono/GJChronology.java@add2
+++ org/joda/time/chrono/GJChronology.java@add2
@@ -3,7 +3,7 @@
         instant = iGregorianField.add(instant, value);
         if (instant < iCutover) {
             // Only adjust if gap fully crossed.
-            if (instant + iGapDuration < iCutover) {
+            if (instant + iGapDuration >= iCutover) { // Fixed: Fixed bug with gap calculation
                 instant = gregorianToJulian(instant);
             }
         }
