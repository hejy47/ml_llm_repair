--- com/google/javascript/jscomp/PeepholeFoldConstants.java@tryFoldShift
+++ com/google/javascript/jscomp/PeepholeFoldConstants.java@tryFoldShift
@@ -6,24 +6,24 @@
         // check ranges.  We do not do anything that would clip the double to
         // a 32-bit range, since the user likely does not intend that.
         if (!(lval >= Integer.MIN_VALUE && lval <= Integer.MAX_VALUE)) {
-            error(BITWISE_OPERAND_OUT_OF_RANGE, left);
+            n.setJSError(BITWISE_OPERAND_OUT_OF_RANGE);
             return n;
         }
         // only the lower 5 bits are used when shifting, so don't do anything
         // if the shift amount is outside [0,32)
         if (!(rval >= 0 && rval < 32)) {
-            error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
+            n.setJSError(SHIFT_AMOUNT_OUT_OF_BOUNDS);
             return n;
         }
         // Convert the numbers to ints
-        int lvalInt = (int) lval;
+        int lvalInt = (int) Math.round(lval);
         if (lvalInt != lval) {
-            error(FRACTIONAL_BITWISE_OPERAND, left);
+            n.setJSError(FRACTIONAL_BITWISE_OPERAND);
             return n;
         }
-        int rvalInt = (int) rval;
+        int rvalInt = (int) Math.round(rval);
         if (rvalInt != rval) {
-            error(FRACTIONAL_BITWISE_OPERAND, right);
+            n.setJSError(FRACTIONAL_BITWISE_OPERAND);
             return n;
         }
         switch(n.getType()) {
