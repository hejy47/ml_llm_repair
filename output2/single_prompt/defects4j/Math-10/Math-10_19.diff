--- org/apache/commons/math3/analysis/differentiation/DSCompiler.java@atan2
+++ org/apache/commons/math3/analysis/differentiation/DSCompiler.java@atan2
@@ -22,20 +22,28 @@
             // 2 * atan(y / (r + x))
             result[resultOffset + i] = 2 * tmp2[i];
         }
+    } else if(y[yOffset] >= 0) {
+        // compute atan2(y, x) = atan(y/x) or  +pi - atan(|y|/|x|) depending on the signs
+        if(x[xOffset] != 0) {
+            // atan2(y, x) = atan(y/x)
+            atan(y, yOffset, x, xOffset, result, resultOffset);
+        } else {
+            // atan2(y, x) = pi/2 * sign(y)
+            result[resultOffset] = y[yOffset] > 0 ? FastMath.PI/2 : -FastMath.PI/2;
+        }
     } else {
-        // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))
-        // r - x
-        subtract(tmp1, 0, x, xOffset, tmp2, 0);
-        // y /(r - x)
-        divide(y, yOffset, tmp2, 0, tmp1, 0);
-        // atan(y / (r - x))
-        atan(tmp1, 0, tmp2, 0);
-        result[resultOffset] = // +/-pi - 2 * atan(y / (r - x))
-        ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0];
-        for (int i = 1; i < tmp2.length; ++i) {
-            // +/-pi - 2 * atan(y / (r - x))
-            result[resultOffset + i] = -2 * tmp2[i];
+        // compute atan2(y, x) = atan(y/x) or  -pi + atan(|y|/|x|) depending on the signs
+        if(x[xOffset] != 0) {
+            // atan2(y, x) = atan(y/x)
+            atan(y, yOffset, x, xOffset, result, resultOffset);
+            for (int i = 0; i < result.length; ++i) {
+                // -pi + atan(|y|/|x|)
+                result[resultOffset + i] = -FastMath.PI + result[resultOffset + i];
+            }
+        } else {
+            // atan2(y, x) = -pi/2 * sign(y)
+            result[resultOffset] = y[yOffset] > 0 ? FastMath.PI/2 : -FastMath.PI/2;
         }
     }
-    // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
+    // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly    
 }
