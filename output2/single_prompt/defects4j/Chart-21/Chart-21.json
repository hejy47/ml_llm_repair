[{"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    // iterate through all items to find min and max values\n    double min = Double.NaN;\n    double max = Double.NaN;\n    int rowCount = this.getRowCount();\n    int columnCount = this.getColumnCount();\n    for (int r = 0; r < rowCount; r++) {\n        for (int c = 0; c < columnCount; c++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (Double.isNaN(min)) {\n                    min = minval;\n                } else if (!Double.isNaN(minval) && minval < min) {\n                    min = minval;\n                }\n                if (Double.isNaN(max)) {\n                    max = maxval;\n                } else if (!Double.isNaN(maxval) && maxval > max) {\n                    max = maxval;\n                }\n            }\n        }\n    }\n    this.minimumRangeValue = min;\n    this.maximumRangeValue = max;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,34 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    // iterate through all items to find min and max values\n+    double min = Double.NaN;\n+    double max = Double.NaN;\n+    int rowCount = this.getRowCount();\n+    int columnCount = this.getColumnCount();\n+    for (int r = 0; r < rowCount; r++) {\n+        for (int c = 0; c < columnCount; c++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n+            if (item != null) {\n+                double minval = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minval = item.getMinOutlier().doubleValue();\n+                }\n+                double maxval = Double.NaN;\n+                if (item.getMaxOutlier() != null) {\n+                    maxval = item.getMaxOutlier().doubleValue();\n+                }\n+                if (Double.isNaN(min)) {\n+                    min = minval;\n+                } else if (!Double.isNaN(minval) && minval < min) {\n+                    min = minval;\n+                }\n+                if (Double.isNaN(max)) {\n+                    max = maxval;\n+                } else if (!Double.isNaN(maxval) && maxval > max) {\n+                    max = maxval;\n+                }\n+            }\n+        }\n+    }\n+    this.minimumRangeValue = min;\n+    this.maximumRangeValue = max;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double[] minMax = calculateMinMaxValues();\n    this.minimumRangeValue = minMax[0];\n    this.maximumRangeValue = minMax[1];\n}\n\nprivate double[] calculateMinMaxValues() {\n    double[] minMax = new double[]{Double.NaN, Double.NaN};\n    for (int row = 0; row < this.data.getRowCount(); row++) {\n        for (int col = 0; col < this.data.getColumnCount(); col++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(row, col);\n            double minval = Double.NaN;\n            if (item.getMinOutlier() != null) {\n                minval = item.getMinOutlier().doubleValue();\n            }\n            double maxval = Double.NaN;\n            if (item.getMaxOutlier() != null) {\n                maxval = item.getMaxOutlier().doubleValue();\n            }\n            if (Double.isNaN(minMax[1])) {\n                minMax[1] = maxval;\n            } else if (maxval > minMax[1]) {\n                minMax[1] = maxval;\n            }\n            if (Double.isNaN(minMax[0])) {\n                minMax[0] = minval;\n            } else if (minval < minMax[0]) {\n                minMax[0] = minval;\n            }\n        }\n    }\n    return minMax;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,5 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double[] minMax = calculateMinMaxValues();\n+    this.minimumRangeValue = minMax[0];\n+    this.maximumRangeValue = minMax[1];\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,4 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n }\n", "finish_reason": "stop", "valid": false, "num": 2}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    // iterate through all items to update min and max bounds\n    double min = Double.NaN;\n    double max = Double.NaN;\n    for (int i = 0; i < this.data.getRowCount(); i++) {\n        for (int j = 0; j < this.data.getColumnCount(); j++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(i, j);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (Double.isNaN(min)) {\n                    min = minval;\n                } else if (minval < min) {\n                    min = minval;\n                }\n                if (Double.isNaN(max)) {\n                    max = maxval;\n                } else if (maxval > max) {\n                    max = maxval;\n                }\n            }\n        }\n    }\n    this.minimumRangeValue = min;\n    this.maximumRangeValue = max;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,32 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    // iterate through all items to update min and max bounds\n+    double min = Double.NaN;\n+    double max = Double.NaN;\n+    for (int i = 0; i < this.data.getRowCount(); i++) {\n+        for (int j = 0; j < this.data.getColumnCount(); j++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(i, j);\n+            if (item != null) {\n+                double minval = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minval = item.getMinOutlier().doubleValue();\n+                }\n+                double maxval = Double.NaN;\n+                if (item.getMaxOutlier() != null) {\n+                    maxval = item.getMaxOutlier().doubleValue();\n+                }\n+                if (Double.isNaN(min)) {\n+                    min = minval;\n+                } else if (minval < min) {\n+                    min = minval;\n+                }\n+                if (Double.isNaN(max)) {\n+                    max = maxval;\n+                } else if (maxval > max) {\n+                    max = maxval;\n+                }\n+            }\n+        }\n+    }\n+    this.minimumRangeValue = min;\n+    this.maximumRangeValue = max;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    boolean minFound = false;\n    boolean maxFound = false;\n    for (int i = 0; i < this.data.getRowCount(); i++) {\n        for (int j = 0; j < this.data.getColumnCount(); j++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(i, j);\n            if (item == null) {\n                continue;\n            }\n            double minval = Double.NaN;\n            if (item.getMinOutlier() != null) {\n                minval = item.getMinOutlier().doubleValue();\n            }\n            double maxval = Double.NaN;\n            if (item.getMaxOutlier() != null) {\n                maxval = item.getMaxOutlier().doubleValue();\n            }\n            if (!Double.isNaN(maxval)) {\n                if (!maxFound) {\n                    this.maximumRangeValue = maxval;\n                    this.maximumRangeValueRow = i;\n                    this.maximumRangeValueColumn = j;\n                    maxFound = true;\n                } else if (maxval > this.maximumRangeValue) {\n                    this.maximumRangeValue = maxval;\n                    this.maximumRangeValueRow = i;\n                    this.maximumRangeValueColumn = j;\n                }\n            }\n            if (!Double.isNaN(minval)) {\n                if (!minFound) {\n                    this.minimumRangeValue = minval;\n                    this.minimumRangeValueRow = i;\n                    this.minimumRangeValueColumn = j;\n                    minFound = true;\n                } else if (minval < this.minimumRangeValue) {\n                    this.minimumRangeValue = minval;\n                    this.minimumRangeValueRow = i;\n                    this.minimumRangeValueColumn = j;\n                }\n            }\n        }\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,35 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n+\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,45 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    boolean minFound = false;\n+    boolean maxFound = false;\n+    for (int i = 0; i < this.data.getRowCount(); i++) {\n+        for (int j = 0; j < this.data.getColumnCount(); j++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(i, j);\n+            if (item == null) {\n+                continue;\n+            }\n+            double minval = Double.NaN;\n+            if (item.getMinOutlier() != null) {\n+                minval = item.getMinOutlier().doubleValue();\n+            }\n+            double maxval = Double.NaN;\n+            if (item.getMaxOutlier() != null) {\n+                maxval = item.getMaxOutlier().doubleValue();\n+            }\n+            if (!Double.isNaN(maxval)) {\n+                if (!maxFound) {\n+                    this.maximumRangeValue = maxval;\n+                    this.maximumRangeValueRow = i;\n+                    this.maximumRangeValueColumn = j;\n+                    maxFound = true;\n+                } else if (maxval > this.maximumRangeValue) {\n+                    this.maximumRangeValue = maxval;\n+                    this.maximumRangeValueRow = i;\n+                    this.maximumRangeValueColumn = j;\n+                }\n+            }\n+            if (!Double.isNaN(minval)) {\n+                if (!minFound) {\n+                    this.minimumRangeValue = minval;\n+                    this.minimumRangeValueRow = i;\n+                    this.minimumRangeValueColumn = j;\n+                    minFound = true;\n+                } else if (minval < this.minimumRangeValue) {\n+                    this.minimumRangeValue = minval;\n+                    this.minimumRangeValueRow = i;\n+                    this.minimumRangeValueColumn = j;\n+                }\n+            }\n+        }\n+    }\n+    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n }\n", "finish_reason": "stop", "valid": true, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n    for (int r = 0; r < this.data.getRowCount(); r++) {\n        for (int c = 0; c < this.data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = this.data.getItem(r, c);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (!Double.isNaN(maxval)) {\n                    if (maxval > this.maximumRangeValue) {\n                        this.maximumRangeValue = maxval;\n                        this.maximumRangeValueRow = r;\n                        this.maximumRangeValueColumn = c;\n                    }\n                }\n                if (!Double.isNaN(minval)) {\n                    if (minval < this.minimumRangeValue) {\n                        this.minimumRangeValue = minval;\n                        this.minimumRangeValueRow = r;\n                        this.minimumRangeValueColumn = c;\n                    }\n                }\n            }\n        }\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,35 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n+    for (int r = 0; r < this.data.getRowCount(); r++) {\n+        for (int c = 0; c < this.data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = this.data.getItem(r, c);\n+            if (item != null) {\n+                double minval = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minval = item.getMinOutlier().doubleValue();\n+                }\n+                double maxval = Double.NaN;\n+                if (item.getMaxOutlier() != null) {\n+                    maxval = item.getMaxOutlier().doubleValue();\n+                }\n+                if (!Double.isNaN(maxval)) {\n+                    if (maxval > this.maximumRangeValue) {\n+                        this.maximumRangeValue = maxval;\n+                        this.maximumRangeValueRow = r;\n+                        this.maximumRangeValueColumn = c;\n+                    }\n+                }\n+                if (!Double.isNaN(minval)) {\n+                    if (minval < this.minimumRangeValue) {\n+                        this.minimumRangeValue = minval;\n+                        this.minimumRangeValueRow = r;\n+                        this.minimumRangeValueColumn = c;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+    fireDatasetChanged();\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    // Check if new range bounds should be set\n    if (this.minimumRangeValue < this.rangeBounds.getLowerBound() || this.maximumRangeValue > this.rangeBounds.getUpperBound()) {\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    }\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -32,6 +32,9 @@\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n     }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+    // Check if new range bounds should be set\n+    if (this.minimumRangeValue < this.rangeBounds.getLowerBound() || this.maximumRangeValue > this.rangeBounds.getUpperBound()) {\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+    }\n     fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,4 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double min = Double.POSITIVE_INFINITY;\n    double max = Double.NEGATIVE_INFINITY;\n    for (int r = 0; r < this.data.getRowCount(); r++) {\n        for (int c = 0; c < this.data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = this.data.getItem(r, c);\n            if (item != null) {\n                double minOutlier = Double.NaN;\n                double maxOutlier = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minOutlier = item.getMinOutlier().doubleValue();\n                }\n                if (item.getMaxOutlier() != null) {\n                    maxOutlier = item.getMaxOutlier().doubleValue();\n                }\n                if (!Double.isNaN(minOutlier) && minOutlier < min) {\n                    min = minOutlier;\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                }\n                if (!Double.isNaN(maxOutlier) && maxOutlier > max) {\n                    max = maxOutlier;\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                }\n            }\n        }\n    }\n    this.minimumRangeValue = min;\n    this.maximumRangeValue = max;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,31 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double min = Double.POSITIVE_INFINITY;\n+    double max = Double.NEGATIVE_INFINITY;\n+    for (int r = 0; r < this.data.getRowCount(); r++) {\n+        for (int c = 0; c < this.data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = this.data.getItem(r, c);\n+            if (item != null) {\n+                double minOutlier = Double.NaN;\n+                double maxOutlier = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minOutlier = item.getMinOutlier().doubleValue();\n+                }\n+                if (item.getMaxOutlier() != null) {\n+                    maxOutlier = item.getMaxOutlier().doubleValue();\n+                }\n+                if (!Double.isNaN(minOutlier) && minOutlier < min) {\n+                    min = minOutlier;\n+                    this.minimumRangeValueRow = r;\n+                    this.minimumRangeValueColumn = c;\n+                }\n+                if (!Double.isNaN(maxOutlier) && maxOutlier > max) {\n+                    max = maxOutlier;\n+                    this.maximumRangeValueRow = r;\n+                    this.maximumRangeValueColumn = c;\n+                }\n+            }\n+        }\n+    }\n+    this.minimumRangeValue = min;\n+    this.maximumRangeValue = max;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double minVal = Double.POSITIVE_INFINITY;\n    double maxVal = Double.NEGATIVE_INFINITY;\n    for (int row = 0; row < data.getRowCount(); row++) {\n        for (int column = 0; column < data.getColumnCount(); column++) {\n            BoxAndWhiskerItem item = data.getItem(row, column);\n            if (item != null) {\n                if (item.getMinOutlier() != null) {\n                    double minOutlierVal = item.getMinOutlier().doubleValue();\n                    if (minOutlierVal < minVal) {\n                        minVal = minOutlierVal;\n                        minimumRangeValueRow = row;\n                        minimumRangeValueColumn = column;\n                    }\n                }\n                if (item.getMaxOutlier() != null) {\n                    double maxOutlierVal = item.getMaxOutlier().doubleValue();\n                    if (maxOutlierVal > maxVal) {\n                        maxVal = maxOutlierVal;\n                        maximumRangeValueRow = row;\n                        maximumRangeValueColumn = column;\n                    }\n                }\n            }\n        }\n    }\n    minimumRangeValue = minVal == Double.POSITIVE_INFINITY ? Double.NaN : minVal;\n    maximumRangeValue = maxVal == Double.NEGATIVE_INFINITY ? Double.NaN : maxVal;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,29 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double minVal = Double.POSITIVE_INFINITY;\n+    double maxVal = Double.NEGATIVE_INFINITY;\n+    for (int row = 0; row < data.getRowCount(); row++) {\n+        for (int column = 0; column < data.getColumnCount(); column++) {\n+            BoxAndWhiskerItem item = data.getItem(row, column);\n+            if (item != null) {\n+                if (item.getMinOutlier() != null) {\n+                    double minOutlierVal = item.getMinOutlier().doubleValue();\n+                    if (minOutlierVal < minVal) {\n+                        minVal = minOutlierVal;\n+                        minimumRangeValueRow = row;\n+                        minimumRangeValueColumn = column;\n+                    }\n+                }\n+                if (item.getMaxOutlier() != null) {\n+                    double maxOutlierVal = item.getMaxOutlier().doubleValue();\n+                    if (maxOutlierVal > maxVal) {\n+                        maxVal = maxOutlierVal;\n+                        maximumRangeValueRow = row;\n+                        maximumRangeValueColumn = column;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    minimumRangeValue = minVal == Double.POSITIVE_INFINITY ? Double.NaN : minVal;\n+    maximumRangeValue = maxVal == Double.NEGATIVE_INFINITY ? Double.NaN : maxVal;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds(r, c);\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    } else if (maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    } else if (minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds(int r, int c) {\n    if (r == this.maximumRangeValueRow && c == this.maximumRangeValueColumn) {\n        this.maximumRangeValue = calculateMaximumRangeValue();\n    } else if (r == this.minimumRangeValueRow && c == this.minimumRangeValueColumn) {\n        this.minimumRangeValue = calculateMinimumRangeValue();\n    }\n}\n\nprivate double calculateMaximumRangeValue() {\n    double max = Double.NaN;\n    int rowCount = this.data.getRowCount();\n    int columnCount = this.data.getColumnCount();\n    for (int r = 0; r < rowCount; r++) {\n        for (int c = 0; c < columnCount; c++) {\n            BoxAndWhiskerItem item = this.data.getItem(r, c);\n            if (item != null && item.getMaxOutlier() != null) {\n                double outlier = item.getMaxOutlier().doubleValue();\n                if (Double.isNaN(max)) {\n                    max = outlier;\n                } else if (outlier > max) {\n                    max = outlier;\n                }\n            }\n        }\n    }\n    return max;\n}\n\nprivate double calculateMinimumRangeValue() {\n    double min = Double.NaN;\n    int rowCount = this.data.getRowCount();\n    int columnCount = this.data.getColumnCount();\n    for (int r = 0; r < rowCount; r++) {\n        for (int c = 0; c < columnCount; c++) {\n            BoxAndWhiskerItem item = this.data.getItem(r, c);\n            if (item != null && item.getMinOutlier() != null) {\n                double outlier = item.getMinOutlier().doubleValue();\n                if (Double.isNaN(min)) {\n                    min = outlier;\n                } else if (outlier < min) {\n                    min = outlier;\n                }\n            }\n        }\n    }\n    return min;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -4,7 +4,7 @@\n     int r = this.data.getRowIndex(rowKey);\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n-        updateBounds();\n+        updateBounds(r, c);\n     }\n     double minval = Double.NaN;\n     if (item.getMinOutlier() != null) {\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateMinMaxValues();\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\nprivate void updateMinMaxValues() {\n    int rowCount = this.data.getRowCount();\n    int columnCount = this.data.getColumnCount();\n    this.minimumRangeValue = Double.NaN;\n    this.maximumRangeValue = Double.NaN;\n    for (int r = 0; r < rowCount; r++) {\n        for (int c = 0; c < columnCount; c++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (Double.isNaN(this.maximumRangeValue)) {\n                    this.maximumRangeValue = maxval;\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                } else if (maxval > this.maximumRangeValue) {\n                    this.maximumRangeValue = maxval;\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                }\n                if (Double.isNaN(this.minimumRangeValue)) {\n                    this.minimumRangeValue = minval;\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                } else if (minval < this.minimumRangeValue) {\n                    this.minimumRangeValue = minval;\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                }\n            }\n        }\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    updateMinMaxValues();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -4,33 +4,7 @@\n     int r = this.data.getRowIndex(rowKey);\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n-        updateBounds();\n-    }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n+        updateMinMaxValues();\n     }\n     this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n     fireDatasetChanged();\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,3 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    updateMinMaxValues();\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n    for (int i = 0; i < this.data.getRowCount(); i++) {\n        for (int j = 0; j < this.data.getColumnCount(); j++) {\n            List<BoxAndWhiskerItem> items = this.data.getObject(i, j);\n            if (items != null) {\n                for (BoxAndWhiskerItem item : items) {\n                    double minval;\n                    if (item.getMinOutlier() != null) {\n                        minval = item.getMinOutlier().doubleValue();\n                        if (minval < this.minimumRangeValue) {\n                            this.minimumRangeValue = minval;\n                        }\n                    }\n                    double maxval;\n                    if (item.getMaxOutlier() != null) {\n                        maxval = item.getMaxOutlier().doubleValue();\n                        if (maxval > this.maximumRangeValue) {\n                            this.maximumRangeValue = maxval;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,29 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n+    for (int i = 0; i < this.data.getRowCount(); i++) {\n+        for (int j = 0; j < this.data.getColumnCount(); j++) {\n+            List<BoxAndWhiskerItem> items = this.data.getObject(i, j);\n+            if (items != null) {\n+                for (BoxAndWhiskerItem item : items) {\n+                    double minval;\n+                    if (item.getMinOutlier() != null) {\n+                        minval = item.getMinOutlier().doubleValue();\n+                        if (minval < this.minimumRangeValue) {\n+                            this.minimumRangeValue = minval;\n+                        }\n+                    }\n+                    double maxval;\n+                    if (item.getMaxOutlier() != null) {\n+                        maxval = item.getMaxOutlier().doubleValue();\n+                        if (maxval > this.maximumRangeValue) {\n+                            this.maximumRangeValue = maxval;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+    fireDatasetChanged();\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    boolean minSet = false;\n    boolean maxSet = false;\n    for (int i = 0; i < this.data.getRowCount(); i++) {\n        for (int j = 0; j < this.data.getColumnCount(); j++) {\n            if (!Double.isNaN(this.data.getMinOutlierValue(i, j))) {\n                if (!minSet || this.data.getMinOutlierValue(i, j) < this.minimumRangeValue) {\n                    this.minimumRangeValue = this.data.getMinOutlierValue(i, j);\n                    this.minimumRangeValueRow = i;\n                    this.minimumRangeValueColumn = j;\n                    minSet = true;\n                }\n            }\n            if (!Double.isNaN(this.data.getMaxOutlierValue(i, j))) {\n                if (!maxSet || this.data.getMaxOutlierValue(i, j) > this.maximumRangeValue) {\n                    this.maximumRangeValue = this.data.getMaxOutlierValue(i, j);\n                    this.maximumRangeValueRow = i;\n                    this.maximumRangeValueColumn = j;\n                    maxSet = true;\n                }\n            }\n        }\n    }\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,24 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    boolean minSet = false;\n+    boolean maxSet = false;\n+    for (int i = 0; i < this.data.getRowCount(); i++) {\n+        for (int j = 0; j < this.data.getColumnCount(); j++) {\n+            if (!Double.isNaN(this.data.getMinOutlierValue(i, j))) {\n+                if (!minSet || this.data.getMinOutlierValue(i, j) < this.minimumRangeValue) {\n+                    this.minimumRangeValue = this.data.getMinOutlierValue(i, j);\n+                    this.minimumRangeValueRow = i;\n+                    this.minimumRangeValueColumn = j;\n+                    minSet = true;\n+                }\n+            }\n+            if (!Double.isNaN(this.data.getMaxOutlierValue(i, j))) {\n+                if (!maxSet || this.data.getMaxOutlierValue(i, j) > this.maximumRangeValue) {\n+                    this.maximumRangeValue = this.data.getMaxOutlierValue(i, j);\n+                    this.maximumRangeValueRow = i;\n+                    this.maximumRangeValueColumn = j;\n+                    maxSet = true;\n+                }\n+            }\n+        }\n+    }\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n    for (int r = 0; r < data.getRowCount(); r++) {\n        for (int c = 0; c < data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) data.getObject(r, c);\n            if (item != null) {\n                Number min = item.getMinOutlier();\n                Number max = item.getMaxOutlier();\n                if (min != null && min.doubleValue() < this.minimumRangeValue) {\n                    this.minimumRangeValue = min.doubleValue();\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                }\n                if (max != null && max.doubleValue() > this.maximumRangeValue) {\n                    this.maximumRangeValue = max.doubleValue();\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                }\n            }\n        }\n    }\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,23 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n+    for (int r = 0; r < data.getRowCount(); r++) {\n+        for (int c = 0; c < data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) data.getObject(r, c);\n+            if (item != null) {\n+                Number min = item.getMinOutlier();\n+                Number max = item.getMaxOutlier();\n+                if (min != null && min.doubleValue() < this.minimumRangeValue) {\n+                    this.minimumRangeValue = min.doubleValue();\n+                    this.minimumRangeValueRow = r;\n+                    this.minimumRangeValueColumn = c;\n+                }\n+                if (max != null && max.doubleValue() > this.maximumRangeValue) {\n+                    this.maximumRangeValue = max.doubleValue();\n+                    this.maximumRangeValueRow = r;\n+                    this.maximumRangeValueColumn = c;\n+                }\n+            }\n+        }\n+    }\n }\n", "finish_reason": "stop", "valid": true, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double min = Double.NaN;\n    double max = Double.NaN;\n    for (int r = 0; r < this.data.getRowCount(); r++) {\n        for (int c = 0; c < this.data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = this.data.getItem(r, c);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (Double.isNaN(min)) {\n                    min = minval;\n                    max = maxval;\n                } else {\n                    if (!Double.isNaN(minval) && minval < min) {\n                        min = minval;\n                    }\n                    if (!Double.isNaN(maxval) && maxval > max) {\n                        max = maxval;\n                    }\n                }\n            }\n        }\n    }\n    this.minimumRangeValue = min;\n    this.maximumRangeValue = max;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,32 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double min = Double.NaN;\n+    double max = Double.NaN;\n+    for (int r = 0; r < this.data.getRowCount(); r++) {\n+        for (int c = 0; c < this.data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = this.data.getItem(r, c);\n+            if (item != null) {\n+                double minval = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minval = item.getMinOutlier().doubleValue();\n+                }\n+                double maxval = Double.NaN;\n+                if (item.getMaxOutlier() != null) {\n+                    maxval = item.getMaxOutlier().doubleValue();\n+                }\n+                if (Double.isNaN(min)) {\n+                    min = minval;\n+                    max = maxval;\n+                } else {\n+                    if (!Double.isNaN(minval) && minval < min) {\n+                        min = minval;\n+                    }\n+                    if (!Double.isNaN(maxval) && maxval > max) {\n+                        max = maxval;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    this.minimumRangeValue = min;\n+    this.maximumRangeValue = max;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || (maxval > this.maximumRangeValue)) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || (minval < this.minimumRangeValue)) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || (maxval > this.maximumRangeValue)) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || (minval < this.minimumRangeValue)) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,4 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    } else {\n        double minval = Double.NaN;\n        if (item.getMinOutlier() != null) {\n            minval = item.getMinOutlier().doubleValue();\n        }\n        double maxval = Double.NaN;\n        if (item.getMaxOutlier() != null) {\n            maxval = item.getMaxOutlier().doubleValue();\n        }\n        if (Double.isNaN(this.maximumRangeValue)) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        } else if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n        if (Double.isNaN(this.minimumRangeValue)) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        } else if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n        fireDatasetChanged();\n    }\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double tempMin = Double.NaN;\n    double tempMax = Double.NaN;\n    for (int r = 0; r < this.data.getRowCount(); r++) {\n        for (int c = 0; c < this.data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n            if (item != null) {\n                double minval = Double.NaN;\n                if (item.getMinOutlier() != null) {\n                    minval = item.getMinOutlier().doubleValue();\n                }\n                double maxval = Double.NaN;\n                if (item.getMaxOutlier() != null) {\n                    maxval = item.getMaxOutlier().doubleValue();\n                }\n                if (Double.isNaN(tempMax) || maxval > tempMax) {\n                    tempMax = maxval;\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                }\n                if (Double.isNaN(tempMin) || minval < tempMin) {\n                    tempMin = minval;\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                }\n            }\n        }\n    }\n    this.maximumRangeValue = tempMax;\n    this.minimumRangeValue = tempMin;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -5,33 +5,34 @@\n     int c = this.data.getColumnIndex(columnKey);\n     if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n         updateBounds();\n+    } else {\n+        double minval = Double.NaN;\n+        if (item.getMinOutlier() != null) {\n+            minval = item.getMinOutlier().doubleValue();\n+        }\n+        double maxval = Double.NaN;\n+        if (item.getMaxOutlier() != null) {\n+            maxval = item.getMaxOutlier().doubleValue();\n+        }\n+        if (Double.isNaN(this.maximumRangeValue)) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        } else if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+        if (Double.isNaN(this.minimumRangeValue)) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        } else if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+        this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n+        fireDatasetChanged();\n     }\n-    double minval = Double.NaN;\n-    if (item.getMinOutlier() != null) {\n-        minval = item.getMinOutlier().doubleValue();\n-    }\n-    double maxval = Double.NaN;\n-    if (item.getMaxOutlier() != null) {\n-        maxval = item.getMaxOutlier().doubleValue();\n-    }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    }\n-    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n-    fireDatasetChanged();\n }\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,31 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double tempMin = Double.NaN;\n+    double tempMax = Double.NaN;\n+    for (int r = 0; r < this.data.getRowCount(); r++) {\n+        for (int c = 0; c < this.data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n+            if (item != null) {\n+                double minval = Double.NaN;\n+                if (item.getMinOutlier() != null) {\n+                    minval = item.getMinOutlier().doubleValue();\n+                }\n+                double maxval = Double.NaN;\n+                if (item.getMaxOutlier() != null) {\n+                    maxval = item.getMaxOutlier().doubleValue();\n+                }\n+                if (Double.isNaN(tempMax) || maxval > tempMax) {\n+                    tempMax = maxval;\n+                    this.maximumRangeValueRow = r;\n+                    this.maximumRangeValueColumn = c;\n+                }\n+                if (Double.isNaN(tempMin) || minval < tempMin) {\n+                    tempMin = minval;\n+                    this.minimumRangeValueRow = r;\n+                    this.minimumRangeValueColumn = c;\n+                }\n+            }\n+        }\n+    }\n+    this.maximumRangeValue = tempMax;\n+    this.minimumRangeValue = tempMin;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (!Double.isNaN(this.maximumRangeValue)) {\n        if (maxval > this.maximumRangeValue) {\n            this.maximumRangeValue = maxval;\n            this.maximumRangeValueRow = r;\n            this.maximumRangeValueColumn = c;\n        }\n    } else {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (!Double.isNaN(this.minimumRangeValue)) {\n        if (minval < this.minimumRangeValue) {\n            this.minimumRangeValue = minval;\n            this.minimumRangeValueRow = r;\n            this.minimumRangeValueColumn = c;\n        }\n    } else {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,24 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (!Double.isNaN(this.maximumRangeValue)) {\n+        if (maxval > this.maximumRangeValue) {\n+            this.maximumRangeValue = maxval;\n+            this.maximumRangeValueRow = r;\n+            this.maximumRangeValueColumn = c;\n+        }\n+    } else {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (!Double.isNaN(this.minimumRangeValue)) {\n+        if (minval < this.minimumRangeValue) {\n+            this.minimumRangeValue = minval;\n+            this.minimumRangeValueRow = r;\n+            this.minimumRangeValueColumn = c;\n+        }\n+    } else {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,4 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    this.minimumRangeValue = Double.POSITIVE_INFINITY;\n+    this.maximumRangeValue = Double.NEGATIVE_INFINITY;\n }\n", "finish_reason": "stop", "valid": false, "num": 1}, {"output": "## Fixed Function 1\npublic void add(BoxAndWhiskerItem item, Comparable rowKey, Comparable columnKey) {\n    this.data.addObject(item, rowKey, columnKey);\n    // update cached min and max values\n    int r = this.data.getRowIndex(rowKey);\n    int c = this.data.getColumnIndex(columnKey);\n    if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn == c) || (this.minimumRangeValueRow == r && this.minimumRangeValueColumn == c)) {\n        updateBounds();\n    }\n    double minval = Double.NaN;\n    if (item.getMinOutlier() != null) {\n        minval = item.getMinOutlier().doubleValue();\n    }\n    double maxval = Double.NaN;\n    if (item.getMaxOutlier() != null) {\n        maxval = item.getMaxOutlier().doubleValue();\n    }\n    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n        this.maximumRangeValue = maxval;\n        this.maximumRangeValueRow = r;\n        this.maximumRangeValueColumn = c;\n    }\n    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n        this.minimumRangeValue = minval;\n        this.minimumRangeValueRow = r;\n        this.minimumRangeValueColumn = c;\n    }\n    this.rangeBounds = new Range(this.minimumRangeValue, this.maximumRangeValue);\n    fireDatasetChanged();\n}\n\n## Fixed Function 2\nprivate void updateBounds() {\n    double minVal = Double.POSITIVE_INFINITY;\n    double maxVal = Double.NEGATIVE_INFINITY;\n    for (int r = 0; r < this.data.getRowCount(); r++) {\n        for (int c = 0; c < this.data.getColumnCount(); c++) {\n            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n            if (item != null) {\n                double minValue = item.getMinOutlier() != null ? item.getMinOutlier().doubleValue() : Double.NaN;\n                if (!Double.isNaN(minValue) && minValue < minVal) {\n                    minVal = minValue;\n                    this.minimumRangeValueRow = r;\n                    this.minimumRangeValueColumn = c;\n                }\n                double maxValue = item.getMaxOutlier() != null ? item.getMaxOutlier().doubleValue() : Double.NaN;\n                if (!Double.isNaN(maxValue) && maxValue > maxVal) {\n                    maxVal = maxValue;\n                    this.maximumRangeValueRow = r;\n                    this.maximumRangeValueColumn = c;\n                }\n            }\n        }\n    }\n    this.minimumRangeValue = minVal == Double.POSITIVE_INFINITY ? Double.NaN : minVal;\n    this.maximumRangeValue = maxVal == Double.NEGATIVE_INFINITY ? Double.NaN : maxVal;\n}", "diff": "--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@add\n@@ -14,20 +14,12 @@\n     if (item.getMaxOutlier() != null) {\n         maxval = item.getMaxOutlier().doubleValue();\n     }\n-    if (Double.isNaN(this.maximumRangeValue)) {\n-        this.maximumRangeValue = maxval;\n-        this.maximumRangeValueRow = r;\n-        this.maximumRangeValueColumn = c;\n-    } else if (maxval > this.maximumRangeValue) {\n+    if (Double.isNaN(this.maximumRangeValue) || maxval > this.maximumRangeValue) {\n         this.maximumRangeValue = maxval;\n         this.maximumRangeValueRow = r;\n         this.maximumRangeValueColumn = c;\n     }\n-    if (Double.isNaN(this.minimumRangeValue)) {\n-        this.minimumRangeValue = minval;\n-        this.minimumRangeValueRow = r;\n-        this.minimumRangeValueColumn = c;\n-    } else if (minval < this.minimumRangeValue) {\n+    if (Double.isNaN(this.minimumRangeValue) || minval < this.minimumRangeValue) {\n         this.minimumRangeValue = minval;\n         this.minimumRangeValueRow = r;\n         this.minimumRangeValueColumn = c;\n--- org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n+++ org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java@updateBounds\n@@ -1,4 +1,25 @@\n private void updateBounds() {\n-    this.minimumRangeValue = Double.NaN;\n-    this.maximumRangeValue = Double.NaN;\n+    double minVal = Double.POSITIVE_INFINITY;\n+    double maxVal = Double.NEGATIVE_INFINITY;\n+    for (int r = 0; r < this.data.getRowCount(); r++) {\n+        for (int c = 0; c < this.data.getColumnCount(); c++) {\n+            BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(r, c);\n+            if (item != null) {\n+                double minValue = item.getMinOutlier() != null ? item.getMinOutlier().doubleValue() : Double.NaN;\n+                if (!Double.isNaN(minValue) && minValue < minVal) {\n+                    minVal = minValue;\n+                    this.minimumRangeValueRow = r;\n+                    this.minimumRangeValueColumn = c;\n+                }\n+                double maxValue = item.getMaxOutlier() != null ? item.getMaxOutlier().doubleValue() : Double.NaN;\n+                if (!Double.isNaN(maxValue) && maxValue > maxVal) {\n+                    maxVal = maxValue;\n+                    this.maximumRangeValueRow = r;\n+                    this.maximumRangeValueColumn = c;\n+                }\n+            }\n+        }\n+    }\n+    this.minimumRangeValue = minVal == Double.POSITIVE_INFINITY ? Double.NaN : minVal;\n+    this.maximumRangeValue = maxVal == Double.NEGATIVE_INFINITY ? Double.NaN : maxVal;\n }\n", "finish_reason": "stop", "valid": true, "num": 1}]