--- com/google/javascript/jscomp/TypeCheck.java@visitCall
+++ com/google/javascript/jscomp/TypeCheck.java@visitCall
@@ -15,7 +15,7 @@
         if (functionJSDocInfo != null) {
             String sourceName = functionJSDocInfo.getSourceName();
             CompilerInput functionSource = compiler.getInput(sourceName);
-            isExtern = functionSource.isExtern();
+            isExtern = functionSource != null && functionSource.isExtern();
         }
         // Non-native constructors should not be called directly
         // unless they specify a return type and are defined
@@ -23,14 +23,15 @@
         if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {
             report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
         }
-        // Functions with explcit 'this' types must be called in a GETPROP
+        // Functions with explicit 'this' types must be called in a GETPROP
         // or GETELEM.
         visitParameterList(t, n, functionType);
         ensureTyped(t, n, functionType.getReturnType());
     } else {
         ensureTyped(t, n);
     }
-    // TODO: Add something to check for calls of RegExp objects, which is not
-    // supported by IE.  Either say something about the return type or warn
-    // about the non-portability of the call or both.
+    // Checking calls of RegExp objects
+    if (childType.isSubtype(regExpType)) {
+        report(t, n, REGEXP_IS_NOT_CALLABLE, childType.toString());
+    }
 }
