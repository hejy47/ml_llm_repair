--- com/google/javascript/jscomp/TypeCheck.java@checkInterfaceConflictProperties
+++ com/google/javascript/jscomp/TypeCheck.java@checkInterfaceConflictProperties
@@ -1,9 +1,6 @@
 private void checkInterfaceConflictProperties(NodeTraversal t, Node n, String functionName, HashMap<String, ObjectType> properties, HashMap<String, ObjectType> currentProperties, ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
-    Set<String> currentPropertyNames;
-    // This can be the case if interfaceType is proxy to a non-existent
-    // object (which is a bad type annotation, but shouldn't crash).
-    currentPropertyNames = implicitProto.getOwnPropertyNames();
+    Set<String> currentPropertyNames = implicitProto != null ? implicitProto.getOwnPropertyNames() : Collections.emptySet(); // Add null check here
     for (String name : currentPropertyNames) {
         ObjectType oType = properties.get(name);
         if (oType != null) {
