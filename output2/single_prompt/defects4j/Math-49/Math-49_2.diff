--- org/apache/commons/math/linear/OpenMapRealVector.java@ebeDivide
+++ org/apache/commons/math/linear/OpenMapRealVector.java@ebeDivide
@@ -1,10 +1,9 @@
 public OpenMapRealVector ebeDivide(RealVector v) {
     checkVectorDimensions(v.getDimension());
     OpenMapRealVector res = new OpenMapRealVector(this);
-    Iterator iter = res.entries.iterator();
-    while (iter.hasNext()) {
-        iter.advance();
-        res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
+    double[] data = res.getData();
+    for (int i = 0; i < data.length; i++) {
+        data[i] /= v.getEntry(i);
     }
     return res;
 }
--- org/apache/commons/math/linear/OpenMapRealVector.java@ebeDivide1
+++ org/apache/commons/math/linear/OpenMapRealVector.java@ebeDivide1
@@ -2,10 +2,9 @@
 public OpenMapRealVector ebeDivide(double[] v) {
     checkVectorDimensions(v.length);
     OpenMapRealVector res = new OpenMapRealVector(this);
-    Iterator iter = res.entries.iterator();
-    while (iter.hasNext()) {
-        iter.advance();
-        res.setEntry(iter.key(), iter.value() / v[iter.key()]);
+    double[] data = res.getData();
+    for (int i = 0; i < data.length; i++) {
+        data[i] /= v[i];
     }
     return res;
 }
--- org/apache/commons/math/linear/OpenMapRealVector.java@ebeMultiply
+++ org/apache/commons/math/linear/OpenMapRealVector.java@ebeMultiply
@@ -1,10 +1,9 @@
 public OpenMapRealVector ebeMultiply(RealVector v) {
     checkVectorDimensions(v.getDimension());
     OpenMapRealVector res = new OpenMapRealVector(this);
-    Iterator iter = res.entries.iterator();
-    while (iter.hasNext()) {
-        iter.advance();
-        res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
+    double[] data = res.getData();
+    for (int i = 0; i < data.length; i++) {
+        data[i] *= v.getEntry(i);
     }
     return res;
 }
--- org/apache/commons/math/linear/OpenMapRealVector.java@ebeMultiply3
+++ org/apache/commons/math/linear/OpenMapRealVector.java@ebeMultiply3
@@ -1,11 +1,10 @@
 @Override
-public OpenMapRealVector ebeMultiply(double[] v) {
+public OpenMapRealVector ebeDivide(double[] v) {
     checkVectorDimensions(v.length);
     OpenMapRealVector res = new OpenMapRealVector(this);
-    Iterator iter = res.entries.iterator();
-    while (iter.hasNext()) {
-        iter.advance();
-        res.setEntry(iter.key(), iter.value() * v[iter.key()]);
+    double[] data = res.getData();
+    for (int i = 0; i < data.length; i++) {
+        data[i] /= v[i];
     }
     return res;
 }
