--- org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java@squareRoot
+++ org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java@squareRoot
@@ -1,4 +1,11 @@
 private RealMatrix squareRoot(RealMatrix m) {
-    final EigenDecomposition dec = new EigenDecomposition(m);
-    return dec.getSquareRoot();
+    RealMatrix result;
+    try {
+        final EigenDecomposition dec = new EigenDecomposition(m);
+        result = dec.getSquareRoot();
+    } catch (NotPositiveDefiniteMatrixException ex) {
+        result = new LUDecomposition(m).getSolver().getInverse();
+        result = result.multiply(result.transpose());
+    }
+    return result;
 }
--- org/apache/commons/math3/optim/nonlinear/vector/Weight.java@Weight
+++ org/apache/commons/math3/optim/nonlinear/vector/Weight.java@Weight
@@ -1,7 +1,4 @@
 public Weight(double[] weight) {
     final int dim = weight.length;
-    weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim);
-    for (int i = 0; i < dim; i++) {
-        weightMatrix.setEntry(i, i, weight[i]);
-    }
+    weightMatrix = MatrixUtils.createRealDiagonalMatrix(weight);
 }
