--- org/apache/commons/math3/optimization/linear/SimplexTableau.java@dropPhase1Objective
+++ org/apache/commons/math3/optimization/linear/SimplexTableau.java@dropPhase1Objective
@@ -19,14 +19,17 @@
         }
     }
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-    for (int i = 1; i < getHeight(); i++) {
-        int col = 0;
-        for (int j = 0; j < getWidth(); j++) {
-            if (!columnsToDrop.contains(j)) {
-                matrix[i - 1][col++] = tableau.getEntry(i, j);
-            }
-        }
+    int col = 0; // Initialize col variable here
+    for (int j = 0; j < getWidth(); j++) {
+         if (!columnsToDrop.contains(j)) {
+             for (int i = 1; i < getHeight(); i++) {
+                 matrix[i - 1][col] = tableau.getEntry(i, j);
+             }
+             columnLabels.set(col, columnLabels.get(j)); // Update column labels here
+             col++;
+         }
     }
+    columnLabels.subList(getWidth() - columnsToDrop.size(), getWidth()).clear(); // Remove unused column labels
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
         columnLabels.remove((int) columnsToDrop.get(i));
     }
