--- com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableStillLiveWithinExpression
+++ com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableStillLiveWithinExpression
@@ -26,5 +26,9 @@
         }
         n = n.getParent();
     }
+    // Add a check for the variable being read in the exprRoot
+    if (isVariableReadBeforeKill(exprRoot, variable) == VariableLiveness.READ) {
+        return true;
+    }
     return false;
 }
--- com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableReadBeforeKill
+++ com/google/javascript/jscomp/DeadAssignmentsElimination.java@isVariableReadBeforeKill
@@ -29,8 +29,12 @@
                 if (!ControlFlowGraph.isEnteringNewCfgNode(child)) {
                     // Not a FUNCTION
                     VariableLiveness state = isVariableReadBeforeKill(child, variable);
-                    if (state != VariableLiveness.MAYBE_LIVE) {
+                    if (state == VariableLiveness.READ) {
                         return state;
+                    } else if (state == VariableLiveness.KILL) {
+                        // If the child killed the variable, then we know it won't be read again
+                        // in this node or any other siblings, so we can return immediately.
+                        return VariableLiveness.KILL;
                     }
                 }
             }
