--- org/apache/commons/lang3/time/FastDatePrinter.java@TimeZoneNameRule
+++ org/apache/commons/lang3/time/FastDatePrinter.java@TimeZoneNameRule
@@ -1,7 +1,25 @@
 TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {
-    mLocale = locale;
-    mStyle = style;
-    zone = timeZone;
-    mStandard = getTimeZoneDisplay(timeZone, false, style, locale);
-    mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);
+        mLocale = locale;
+        mStyle = style;
+        zone = timeZone;
+        mStandard = getTimeZoneDisplay(timeZone, false, style, locale);
+        mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);
+    }
+
+    public void addPattern(List pattern) {
+        pattern.add(new TimeZoneNameRuleVariable(this, true));
+        pattern.add(new TimeZoneNameRuleVariable(this, false));
+    }
+
+    public void appendTo(StringBuffer buffer, Calendar calendar) {
+        if (zone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
+            buffer.append(mDaylight);
+        } else {
+            buffer.append(mStandard);
+        }
+    }
+
+    private String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {
+        // implementation details
+    }
 }
--- org/apache/commons/lang3/time/FastDatePrinter.java@appendTo
+++ org/apache/commons/lang3/time/FastDatePrinter.java@appendTo
@@ -1,8 +1,10 @@
 @Override
-public void appendTo(StringBuffer buffer, Calendar calendar) {
+public void format(LoggingEvent event, StringBuffer output) {
+    // implementation details
     if (zone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
-        buffer.append(getTimeZoneDisplay(zone, true, mStyle, mLocale));
+        output.append(getTimeZoneDisplay(zone, true, mStyle, mLocale));
     } else {
-        buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));
+        output.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));
     }
+    // implementation details
 }
