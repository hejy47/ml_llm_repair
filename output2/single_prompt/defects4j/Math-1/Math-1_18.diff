--- org/apache/commons/math3/fraction/BigFraction.java@BigFraction
+++ org/apache/commons/math3/fraction/BigFraction.java@BigFraction
@@ -1,5 +1,5 @@
 private BigFraction(final double value, final double epsilon, final int maxDenominator, int maxIterations) throws FractionConversionException {
-    long overflow = Integer.MAX_VALUE;
+    long overflow = Long.MAX_VALUE; //Change Integer.MAX_VALUE to Long.MAX_VALUE
     double r0 = value;
     long a0 = (long) FastMath.floor(r0);
     if (a0 > overflow) {
--- org/apache/commons/math3/fraction/Fraction.java@Fraction
+++ org/apache/commons/math3/fraction/Fraction.java@Fraction
@@ -1,5 +1,5 @@
 private Fraction(double value, double epsilon, int maxDenominator, int maxIterations) throws FractionConversionException {
-    long overflow = Integer.MAX_VALUE;
+    long overflow = Long.MAX_VALUE; //Change Integer.MAX_VALUE to Long.MAX_VALUE
     double r0 = value;
     long a0 = (long) FastMath.floor(r0);
     if (FastMath.abs(a0) > overflow) {
