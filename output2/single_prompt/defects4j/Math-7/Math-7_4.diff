--- org/apache/commons/math3/ode/AbstractIntegrator.java@acceptStep
+++ org/apache/commons/math3/ode/AbstractIntegrator.java@acceptStep
@@ -12,7 +12,7 @@
     final int orderingSign = interpolator.isForward() ? +1 : -1;
     SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {
 
-                public int compare(EventState es0, EventState es1) {
+        public int compare(EventState es0, EventState es1) {
             return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());
         }
     });
@@ -53,8 +53,8 @@
         if (needReset) {
             // some event handler has triggered changes that
             // invalidate the derivatives, we need to recompute them
+            computeDerivatives(eventT, eventY, yDot);
             System.arraycopy(eventY, 0, y, 0, y.length);
-            computeDerivatives(eventT, y, yDot);
             resetOccurred = true;
             for (final EventState remaining : occuringEvents) {
                 remaining.stepAccepted(eventT, eventY);
