--- com/google/javascript/jscomp/CollapseProperties.java@inlineAliases
+++ com/google/javascript/jscomp/CollapseProperties.java@inlineAliases
@@ -4,10 +4,10 @@
     while (!workList.isEmpty()) {
         Name name = workList.pop();
         // Don't attempt to inline a getter or setter property as a variable.
-        if (name.type == Name.Type.GET || name.type == Name.Type.SET) {
+        if (name.getType() == Name.Type.GET || name.getType() == Name.Type.SET) {
             continue;
         }
-        if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0) {
+        if (name.getGlobalSets() == 1 && name.getLocalSets() == 0 && name.getAliasingGets() > 0) {
             // {@code name} meets condition (b). Find all of its local aliases
             // and try to inline them.
             List<Ref> refs = Lists.newArrayList(name.getRefs());
@@ -22,10 +22,10 @@
         }
         // Check if {@code name} has any aliases left after the
         // local-alias-inlining above.
-        if ((name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION) && name.aliasingGets == 0 && name.props != null) {
+        if ((name.getType() == Name.Type.OBJECTLIT || name.getType() == Name.Type.FUNCTION) && name.getAliasingGets() == 0 && name.getProps() != null) {
             // All of {@code name}'s children meet condition (a), so they can be
             // added to the worklist.
-            workList.addAll(name.props);
+            workList.addAll(name.getProps());
         }
     }
 }
