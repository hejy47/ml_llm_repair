--- org/joda/time/format/DateTimeFormatter.java@parseInto
+++ org/joda/time/format/DateTimeFormatter.java@parseInto
@@ -4,11 +4,18 @@
     if (instant == null) {
         throw new IllegalArgumentException("Instant must not be null");
     }
-    long instantMillis = instant.getMillis();
     Chronology chrono = instant.getChronology();
-    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+    DateTimeZone zone = instant.getZone();
+    long instantLocal = 0L;
+    if(zone != null){
+        instantLocal = instant.toDateTime(zone).getMillis();
+    } else {
+        instantLocal = instant.getMillis();    
+    }
+    long instantMillis = instantLocal;
+    instantMillis = instantMillis + chrono.getZone().getOffset(instantMillis);
     chrono = selectChronology(chrono);
-    DateTimeParserBucket bucket = new DateTimeParserBucket(instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
+    DateTimeParserBucket bucket = new DateTimeParserBucket(instantMillis, chrono, iLocale, iPivotYear, iDefaultYear);
     int newPos = parser.parseInto(bucket, text, position);
     instant.setMillis(bucket.computeMillis(false, text));
     if (iOffsetParsed && bucket.getOffsetInteger() != null) {
