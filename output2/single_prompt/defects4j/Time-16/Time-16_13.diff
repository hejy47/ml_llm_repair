--- org/joda/time/format/DateTimeFormatter.java@parseInto
+++ org/joda/time/format/DateTimeFormatter.java@parseInto
@@ -13,12 +13,20 @@
     instant.setMillis(bucket.computeMillis(false, text));
     if (iOffsetParsed && bucket.getOffsetInteger() != null) {
         int parsedOffset = bucket.getOffsetInteger();
-        DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
-        chrono = chrono.withZone(parsedZone);
+        DateTimeZone parsedZone = null;
+        try {
+            parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
+        } catch (IllegalArgumentException ex) {
+            // Do nothing, keep using existing zone
+        }
+        if (parsedZone != null) {
+            chrono = chrono.withZone(parsedZone);
+            instant.setChronology(chrono);
+        }
     } else if (bucket.getZone() != null) {
         chrono = chrono.withZone(bucket.getZone());
+        instant.setChronology(chrono);
     }
-    instant.setChronology(chrono);
     if (iZone != null) {
         instant.setZone(iZone);
     }
