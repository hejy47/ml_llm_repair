--- com/google/javascript/jscomp/PrepareAst.java@annotateCalls
+++ com/google/javascript/jscomp/PrepareAst.java@annotateCalls
@@ -1,6 +1,6 @@
 private void annotateCalls(Node n) {
     Preconditions.checkState(n.isCall());
-    // Keep track of of the "this" context of a call.  A call without an
+    // Keep track of the "this" context of a call.  A call without an
     // explicit "this" is a free call.
     Node first = n.getFirstChild();
     // ignore cast nodes.
@@ -10,6 +10,10 @@
     // Keep track of the context in which eval is called. It is important
     // to distinguish between "(0, eval)()" and "eval()".
     if (first.isName() && "eval".equals(first.getString())) {
-        first.putBooleanProp(Node.DIRECT_EVAL, true);
+        Node parent = n.getParent();
+        if (parent != null && parent.isExprResult() && parent.getFirstChild() == n) {
+            // this is a direct call to eval
+            first.putBooleanProp(Node.DIRECT_EVAL, true);
+        }
     }
 }
