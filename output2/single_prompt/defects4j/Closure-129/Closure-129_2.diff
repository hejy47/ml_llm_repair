--- com/google/javascript/jscomp/PrepareAst.java@annotateCalls
+++ com/google/javascript/jscomp/PrepareAst.java@annotateCalls
@@ -1,15 +1,20 @@
 private void annotateCalls(Node n) {
     Preconditions.checkState(n.isCall());
-    // Keep track of of the "this" context of a call.  A call without an
+    // Keep track of the "this" context of a call.  A call without an
     // explicit "this" is a free call.
     Node first = n.getFirstChild();
     // ignore cast nodes.
     if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
+    } else {
+        n.putBooleanProp(Node.FREE_CALL, false); //fix:add else condition
     }
     // Keep track of the context in which eval is called. It is important
     // to distinguish between "(0, eval)()" and "eval()".
     if (first.isName() && "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
     }
+    else { //fix: add else condition
+        first.setBooleanProp(Node.DIRECT_EVAL, false);
+    }
 }
