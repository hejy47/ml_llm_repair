--- com/google/javascript/jscomp/TypedScopeCreator.java@getDeclaredType
+++ com/google/javascript/jscomp/TypedScopeCreator.java@getDeclaredType
@@ -15,13 +15,13 @@
         } else {
             // Check if this is constant, and if it has a known type.
             if (info.isConstant()) {
-                JSType knownType = null;
                 if (rValue != null) {
-                    if (rValue.getJSType() != null && !rValue.getJSType().isUnknownType()) {
+                    JSType rValueType = rValue.getJSType();
+                    if (rValueType != null && !rValueType.isUnknownType()) {
                         // If rValue has a type-cast, we use the type in the type-cast.
                         // If rValue's type was already computed during scope creation,
                         // then we can safely use that.
-                        return rValue.getJSType();
+                        return rValueType;
                     } else if (rValue.isOr()) {
                         // Check for a very specific JS idiom:
                         // var x = x || TYPE;
@@ -30,8 +30,9 @@
                         Node firstClause = rValue.getFirstChild();
                         Node secondClause = firstClause.getNext();
                         boolean namesMatch = firstClause.isName() && lValue.isName() && firstClause.getString().equals(lValue.getString());
-                        if (namesMatch && secondClause.getJSType() != null && !secondClause.getJSType().isUnknownType()) {
-                            return secondClause.getJSType();
+                        JSType secondClauseType = secondClause.getJSType();
+                        if (namesMatch && secondClauseType != null && !secondClauseType.isUnknownType()) {
+                            return secondClauseType;
                         }
                     }
                 }
